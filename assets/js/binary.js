// meta={"simUrl":"https://trg-arcade.userpxt.io/v1.12.56/---simulator","cdnUrl":"https://pxt.azureedge.net","version":"0.0.19","target":"arcade","targetVersion":"1.12.56","repo":"humanapp/dot"}
// total=1905251 new=18.31% cached=77.43% other=4.26%
(function (ectx) {
'use strict';
const runtime = ectx.runtime;
const oops = ectx.oops;
const doNothing = ectx.doNothing;
const pxsim = ectx.pxsim;
const globals = ectx.globals;
const maybeYield = ectx.maybeYield;
const setupDebugger = ectx.setupDebugger;
const isBreakFrame = ectx.isBreakFrame;
const breakpoint = ectx.breakpoint;
const trace = ectx.trace;
const checkStack = ectx.checkStack;
const leave = ectx.leave;
const checkResumeConsumed = ectx.checkResumeConsumed;
const setupResume = ectx.setupResume;
const setupLambda = ectx.setupLambda;
const checkSubtype = ectx.checkSubtype;
const failedCast = ectx.failedCast;
const buildResume = ectx.buildResume;
const mkVTable = ectx.mkVTable;
const bind = ectx.bind;
const leaveAccessor = ectx.leaveAccessor;
const __this = runtime;
const pxtrt = pxsim.pxtrt;
let yieldSteps = 1;
ectx.setupYield(function() { yieldSteps = 100; })
pxsim.setTitle("dot");
pxsim.setConfigData({
 "37": 160,
 "38": 120
}, {
 "DISPLAY_WIDTH": 37,
 "DISPLAY_HEIGHT": 38
});
pxtrt.mapKeyNames = [
 "",
 "Left",
 "Right",
 "_A",
 "_B",
 "_Down",
 "_Left",
 "_Right",
 "_Up",
 "__draw",
 "__drawCore",
 "__preUpdate",
 "__update",
 "__visible",
 "_action",
 "_add",
 "_ax",
 "_ay",
 "_block",
 "_col",
 "_collisions",
 "_connected",
 "_controlledSprites",
 "_data",
 "_destroyCore",
 "_dt",
 "_factory",
 "_fx",
 "_fy",
 "_gen",
 "_height",
 "_hitbox",
 "_id",
 "_image",
 "_isPressed",
 "_items",
 "_justPressed",
 "_justReleased",
 "_kind",
 "_kindsOverlappedWith",
 "_lastUpdatedSpriteX",
 "_lastUpdatedSpriteY",
 "_lastX",
 "_lastY",
 "_layer",
 "_layers",
 "_map",
 "_mask",
 "_millis",
 "_obstacles",
 "_offsetX",
 "_offsetY",
 "_overlappers",
 "_owner",
 "_player",
 "_pressed",
 "_pressedElasped",
 "_prune",
 "_repeatCount",
 "_row",
 "_scale",
 "_sprites",
 "_srcs",
 "_sx",
 "_sy",
 "_text",
 "_update",
 "_vx",
 "_vy",
 "_width",
 "_x",
 "_y",
 "_z",
 "action",
 "active",
 "activeCard",
 "add",
 "addShape",
 "addSprite",
 "alignX",
 "alignY",
 "allSprites",
 "alloc",
 "analog",
 "anchor",
 "applyTo",
 "areaHeight",
 "areaWidth",
 "ax",
 "ay",
 "background",
 "basicCard",
 "bgColor",
 "block",
 "bottom",
 "buckets",
 "buf",
 "button",
 "buttonEventHandlers",
 "buttons",
 "c",
 "cachedTileView",
 "cachedVx",
 "cachedVy",
 "calcDimensionalHash",
 "callback",
 "camera",
 "canResolveClipping",
 "card",
 "cardSpacing",
 "cardWidth",
 "cardsPerRow",
 "cardsTop",
 "cellHeight",
 "cellWidth",
 "center",
 "change",
 "charHeight",
 "charWidth",
 "clear",
 "clearObstacles",
 "collisionHandlers",
 "collisions",
 "color",
 "column",
 "columnCount",
 "condition",
 "connected",
 "constrain",
 "contains",
 "controlledSprites",
 "controllerConnectionState",
 "create",
 "createMovingSprite",
 "createParticle",
 "createdHandlers",
 "data",
 "deathTick",
 "defaultLifespan",
 "defaultRate",
 "delay",
 "deltaTime",
 "deltaTimeMillis",
 "destroy",
 "destroyHandler",
 "destroyedHandlers",
 "dispose",
 "distance",
 "down",
 "draw",
 "drawDebug",
 "drawOffsetX",
 "drawOffsetY",
 "drawParticle",
 "drawSay",
 "drawSprite",
 "drawText",
 "dst",
 "dx",
 "dy",
 "effect",
 "effectSetByUser",
 "eid",
 "enabled",
 "event",
 "eventContext",
 "factoryFn",
 "fastRandom",
 "fgColor",
 "flags",
 "followingSprites",
 "frameCallbacks",
 "frameWorker",
 "framesInSample",
 "func",
 "fx",
 "fy",
 "galois",
 "gameForeverHandlers",
 "generator",
 "get",
 "getInt",
 "getObstacle",
 "getOrCreateHandlerForEvent",
 "getText",
 "getTile",
 "getTileImage",
 "getTileIndex",
 "h",
 "handler",
 "handlerState",
 "handlers",
 "has",
 "hash",
 "head",
 "headerFont",
 "headerText",
 "height",
 "icon",
 "iconImage",
 "id",
 "idleCallbacks",
 "image",
 "img",
 "infoFont",
 "infoTop",
 "init",
 "initFn",
 "insertAABB",
 "insertAtKey",
 "isObstacle",
 "isOnWall",
 "isOutOfScreen",
 "isOutsideMap",
 "isPressed",
 "isScaled",
 "isStatic",
 "isUpdated",
 "isValid",
 "isWall",
 "justPressed",
 "justReleased",
 "key",
 "kind",
 "lastPerfDump",
 "layer",
 "layers",
 "left",
 "length",
 "lfsr",
 "lifespan",
 "loseEffect",
 "loseMessage",
 "loseSound",
 "loseSoundLooping",
 "map",
 "maxLifespan",
 "maxNegativeVelocity",
 "maxSingleStep",
 "maxSpeed",
 "maxStep",
 "maxVelocity",
 "melody",
 "mergeAtKey",
 "messageSetByUser",
 "millis",
 "minAngle",
 "minLifespan",
 "minSingleStep",
 "minStep",
 "mode",
 "move",
 "moveSprite",
 "multiplier",
 "neighbors",
 "next",
 "offsetX",
 "offsetY",
 "onEvent",
 "onUpdate",
 "once",
 "options",
 "order",
 "overlapHandlers",
 "overlapMap",
 "overlaps",
 "overlapsWith",
 "ox",
 "oy",
 "pFlags",
 "padding",
 "parent",
 "particleSources",
 "period",
 "physicsEngine",
 "pickRandom",
 "playerIndex",
 "pool",
 "pos",
 "position",
 "preferredDelay",
 "pressureLevel",
 "prevTimeMillis",
 "previousScene",
 "priority",
 "r",
 "raiseButtonDown",
 "raiseButtonRepeat",
 "raiseButtonUp",
 "randomRange",
 "recalcSize",
 "rect",
 "register",
 "registerFrameCallbacks",
 "registerFrameHandler",
 "registerHandler",
 "registerObstacle",
 "remove",
 "removeSprite",
 "render",
 "renderable",
 "repeatDelay",
 "repeatInterval",
 "repeatX",
 "repeatY",
 "reset",
 "resetHitbox",
 "resizeBuckets",
 "right",
 "rotate",
 "row",
 "rowCount",
 "runButtonEvents",
 "runCallbacks",
 "runningCallbacks",
 "s",
 "sayEndTime",
 "sayRenderer",
 "scale",
 "scene",
 "sceneDefaultRate",
 "scoringType",
 "scoringTypeSetByUser",
 "screenEdgeCollisions",
 "scrollOffset",
 "scrollRow",
 "scrollTarget",
 "seed",
 "select",
 "selectedCard",
 "selection",
 "set",
 "setAcceleration",
 "setAnchor",
 "setDirection",
 "setFactory",
 "setFlag",
 "setHitbox",
 "setImage",
 "setKind",
 "setOffset",
 "setPressed",
 "setRate",
 "setRelativeToCamera",
 "setSeed",
 "setSelection",
 "setSpeed",
 "setState",
 "setTheme",
 "setv",
 "shakeAmplitude",
 "shakeDuration",
 "shakeStartTime",
 "shouldBeVisible",
 "show",
 "size",
 "soundSetByUser",
 "source",
 "sourceFactory",
 "sources",
 "speed",
 "spread",
 "sprite",
 "spriteCollisions",
 "spriteNextId",
 "sprites",
 "spritesByKind",
 "src",
 "start",
 "state",
 "stopped",
 "str",
 "sub",
 "sx",
 "sy",
 "system",
 "text",
 "theme",
 "ticks",
 "tileIndex",
 "tileMap",
 "tileOverlapHandlers",
 "tileSet",
 "tilemapCollisions",
 "tilemapOverlaps",
 "tileset",
 "timeInSample",
 "timeOut",
 "timer",
 "times",
 "toString",
 "top",
 "type",
 "unregister",
 "up",
 "update",
 "updateCard",
 "updateIfInvalid",
 "updateParticle",
 "updateScrollTarget",
 "user",
 "v",
 "value",
 "vel",
 "vid",
 "vx",
 "vy",
 "w",
 "wallCollisionHandlers",
 "width",
 "winEffect",
 "winMessage",
 "winMessageMultiplayer",
 "winSound",
 "winSoundLooping",
 "work",
 "x",
 "xOffset",
 "xRange",
 "xStep",
 "y",
 "yOffset",
 "yRange",
 "yStep",
 "z"
];
__this.setupPerfCounters([]);
const pxsim_Array__getAt = pxsim.Array_.getAt;
const pxsim_Array__length = pxsim.Array_.length;
const pxsim_Array__mk = pxsim.Array_.mk;
const pxsim_Array__push = pxsim.Array_.push;
const pxsim_Boolean__bang = pxsim.Boolean_.bang;
const pxsim_String__concat = pxsim.String_.concat;
const pxsim_String__stringConv = pxsim.String_.stringConv;
const pxsim_numops_toBool = pxsim.numops.toBool;
const pxsim_numops_toBoolDecr = pxsim.numops.toBoolDecr;
const pxsim_pxtcore_mkAction = pxsim.pxtcore.mkAction;
const pxsim_pxtcore_mkClassInstance = pxsim.pxtcore.mkClassInstance;
const pxsim_pxtrt_ldlocRef = pxsim.pxtrt.ldlocRef;
const pxsim_pxtrt_mapGetByString = pxsim.pxtrt.mapGetByString;
const pxsim_pxtrt_stclo = pxsim.pxtrt.stclo;
const pxsim_pxtrt_stlocRef = pxsim.pxtrt.stlocRef;
const pxsim_Boolean_ = pxsim.Boolean_;
const pxsim_pxtcore = pxsim.pxtcore;
const pxsim_String_ = pxsim.String_;
const pxsim_ImageMethods = pxsim.ImageMethods;
const pxsim_Array_ = pxsim.Array_;
const pxsim_pxtrt = pxsim.pxtrt;
const pxsim_numops = pxsim.numops;


function _main___P61793(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___48465 = undefined;
    s.b___48471 = undefined;
    globals._intervals___4602 = (undefined);
    globals._pollEventQueue___4611 = (undefined);
    globals.minPriority___375 = (1);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, listeners_inline__P4614);
    globals.listeners___4615 = (s.tmp_0);
    globals.globalVolume___4668 = (null);
    globals.playToneID___4675 = (0);
    r0 = pxsim_pxtcore_mkClassInstance(music_Melody__C1627_VT);
    s.tmp_0 = r0;
    s.tmp_1 = music_Melody_constructor__P1630_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = "~15 e3:3 r:1 d#:3 r:1 d:4 r:1 c#:8";
    s.callLocIdx = 0; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    globals.wawawawaa___1648 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(music_Melody__C1627_VT);
    s.tmp_0 = r0;
    s.tmp_1 = music_Melody_constructor__P1630_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = "g4:1 c5 e g:2 e:1 g:3";
    s.callLocIdx = 1; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    globals.powerUp___1651 = (s.tmp_0);
    globals.brightness___1952 = (100);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charWidth", 6);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charHeight", 8);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "data", _hex11180);
    globals.font8___1976 = (s.tmp_0);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charWidth", 12);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charHeight", 12);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "data", _hex11238);
    globals.font12___1977 = (s.tmp_0);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charWidth", 6);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charHeight", 5);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "data", _hex13653);
    globals.font5___1981 = (s.tmp_0);
    globals.__updated___4782 = (false);
    r0 = pxsim.control.runInParallel(control___screen_inline__P4785);
    r0 = pxsim_pxtcore.setPalette(_hex4796);
    s.tmp_1 = _screen_internal_getScreenWidth__P2037_mk(s);
    s.tmp_1.arg0 = 160;
    s.callLocIdx = 4; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = _screen_internal_getScreenHeight__P2038_mk(s);
    s.tmp_3.arg0 = 120;
    s.callLocIdx = 5; s.pc = 6; return s.tmp_3;
  case 6:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim.image.create(s.tmp_0, s.tmp_2);
    globals.screen___2033 = (r0);
    s.tmp_0 = control___screen_setupUpdate__P1995_mk(s);
    s.tmp_0.arg0 = _screen_internal_inline__P4805;
    s.callLocIdx = 6; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    globals.control_EventContext_onStats___398 = (_screen_internal_inline__P4810);
    globals.RUN_KEY___4815 = ("#run");
    globals.SCOPE_KEY___4816 = ("#scope");
    s.tmp_0 = settings_initScopes__P4827_mk(s);
    s.callLocIdx = 7; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C2190_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P2196_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 5;
    s.tmp_1.arg2 = 4;
    s.callLocIdx = 8; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    globals.A___2114 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C2190_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P2196_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 6;
    s.tmp_1.arg2 = 5;
    s.callLocIdx = 9; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    globals.B___2115 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C2190_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P2196_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 1;
    s.tmp_1.arg2 = 47;
    s.callLocIdx = 10; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    globals.left___2116 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C2190_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P2196_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 2;
    s.tmp_1.arg2 = 49;
    s.callLocIdx = 11; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    globals.up___2117 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C2190_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P2196_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 3;
    s.tmp_1.arg2 = 48;
    s.callLocIdx = 12; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
    globals.right___2118 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C2190_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P2196_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 4;
    s.tmp_1.arg2 = 50;
    s.callLocIdx = 13; s.pc = 14; return s.tmp_1;
  case 14:
    r0 = s.retval;
    globals.down___2119 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C2190_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P2196_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 7;
    s.tmp_1.arg2 = 51;
    s.callLocIdx = 14; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    globals.menu___2120 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Controller__C2135_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Controller_constructor__P2139_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 2;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 15; s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    globals.player2___2121 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Controller__C2135_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Controller_constructor__P2139_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 3;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 16; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    globals.player3___2122 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Controller__C2135_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Controller_constructor__P2139_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 4;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 17; s.pc = 18; return s.tmp_1;
  case 18:
    r0 = s.retval;
    globals.player4___2123 = (s.tmp_0);
    s.tmp_0 = controller__player1__P2129_mk(s);
    s.callLocIdx = 18; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    globals.player1___2124 = (r0);
    s.tmp_0 = game_addScenePopHandler__P3021_mk(s);
    s.tmp_0.arg0 = controller_inline__P4855;
    s.callLocIdx = 23; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.tmp_0 = game_addScenePushHandler__P3019_mk(s);
    s.tmp_0.arg0 = controller_inline__P4895;
    s.callLocIdx = 25; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(controller_AnyButton__C4919_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P2196_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 0;
    s.tmp_1.arg2 = -1;
    s.callLocIdx = 26; s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
    globals.anyButton___2171 = (s.tmp_0);
    globals._userEventsEnabled___4933 = (true);
    globals.defaultRepeatDelay___4935 = (500);
    globals.defaultRepeatInterval___4937 = (30);
    s.tmp_0 = SpriteKind_create__P2480_mk(s);
    s.callLocIdx = 27; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    globals.Player___2481 = (r0);
    s.tmp_0 = SpriteKind_create__P2480_mk(s);
    s.callLocIdx = 28; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    globals.Food___2483 = (r0);
    s.tmp_0 = SpriteKind_create__P2480_mk(s);
    s.callLocIdx = 29; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    globals.Enemy___2484 = (r0);
    s.tmp_0 = Fx8__P149_mk(s);
    s.tmp_0.arg0 = 0.1;
    s.callLocIdx = 30; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    globals.MIN_MOVE_GAP___2522 = (r0);
    globals.infoState___5002 = (undefined);
    s.tmp_0 = game_addScenePushHandler__P3019_mk(s);
    s.tmp_0.arg0 = info_inline__P5006;
    s.callLocIdx = 31; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    s.tmp_0 = game_addScenePopHandler__P3021_mk(s);
    s.tmp_0.arg0 = info_inline__P5021;
    s.callLocIdx = 35; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    r0 = pxsim_Array__mk();
    globals.scene_Scene_initializers___2866 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5111);
    globals.img_trophy_sm___5112 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5114);
    globals.img_trophy_lg___5115 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5117);
    globals.img_sleepy_sim___5118 = (r0);
    globals.debug___2968 = (false);
    globals.stats___2969 = (false);
    globals.gameOverConfig___2999 = (gameOverConfig_inline__P5130);
    s.tmp_0 = scene_systemMenu_initVolume__P5405_mk(s);
    s.callLocIdx = 37; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    s.tmp_0 = scene_systemMenu_initScreen__P5406_mk(s);
    s.callLocIdx = 38; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    r0 = pxsim_Array__push(globals.scene_Scene_initializers___2866, scene_systemMenu_register__P3107);
    r0 = pxsim.image.ofBuffer(_hex5413);
    globals.CARD_NORMAL___3112 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5415);
    globals.CARD_SELECTED___3113 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5417);
    globals.CARD_ACTIVE___3114 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5419);
    globals.VOLUME_UP_ICON___3115 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5421);
    globals.BRIGHTNESS_DOWN_ICON___3116 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5423);
    globals.CLOSE_MENU_ICON___3117 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5425);
    globals.VOLUME_DOWN_ICON___3118 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5427);
    globals.SLEEP_ICON___3119 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5429);
    globals.CONSOLE_ICON___3120 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5431);
    globals.BRIGHTNESS_UP_ICON___3121 = (r0);
    r0 = pxsim.image.ofBuffer(_hex5433);
    globals.STATS_ICON___3122 = (r0);
    globals.consoleColor___5436 = (1);
    globals.tabSize___5439 = (8);
    globals.consoleFont___5445 = (globals.font5___1981);
    r0 = pxsim_ImageMethods.height(globals.screen___2033);
    s.tmp_2 = r0;
    s.tmp_5 = if_charHeight_1_mk(s);
    s.tmp_5.arg0 = globals.consoleFont___5445;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "charHeight");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["charHeight"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["charHeight"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 39; s.pc = 31; return s.tmp_5; }
    }
  case 31:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 2);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 / s.tmp_3);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.floor(s.tmp_1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    globals.consoleLines___5450 = (r0);
    r0 = pxsim_ImageMethods.width(globals.screen___2033);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 8);
    s.tmp_1 = r0;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = globals.consoleFont___5445;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 40; s.pc = 32; return s.tmp_4; }
    }
  case 32:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 / s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    globals.consoleColumns___5460 = (r0);
    s.tmp_0 = console_addListener__P383_mk(s);
    s.tmp_0.arg0 = game_consoleOverlay_listener__P5472;
    s.callLocIdx = 41; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = MAX_SOURCES_inline__P16909;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 43; s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
    globals.MAX_SOURCES___5474 = (r0);
    r0 = pxsim_pxtcore_mkClassInstance(particles_SprayFactory__C3192_VT);
    s.tmp_0 = r0;
    s.tmp_1 = particles_SprayFactory_constructor__P3193_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 20;
    s.tmp_1.arg2 = 0;
    s.tmp_1.arg3 = 60;
    s.callLocIdx = 44; s.pc = 35; return s.tmp_1;
  case 35:
    r0 = s.retval;
    globals.defaultFactory___3172 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(Math_FastRandom__C3060_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Math_FastRandom_constructor__P3062_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 45; s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    globals.galois___5494 = (s.tmp_0);
    globals.angleSlice___5502 = (0.06283185307179587);
    r0 = pxsim_pxtcore_mkClassInstance(effects_ScreenEffect__C3267_VT);
    s.tmp_0 = r0;
    s.tmp_1 = effects_ScreenEffect_constructor__P3268_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 10;
    s.tmp_1.arg2 = 40;
    s.tmp_1.arg3 = 4000;
    s.tmp_1.arg4 = confetti_inline__P16663;
    s.callLocIdx = 51; s.pc = 37; return s.tmp_1;
  case 37:
    r0 = s.retval;
    globals.confetti___3275 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(effects_ImageEffect__C3291_VT);
    s.tmp_0 = r0;
    s.tmp_1 = effects_ImageEffect_constructor__P3292_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 100;
    s.tmp_1.arg2 = dissolve_inline__P14571;
    s.callLocIdx = 57; s.pc = 38; return s.tmp_1;
  case 38:
    r0 = s.retval;
    globals.dissolve___3296 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(effects_ImageEffect__C3291_VT);
    s.tmp_0 = r0;
    s.tmp_1 = effects_ImageEffect_constructor__P3292_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 125;
    s.tmp_1.arg2 = melt_inline__P16609;
    s.callLocIdx = 60; s.pc = 39; return s.tmp_1;
  case 39:
    r0 = s.retval;
    globals.melt___3297 = (s.tmp_0);
    s.tmp_0 = game_setWaitAnyButton__P3001_mk(s);
    s.tmp_0.arg0 = controller_pauseUntilAnyButtonIsPressed__P2206;
    s.callLocIdx = 61; s.pc = 40; return s.tmp_0;
  case 40:
    r0 = s.retval;
    s.tmp_0 = game_eventContext__P3003_mk(s);
    s.callLocIdx = 62; s.pc = 41; return s.tmp_0;
  case 41:
    r0 = s.retval;
    r0 = pxsim_Array__mk();
    globals.reporters___7464 = (r0);
    r0 = pxsim_Array__mk();
    globals.dirty___7466 = (r0);
    globals.nextId___4372 = (0);
    globals.gen___4373 = (0);
    r0 = pxsim_ImageMethods.width(globals.screen___2033);
    globals.SCREEN_WIDTH___4379 = (r0);
    r0 = pxsim_ImageMethods.height(globals.screen___2033);
    globals.SCREEN_HEIGHT___4380 = (r0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, 1);
    r0 = pxsim_Array__push(s.tmp_0, 2);
    r0 = pxsim_Array__push(s.tmp_0, 3);
    r0 = pxsim_Array__push(s.tmp_0, 4);
    r0 = pxsim_Array__push(s.tmp_0, 5);
    r0 = pxsim_Array__push(s.tmp_0, 6);
    r0 = pxsim_Array__push(s.tmp_0, 7);
    r0 = pxsim_Array__push(s.tmp_0, 8);
    r0 = pxsim_Array__push(s.tmp_0, 9);
    r0 = pxsim_Array__push(s.tmp_0, 10);
    r0 = pxsim_Array__push(s.tmp_0, 11);
    r0 = pxsim_Array__push(s.tmp_0, 12);
    r0 = pxsim_Array__push(s.tmp_0, 13);
    r0 = pxsim_Array__push(s.tmp_0, 14);
    r0 = pxsim_Array__push(s.tmp_0, 15);
    globals.ALL_COLORS___7649 = (s.tmp_0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, 2);
    globals._colorStack___7652 = (s.tmp_0);
    r0 = pxsim_Array__mk();
    globals.commands___7759 = (r0);
    globals.scoreboardColor___4437 = (2);
    globals.textColor___4438 = (8);
    globals.gameTitle___4439 = ("MY GAME");
    r0 = pxsim_String_.mkEmpty();
    globals.gameDescription___4440 = (r0);
    globals.insertCoinText___4441 = ("PRESS ANY KEY");
    globals.tick___4443 = (0);
    globals.difficulty___4444 = (1);
    globals.score___4445 = (0);
    globals.high___4446 = (0);
    globals.state___4447 = (0);
    globals.restartAt___8702 = (0);
    s.tmp_0 = image_scaledFont__P1980_mk(s);
    s.tmp_0.arg0 = globals.font5___1981;
    s.tmp_0.arg1 = 2;
    s.callLocIdx = 178; s.pc = 42; return s.tmp_0;
  case 42:
    r0 = s.retval;
    globals.scoreboardFont___8704 = (r0);
    s.tmp_0 = image_scaledFont__P1980_mk(s);
    s.tmp_0.arg0 = globals.font8___1976;
    s.tmp_0.arg1 = 2;
    s.callLocIdx = 179; s.pc = 43; return s.tmp_0;
  case 43:
    r0 = s.retval;
    globals.titleFont___8708 = (r0);
    globals._gameOverText___8711 = ("GAME OVER");
    r0 = pxsim_pxtcore_mkClassInstance(dot_Input__C8999_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Input_constructor__P9056_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = input_inline__P9239;
    s.callLocIdx = 265; s.pc = 44; return s.tmp_1;
  case 44:
    r0 = s.retval;
    globals.input___4453 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Input__C8999_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Input_constructor__P9056_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = input_inline__P9244;
    s.callLocIdx = 266; s.pc = 45; return s.tmp_1;
  case 45:
    r0 = s.retval;
    globals.input___4455 = (s.tmp_0);
    globals.scoreFont___4457 = (globals.font8___1976);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Pool__C4477_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Pool_constructor__P4480_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = pool_inline__P9291;
    s.tmp_1.arg2 = pool_inline__P9293;
    s.callLocIdx = 269; s.pc = 46; return s.tmp_1;
  case 46:
    r0 = s.retval;
    globals.pool___9289 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Pool__C4477_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Pool_constructor__P4480_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = pool_inline__P34825;
    s.tmp_1.arg2 = pool_inline__P34827;
    s.callLocIdx = 293; s.pc = 47; return s.tmp_1;
  case 47:
    r0 = s.retval;
    globals.pool___34823 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Random__C4464_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Random_constructor__P4469_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = null;
    s.callLocIdx = 294; s.pc = 48; return s.tmp_1;
  case 48:
    r0 = s.retval;
    globals.random___34834 = (s.tmp_0);
    globals.stats___2969 = (true);
    globals.gameTitle___4439 = ("DOT TEST");
    globals.gameDescription___4440 = ("testing features");
    globals.insertCoinText___4441 = ("INSERT COIN");
    s.tmp_0 = dot_game_start__P4448_mk(s);
    s.tmp_0.arg0 = test_gameUpdate__P48446;
    s.callLocIdx = 324; s.pc = 49; return s.tmp_0;
  case 49:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(dot_Random__C4464_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Random_constructor__P4469_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = null;
    s.callLocIdx = 325; s.pc = 50; return s.tmp_1;
  case 50:
    r0 = s.retval;
    globals.rand___48448 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Set__C4491_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Set_constructor__P4493_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 326; s.pc = 51; return s.tmp_1;
  case 51:
    r0 = s.retval;
    globals.collisions___48452 = (s.tmp_0);
    r0 = pxsim.image.ofBuffer(_hex48454);
    globals.duck___48455 = (r0);
    r0 = pxsim_Array__mk();
    globals.boxes___48457 = (r0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, 1);
    r0 = pxsim_Array__push(s.tmp_0, 13);
    s.tmp_1 = dot_color_allExcept__P4404_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 327; s.pc = 52; return s.tmp_1;
  case 52:
    r0 = s.retval;
    globals.boxColors___48461 = (r0);
    s.i___48465 = (0);
  case 1:
    r0 = (s.i___48465 < 5);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_pxtcore_mkClassInstance(test_Box__C48450_VT);
    s.b___48471 = (r0);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Rect__C4340_VT);
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_1 = r0;
    s.tmp_2 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    s.tmp_3 = dot_Random_get__P4470_mk(s);
    s.tmp_3.arg0 = globals.rand___48448;
    s.tmp_3.arg1 = 0;
    r0 = (globals.SCREEN_WIDTH___4379 - 10);
    s.tmp_3.arg2 = r0;
    s.callLocIdx = 328; s.pc = 54; return s.tmp_3;
  case 54:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.tmp_4 = dot_Random_get__P4470_mk(s);
    s.tmp_4.arg0 = globals.rand___48448;
    s.tmp_4.arg1 = 0;
    r0 = (globals.SCREEN_HEIGHT___4380 - 10);
    s.tmp_4.arg2 = r0;
    s.callLocIdx = 329; s.pc = 55; return s.tmp_4;
  case 55:
    r0 = s.retval;
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 330; s.pc = 53; return s.tmp_2;
  case 53:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_5 = r0;
    s.tmp_6 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_6.arg0 = s.tmp_5;
    s.tmp_6.arg1 = 10;
    s.tmp_6.arg2 = 10;
    s.callLocIdx = 331; s.pc = 56; return s.tmp_6;
  case 56:
    r0 = s.retval;
    s.tmp_7 = dot_Rect_constructor__P4348_mk(s);
    s.tmp_7.arg0 = s.tmp_0;
    s.tmp_7.arg1 = s.tmp_1;
    s.tmp_7.arg2 = s.tmp_5;
    s.callLocIdx = 332; s.pc = 57; return s.tmp_7;
  case 57:
    r0 = s.retval;
    r0 = (s.b___48471).fields["r"] = (s.tmp_0);
    s.tmp_0 = r0 = s.b___48471;
    s.tmp_2 = dot_Random_select__P4473_mk(s);
    s.tmp_2.arg0 = globals.rand___48448;
    s.tmp_2.arg1 = globals.boxColors___48461;
    s.callLocIdx = 333; s.pc = 58; return s.tmp_2;
  case 58:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["c"] = (s.tmp_1);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_2 = dot_Random_get__P4470_mk(s);
    s.tmp_2.arg0 = globals.rand___48448;
    s.tmp_2.arg1 = -3;
    s.tmp_2.arg2 = 3;
    s.callLocIdx = 334; s.pc = 60; return s.tmp_2;
  case 60:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.tmp_3 = dot_Random_get__P4470_mk(s);
    s.tmp_3.arg0 = globals.rand___48448;
    s.tmp_3.arg1 = -3;
    s.tmp_3.arg2 = 3;
    s.callLocIdx = 335; s.pc = 61; return s.tmp_3;
  case 61:
    r0 = s.retval;
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 336; s.pc = 59; return s.tmp_1;
  case 59:
    r0 = s.retval;
    r0 = (s.b___48471).fields["v"] = (s.tmp_0);
    s.tmp_0 = r0 = s.b___48471;
    if ((s.i___48465) && (s.i___48465).vtable) {
    setupResume(s, 62);
    pxsim_String__stringConv(s.i___48465);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.i___48465) + ""; }
  case 62:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat("box", s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["id"] = (s.tmp_1);
    r0 = pxsim_Array__push(globals.boxes___48457, s.b___48471);
    r0 = (s.i___48465 + 1);
    s.i___48465 = (r0);
    { step = 1; continue; }
  case 2:
    globals.d___48530 = (1);
    globals.a___48532 = (0);
    s.tmp_0 = control_EventContext_registerFrameHandler__P403_mk(s);
    s.tmp_1 = control_eventContext__P408_mk(s);
    s.callLocIdx = 369; s.pc = 64; return s.tmp_1;
  case 64:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 13;
    s.tmp_0.arg2 = dot_inline__P10559;
    s.callLocIdx = 372; s.pc = 63; return s.tmp_0;
  case 63:
    r0 = s.retval;
    s.tmp_0 = control_EventContext_registerFrameHandler__P403_mk(s);
    s.tmp_1 = control_eventContext__P408_mk(s);
    s.callLocIdx = 373; s.pc = 66; return s.tmp_1;
  case 66:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 20;
    s.tmp_0.arg2 = dot_game__internal_update__P4451;
    s.callLocIdx = 374; s.pc = 65; return s.tmp_0;
  case 65:
    r0 = s.retval;
    s.tmp_0 = control_EventContext_registerFrameHandler__P403_mk(s);
    s.tmp_1 = control_eventContext__P408_mk(s);
    s.callLocIdx = 375; s.pc = 68; return s.tmp_1;
  case 68:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 90;
    s.tmp_0.arg2 = dot_gfx__internal_update__P4418;
    s.callLocIdx = 376; s.pc = 67; return s.tmp_0;
  case 67:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
_main___P61793.info = {"start":0,"length":0,"line":0,"column":0,"endLine":0,"endColumn":0,"fileName":"main.ts","functionName":"<main>","argumentNames":[]}
_main___P61793.continuations = [ 62 ]

function _main___P61793_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _main___P61793, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  i___48465: undefined,
  b___48471: undefined,
} }

const _hex11180 = pxsim.BufferMethods.createBufferFromHex("")
const _hex11238 = pxsim.BufferMethods.createBufferFromHex("20000000000000000000000000000000000000000000000000002100000000000006fc0000000000000000000000000000000000220000001c00000000001c0000000000000000000000000000002300a000f807a000f807a00000000000000000000000000000002400000018022404460c8803000000000000000000000000000025003802c4017800200390040803000000000000000000000000260080037804a4041803800340040000000000000000000000002700000000001c00000000000000000000000000000000000000280000000000f8010606010800000000000000000000000000002900000001080606f801000000000000000000000000000000002a00040014000e001400040000000000000000000000000000002b0040004000f8034000400000000000000000000000000000002c000000000000090006000000000000000000000000000000002d000000800080008000000000000000000000000000000000002e000000000000060000000000000000000000000000000000002f00000c800360001c000300000000000000000000000000000030000000f80304040404f80300000000000000000000000000003100000004040404fc07000400040000000000000000000000003200000008060405c4043804000000000000000000000000000033000000080244044404b803000000000000000000000000000034000000800170010801fc070001000000000000000000000000350000023c0424042404c403000000000000000000000000000036000000f0034804440488030000000000000000000000000000370000000400c40734000c00000000000000000000000000000038000000b80344044404b803000000000000000000000000000039000000780284048802f00100000000000000000000000000003a000000000030060000000000000000000000000000000000003b000000000018090006000000000000000000000000000000003c004000a000a000a000100100000000000000000000000000003d002001200120012001200100000000000000000000000000003e0000001001a000a000a00040000000000000000000000000003f000000080084066400180000000000000000000000000000004000f0030c04c20822092409f80900000000000000000000000041000007f8008400f8000007000000000000000000000000000042000000fc0744044404b803000000000000000000000000000043000000f001080204040404080200000000000000000000000044000000fc0704040802f001000000000000000000000000000045000000fc07440444044404000000000000000000000000000046000000fc07440044004400000000000000000000000000000047000000f00108024404c803000000000000000000000000000048000000fc0740004000fc070000000000000000000000000000490000000404fc070404040400000000000000000000000000004a000000000200040004fc0300000000000000000000000000004b000000fc074000f0000c0304040000000000000000000000004c000000fc0700040004000400000000000000000000000000004d000000fc0738007000fc0700000000000000000000000000004e000000fc073800c003fc0700000000000000000000000000004f000000f80304040404f803000000000000000000000000000050000000fc07840084004400780000000000000000000000000051000000fc0102020206fc09000000000000000000000000000052000000fc074400c4013806000000000000000000000000000053000000180224044404880300000000000000000000000000005400000004000400fc070400040000000000000000000000000055000000fc0300040004fc03000000000000000000000000000056000c00f0030004f0030c00000000000000000000000000000057007c008007e001f0010007fc0000000000000000000000000058000404b8034000b80304040000000000000000000000000000590004003800c00730000c0000000000000000000000000000005a0004040407e4041c04040400000000000000000000000000005b0000000000ff0f0108010800000000000000000000000000005c0003001c0060008003000c00000000000000000000000000005d00000001080108ff0f000000000000000000000000000000005e004000380004003800400000000000000000000000000000005f00000800080008000800080000000000000000000000000000600000000000020004000000000000000000000000000000000061000000200390049004e007000000000000000000000000000062000000fc0710041004e003000000000000000000000000000063000000c001200210043004000200000000000000000000000064000000e00310041004fc07000000000000000000000000000065000000e00390049004e0040000000000000000000000000000660000001000f80714001400000000000000000000000000000067000000b806440944093c09040600000000000000000000000068000000fc0710001000e0070000000000000000000000000000690000000000f4070000000000000000000000000000000000006a00000800080008fd07000000000000000000000000000000006b000000fe078000e001100610040000000000000000000000006c0000000000fc030004000400000000000000000000000000006d00f00710001000e0071000e0070000000000000000000000006e000000f00710001000e00700000000000000000000000000006f000000e00310041004e003000000000000000000000000000070000000fc0f04010401f800000000000000000000000000000071000000f80004010401fc0f000000000000000000000000000072000000f00720001000100000000000000000000000000000007300000060029004900420030000000000000000000000000000740000001000fc0310041004000000000000000000000000000075000000f00300040004f007000000000000000000000000000076003000c0030004c003300000000000000000000000000000007700f0000007e003c0010007f000000000000000000000000000780010046003800060031004000000000000000000000000000079000c0870088007f0000c0000000000000000000000000000007a000000000410079004700410040000000000000000000000007b0000004000be070108010800000000000000000000000000007c0000000000ff0f0000000000000000000000000000000000007d00000001080108be07400000000000000000000000000000007e00800040004000800080004000000000000000000000000000")
const _hex13653 = pxsim.BufferMethods.createBufferFromHex("20000000000000002100001700000000220000030003000023000a1f0a1f0a0024000a17151d0a00250013090412190026000a15150a100027000003000000002800000e11000000290000110e0000002a00000a040a00002b0000040e0400002c000010080000002d000004040400002e000008000000002f0010080402010030000e11110e0000310000121f100000320019151512000033000911150b000034000c0a091f080035001715151509003600081416150800370011090503010038000a1515150a00390002150d0502003a00000a000000003b0000100a0000003c0000040a1100003d00000a0a0a00003e0000110a0400003f0002011505020040000e1115090e0041001e05051e000042001f15150a000043000e111111000044001f11110e000045001f151511000046001f050501000047000e1111150c0048001f04041f00004900111f110000004a000911110f01004b001f040a1100004c001f10101000004d001f0204021f004e001f0204081f004f000e11110e000050001f0505020000510006091916000052001f05050a10005300121515090000540001011f01010055000f10100f0000560007081008070057001f0804081f0058001b04041b0000590001021c0201005a001915131100005b00001f111100005c000102040810005d000011111f00005e000002010200005f00101010101000600000010200000061000c12121e100062001f141408000063000c121212000064000814141f000065000e15151200006600041e0501000067000215150f000068001f04041800006900001d000000006a000010100d00006b001f040a1000006c00000f101000006d001e0204021e006e001e02021c00006f000c12120c000070001e0a0a0400007100040a0a1e000072001c0202020000730010140a0200007400000f1414100075000e10101e1000760006081008060077001e1008101e007800120c0c12000079001214080402007a00121a161200007b0000041f1100007c00001f000000007d00111f040000007e00000404080800d3000c1213130c00f3000c12130d000004010e05051e100005010609191f080006010c121313120007010c121313000018010f0b1b19000019010e151d1a000041011f14121000004201100f1412000043011f0205081f0044011e03031c00005a0110140b0302005b0110140b0300007901121a171300007a01121a171300007b01121b171200007c01121b17120000")
const _hex4796 = pxsim.BufferMethods.createBufferFromHex("000000ffffffff2121ff93c4ff8135fff609249ca378dc52003fad87f2ff8e2ec4a4839f5c406ce5cdc491463d000000")
const _hex5111 = pxsim.BufferMethods.createBufferFromHex("870407000800000000000000404400005055040450555505505501011011000000000000")
const _hex5114 = pxsim.BufferMethods.createBufferFromHex("87041000100000000000000000000000000000000000000000000050050000000000000550000000005045444404000000455544444400040045555555550404004555555555450500455555555511050045555555150101004555111111000100501511110100000000000550000000000000500500000000000000000000000000000000000000")
const _hex5117 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000000000000000000000000000000006666666666060060ffffff666f660060fffffff6ff660060fff1ff666f660060fff1ff6666660060fffff16666660060fffff16666660060fff1ff6666660060fff1ff66f6660060ffffff6666660060fffffff6666600006666666666060000000000000000000000000000000000")
const _hex5413 = pxsim.BufferMethods.createBufferFromHex
const _hex5415 = pxsim.BufferMethods.createBufferFromHex
const _hex5417 = pxsim.BufferMethods.createBufferFromHex
const _hex5419 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000c0fcff0f000000000000000000000000bcddddfb000000000000000000000000dcbbbbfd000000000000000000000000ccbbbbfc0000000000000000000000c0bcd1bdfb0f00000000000000000000c01b11ddbb0f00000000000000000000c0bcbbbbcb0f00000000000000000000bc11d1ddddcb000000000000000000c01d11ddddddd10c0000000000000000bcd1cbbcfbcf1dcb00000000000000001ccdccddbdffdfc100000000000000001cccccdbcbffcfc10000000000000000dbcbccccfcffbfcd0000000000000000bbbdccccffcfdbbb0000000000000000b0dbbdbbbbdbbd0b000000000000000000b0cbccccbc0b000000000000000000000000000000000000000000000000000000d007700d00000000000000000000000070666607000000000000000000000000006776000000000000000000000000660700007066000000000000000000006766777766760000000000000000000060666666660600000000000000000066006766667600660000000000000000667600000000676600000000000000006766767777676676000000000000000060666666666666060000000000000000006766666666760000000000000000000000676666760000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex5421 = pxsim.BufferMethods.createBufferFromHex("8704200020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0bb000000000000000000000000b000404500b0000000000000000000005b0b000400540b0000000000000000b0550400000054b5000000000000000000440040bb0040040000000000000000000040d4ddbb0000000000000000000000004055ddbd000000000000000000004b005455d5dd0b400b000000000000005b045411d5dd0b540b000000000000004b005411d5dd0b400b0000000000000000004055ddbd00000000000000000000000040d4ddbb0000000000000000000000440040bb0040040000000000000000b0550400000054b50000000000000000005b04000400540b000000000000000000b000404500b0000000000000000000000000b0bb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex5423 = pxsim.BufferMethods.createBufferFromHex
const _hex5425 = pxsim.BufferMethods.createBufferFromHex("8704200020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0fcff0f000000000000000000000000bcddddfb000000000000000000000000dcbbbbfd000000000000000000000000ccbbbbfc0000000000000000000000c0bcd1bdfb0f00000000000000000000c01b11ddbb0f00000000000000000000c0bcbbbbcb0f00000000000000000000bc11d1ddddcb000000000000000000c01d11ddddddd10c0000000000000000bcd1cbbcfbcf1dcb00000000000000001ccdccddbdffdfc100000000000000001cccccdbcbffcfc10000000000000000dbcbccccfcffbfcd0000000000000000bbbdccccffcfdbbb0000000000000000b0dbbdbbbbdbbd0b000000000000000000b0cbccccbc0b000000000000000000000000000000000000000000000000000000d007700d0000000000000000000000007066660700000000000000000000000000677600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex5427 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0cbcc0c0000000000000000000000b0db55d5cd0c00000000000000000000db555555ddcd000000000000000000b055555555d59d0b0000000000000000db55555555d59db900000000000000005b55555555d5ddb900000000000000b05db5cccc5bdddd990b000000000000b055ccccccccdddd9d0b000000000000b0b5ccccccccdbdd9d0b000000000000b0c5ccccccccdcdd9d0b000000000000b0c5ccdccbccdcdd9d0c000000000000b0cdcc5b55ccdcdd9d0c00000000000000ccdc55b5ccdcddc90000000000000000cccc5b55ccdbddc90000000000000000c0ccdccbccdd9d0c000000000000000000ccccccdbddcd00000000000000000000c0dcddddcd0c0000000000000000000000c0cccc0c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex5429 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cc00000000000000b0bbbbbbbbcb00c0cd000000000000001bddddddddbd0c1ccd000000000000b011cbccccccbc0c1ccd000000000000b01d6c666666bc0cbccd000000000000b01d6c616661bc0c1ccd000000000000b01d6c161666bccc1bcd000000000000b01d6c666166bcccbbcd000000000000b01d6c666666bccc1bcd000000000000b01d6c666661bccc1bcd000000000000b01d6c666661bcccbbcd000000000000b01d6c666661bccc1bcd000000000000b01d6c666666bc0c1ccd000000000000b01dcbccccccbc0cbccd000000000000c0b1bbbbbbbbbb0cdccb000000000000c0bbbbbbbbbbcb00dc0c00000000000000cccccccccc0c00cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex5431 = pxsim.BufferMethods.createBufferFromHex("87042000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004004000000000000000000000000000054450000000000000000000000440b00bbbb00b0440000000000000040550b00000000b0550400000000000040b5000044bb00005b04000000000000b00b0044ddddbb00b00b0000000000000000405d55d5dd0b00000000000000000000d4555555ddbd0000000000000000000054555555d5bd0000000000000000b44055555555d5dd0b4b000000000040b54055555555d5dd0b5b040000000040b54055555555d5dd0b5b040000000000b44055115555d5dd0b4b000000000000000054115555d5bd00000000000000000000d4555555ddbd00000000000000000000405d55d5dd0b0000000000000000b00b0044ddddbb00b00b00000000000040b5000044bb00005b0400000000000040550b00000000b0550400000000000000440b00bbbb00b0440000000000000000000000544500000000000000000000000000004004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex5433 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bbbb00000000000000000000000000b055bb00bbbbbb000000000000000000b0b5bdbcbbbbddcb0000000000000000b0dbcb5b5555bbdd0c00000000000000b0cbdcbdbb5b55dbcd0000000000000000c0dddb11d15bb5bd0c00000000000000bbbd111111b155bb0c00000000000000db1b111111115bb5cb00000000000000db1bb11d1199b9d5cb00000000000000db1b11bb9199b955cb000000000000005b1b11b19b99995bcb000000000000005b1d1111bb99995ccb00000000000000b0b511bbbb99995ccb00000000000000b0d51d919999d95b0b00000000000000005bdb919999c9d50b0000000000000000b0d51b99d9bcb5000000000000000000005bd5bbbc550b00000000000000000000b05b5555bd000000000000000000000000b0bbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex48454 = pxsim.BufferMethods.createBufferFromHex("870410001000000000000000b0ccbc0000000000dbbdbb0000000000dbbdc500000000b0dddbc5000000bbdbbd55cb0c00b05b55bdd5dc0c00bb5555b5cdddcd005b1d5d55dcddcd005bf15f555555cdb05bff4b555555c55b5bd544555555c5b55bdd44555555b50bb04444555555bb00004cb45b55d50b0000400bb0bbbb000000b00000000000")




function control___screen_inline__P4785(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

  case 1:
    r0 = pxsim_numops_toBoolDecr(true);
    if (!r0) { step = 4; continue; }
    globals.__updated___4782 = (false);
    s.tmp_0 = pause__P413_mk(s);
    s.tmp_0.arg0 = 200;
    s.callLocIdx = 2; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(globals.__updated___4782);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_2 = control___screen_update__P1994_mk(s);
    s.callLocIdx = 3; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    globals.__updated___4782 = (true);
  case 2:
  case 3:
    { step = 1; continue; }
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___screen_inline__P4785.info = {"start":396,"length":211,"line":17,"column":26,"endLine":26,"endColumn":5,"fileName":"pxt_modules/screen/frame.ts","functionName":"inline","argumentNames":[]}

function control___screen_inline__P4785_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___screen_inline__P4785, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function _screen_internal_inline__P4805(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_pxtcore.updateScreen(globals.screen___2033);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
_screen_internal_inline__P4805.info = {"start":1122,"length":26,"line":32,"column":33,"endLine":32,"endColumn":59,"fileName":"pxt_modules/screen/targetoverrides.ts","functionName":"inline","argumentNames":[]}

function _screen_internal_inline__P4805_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _screen_internal_inline__P4805, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function _screen_internal_inline__P4810(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore.updateStats(s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
_screen_internal_inline__P4810.info = {"start":1185,"length":56,"line":33,"column":35,"endLine":35,"endColumn":5,"fileName":"pxt_modules/screen/targetoverrides.ts","functionName":"inline","argumentNames":["msg"]}

function _screen_internal_inline__P4810_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _screen_internal_inline__P4810, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller_inline__P4855(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.stateWhenPushed___4856 = undefined;
    s.i___4862 = undefined;
    s.p___4868 = undefined;
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 19; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    r0 = r0.fields["controllerConnectionState"];
    s.stateWhenPushed___4856 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.stateWhenPushed___4856);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 11; continue; }
  case 1:
  case 2:
    s.i___4862 = (0);
  case 3:
    s.tmp_1 = r0 = s.i___4862;
    r0 = pxsim_Array__length(s.stateWhenPushed___4856);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    r0 = pxsim_Array__getAt(globals._players___4853, s.i___4862);
    s.p___4868 = (r0);
    s.tmp_0 = r0 = s.p___4868;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 4:
    r0 = pxsim_Array__getAt(s.stateWhenPushed___4856, s.i___4862);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    s.tmp_11 = controller_Controller_connected__P2156_mk(s);
    s.tmp_11.arg0 = s.p___4868;
    s.callLocIdx = 20; s.pc = 13; return s.tmp_11;
  case 13:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_10);
    s.tmp_9 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_9);
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    s.tmp_7 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (s.tmp_1 != s.tmp_6);
  case 5:
    // jmp value (already in r0)
    s.tmp_12 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_12);
    if (!r0) { step = 8; continue; }
    s.tmp_14 = controller_Controller_connected__P2156_mk(s);
    s.tmp_14.arg0 = s.p___4868;
    s.callLocIdx = 22; s.pc = 14; return s.tmp_14;
  case 14:
    r0 = s.retval;
    s.tmp_13 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_13);
    if (!r0) { step = 6; continue; }
    r0 = 1;
    { step = 7; continue; }
  case 6:
    r0 = 2;
  case 7:
    // jmp value (already in r0)
    s.tmp_15 = r0;
    s.tmp_17 = controller_Controller_id__P2142_mk(s);
    s.tmp_17.arg0 = s.p___4868;
    s.callLocIdx = 21; s.pc = 15; return s.tmp_17;
  case 15:
    r0 = s.retval;
    s.tmp_16 = r0;
    r0 = pxsim.control.raiseEvent(s.tmp_16, s.tmp_15);
  case 8:
  case 9:
    r0 = (s.i___4862 + 1);
    s.i___4862 = (r0);
    { step = 3; continue; }
  case 10:
  case 11:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_inline__P4855.info = {"start":344,"length":582,"line":15,"column":28,"endLine":30,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":[]}

function controller_inline__P4855_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_inline__P4855, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  stateWhenPushed___4856: undefined,
  i___4862: undefined,
  p___4868: undefined,
} }





function controller_inline__P4895(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___4900 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["controllerConnectionState"] = (s.tmp_1);
    s.i___4900 = (0);
  case 1:
    s.tmp_1 = r0 = s.i___4900;
    r0 = pxsim_Array__length(globals._players___4853);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(globals._players___4853, s.i___4900);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 2; continue; }
    r0 = s.arg0.fields["controllerConnectionState"];
    s.tmp_4 = r0;
    s.tmp_5 = r0 = s.i___4900;
    s.tmp_7 = controller_Controller_connected__P2156_mk(s);
    r0 = pxsim_Array__getAt(globals._players___4853, s.i___4900);
    s.tmp_7.arg0 = r0;
    s.callLocIdx = 24; s.pc = 5; return s.tmp_7;
  case 5:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_4, s.tmp_5, s.tmp_6);
  case 2:
  case 3:
    r0 = (s.i___4900 + 1);
    s.i___4900 = (r0);
    { step = 1; continue; }
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_inline__P4895.info = {"start":957,"length":254,"line":31,"column":29,"endLine":38,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["oldScene"]}

function controller_inline__P4895_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_inline__P4895, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  i___4900: undefined,
  arg0: undefined,
} }





function info_inline__P5006(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(globals.infoState___5002);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_numops_toBoolDecr(globals.infoStateStack___5004);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    globals.infoStateStack___5004 = (r0);
  case 1:
  case 2:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "state", globals.infoState___5002);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "scene", s.arg0);
    r0 = pxsim_Array__push(globals.infoStateStack___5004, s.tmp_0);
    globals.infoState___5002 = (undefined);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_inline__P5006.info = {"start":2619,"length":259,"line":94,"column":29,"endLine":103,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["oldScene"]}

function info_inline__P5006_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_inline__P5006, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function info_inline__P5021(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___5022 = undefined;
    s.nextState___5031 = undefined;
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 32; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.scene___5022 = (r0);
    globals.infoState___5002 = (undefined);
    s.tmp_0 = r0 = globals.infoStateStack___5004;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(globals.infoStateStack___5004);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    r0 = pxsim_Array_.pop(globals.infoStateStack___5004);
    s.nextState___5031 = (r0);
    s.tmp_2 = if_scene_1_mk(s);
    s.tmp_2.arg0 = s.nextState___5031;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "scene");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["scene"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["scene"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 33; s.pc = 8; return s.tmp_2; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.scene___5022);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = if_state_1_mk(s);
    s.tmp_3.arg0 = s.nextState___5031;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "state");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["state"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["state"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 34; s.pc = 9; return s.tmp_3; }
    }
  case 9:
    r0 = s.retval;
    globals.infoState___5002 = (r0);
    { step = 4; continue; }
  case 3:
    r0 = pxsim_Array__push(globals.infoStateStack___5004, s.nextState___5031);
  case 4:
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_inline__P5021.info = {"start":2910,"length":376,"line":105,"column":28,"endLine":116,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":[]}

function info_inline__P5021_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_inline__P5021, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scene___5022: undefined,
  nextState___5031: undefined,
} }





function gameOverConfig_inline__P5130(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals._gameOverConfig___5129);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtcore_mkClassInstance(game_GameOverConfig__C2974_VT);
    s.tmp_2 = r0;
    s.tmp_3 = game_GameOverConfig_constructor__P2989_mk(s);
    s.tmp_3.arg0 = s.tmp_2;
    s.callLocIdx = 36; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    globals._gameOverConfig___5129 = (s.tmp_2);
  case 1:
  case 2:
    r0 = globals._gameOverConfig___5129;
    return leave(s, r0)
  default: oops()
} } }
gameOverConfig_inline__P5130.info = {"start":3714,"length":115,"line":107,"column":34,"endLine":110,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"inline","argumentNames":[]}

function gameOverConfig_inline__P5130_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: gameOverConfig_inline__P5130, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function input_inline__P9239(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = (globals.state___4447 === 1);
    return leave(s, r0)
  default: oops()
} } }
input_inline__P9239.info = {"start":4131,"length":38,"line":125,"column":35,"endLine":125,"endColumn":73,"fileName":"input.ts","functionName":"inline","argumentNames":[]}

function input_inline__P9239_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: input_inline__P9239, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function input_inline__P9244(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = true;
    return leave(s, r0)
  default: oops()
} } }
input_inline__P9244.info = {"start":4319,"length":10,"line":129,"column":39,"endLine":129,"endColumn":49,"fileName":"input.ts","functionName":"inline","argumentNames":[]}

function input_inline__P9244_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: input_inline__P9244, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function pool_inline__P9291(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_pxtcore_mkClassInstance(dot_Score__C9246_VT);
    return leave(s, r0)
  default: oops()
} } }
pool_inline__P9291.info = {"start":776,"length":20,"line":28,"column":8,"endLine":28,"endColumn":28,"fileName":"scores.ts","functionName":"inline","argumentNames":[]}

function pool_inline__P9291_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pool_inline__P9291, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function pool_inline__P9293(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = dot_Score_init__P9248_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 268; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pool_inline__P9293.info = {"start":806,"length":26,"line":29,"column":8,"endLine":29,"endColumn":34,"fileName":"scores.ts","functionName":"inline","argumentNames":["s","a"]}

function pool_inline__P9293_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pool_inline__P9293, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function pool_inline__P34825(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_pxtcore_mkClassInstance(dot_Particle__C34787_VT);
    return leave(s, r0)
  default: oops()
} } }
pool_inline__P34825.info = {"start":637,"length":23,"line":22,"column":8,"endLine":22,"endColumn":31,"fileName":"particles.ts","functionName":"inline","argumentNames":[]}

function pool_inline__P34825_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pool_inline__P34825, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function pool_inline__P34827(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = dot_Particle_init__P34789_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 292; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pool_inline__P34827.info = {"start":670,"length":29,"line":23,"column":8,"endLine":23,"endColumn":37,"fileName":"particles.ts","functionName":"inline","argumentNames":["p","a"]}

function pool_inline__P34827_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pool_inline__P34827, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_inline__P10559(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = dot_Input_update__P9008_mk(s);
    s.tmp_0.arg0 = globals.input___4453;
    s.callLocIdx = 370; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = dot_Input_update__P9008_mk(s);
    s.tmp_0.arg0 = globals.input___4455;
    s.callLocIdx = 371; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_inline__P10559.info = {"start":99,"length":80,"line":1,"column":82,"endLine":4,"endColumn":5,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function dot_inline__P10559_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_inline__P10559, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function dot_gfx__internal_update__P4418(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_0.arg0 = globals.commands___7759;
    s.tmp_0.arg1 = dot_gfx__internal_update_inline__P7814;
    s.callLocIdx = 108; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = helpers_arraySplice__P100_mk(s);
    s.tmp_0.arg0 = globals.commands___7759;
    s.tmp_0.arg1 = 0;
    r0 = pxsim_Array__length(globals.commands___7759);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 109; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_gfx__internal_update__P4418.info = {"start":1858,"length":1202,"line":45,"column":12,"endLine":71,"endColumn":13,"fileName":"gfx.ts","functionName":"update","argumentNames":[]}

function dot_gfx__internal_update__P4418_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_gfx__internal_update__P4418, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function dot_gfx__internal_update_inline__P7814(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.c___7823 = undefined;
    s.c___7838 = undefined;
    s.c___7853 = undefined;
    s.c___7866 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["type"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 1:
    s.c___7823 = (s.arg0);
    s.tmp_0 = helpers_imageDrawRect__P1960_mk(s);
    s.tmp_0.arg0 = globals.screen___2033;
    r0 = s.c___7823.fields["x"];
    s.tmp_0.arg1 = r0;
    r0 = s.c___7823.fields["y"];
    s.tmp_0.arg2 = r0;
    r0 = s.c___7823.fields["w"];
    s.tmp_0.arg3 = r0;
    r0 = s.c___7823.fields["h"];
    s.tmp_0.arg4 = r0;
    r0 = s.c___7823.fields["color"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 105; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    { step = 5; continue; }
  case 2:
    s.c___7838 = (s.arg0);
    s.tmp_0 = helpers_imageFillRect__P1957_mk(s);
    s.tmp_0.arg0 = globals.screen___2033;
    r0 = s.c___7838.fields["x"];
    s.tmp_0.arg1 = r0;
    r0 = s.c___7838.fields["y"];
    s.tmp_0.arg2 = r0;
    r0 = s.c___7838.fields["w"];
    s.tmp_0.arg3 = r0;
    r0 = s.c___7838.fields["h"];
    s.tmp_0.arg4 = r0;
    r0 = s.c___7838.fields["color"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 106; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    { step = 5; continue; }
  case 3:
    s.c___7853 = (s.arg0);
    s.tmp_0 = helpers_imageDrawIcon__P1956_mk(s);
    s.tmp_0.arg0 = globals.screen___2033;
    r0 = s.c___7853.fields["buf"];
    s.tmp_0.arg1 = r0;
    r0 = s.c___7853.fields["x"];
    s.tmp_0.arg2 = r0;
    r0 = s.c___7853.fields["y"];
    s.tmp_0.arg3 = r0;
    r0 = s.c___7853.fields["color"];
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 107; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    { step = 5; continue; }
  case 4:
    s.c___7866 = (s.arg0);
    r0 = s.c___7866.fields["img"];
    s.tmp_0 = r0;
    r0 = s.c___7866.fields["x"];
    s.tmp_1 = r0;
    r0 = s.c___7866.fields["y"];
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(globals.screen___2033, s.tmp_0, s.tmp_1, s.tmp_2);
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_gfx__internal_update_inline__P7814.info = {"start":1918,"length":1073,"line":46,"column":33,"endLine":69,"endColumn":17,"fileName":"gfx.ts","functionName":"inline","argumentNames":["cmd"]}

function dot_gfx__internal_update_inline__P7814_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_gfx__internal_update_inline__P7814, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  c___7823: undefined,
  c___7838: undefined,
  c___7853: undefined,
  c___7866: undefined,
  arg0: undefined,
} }





function helpers_arraySplice__P100(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___11484 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1]) return breakpoint(s, 6, 1, r0);
  case 6:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2]) return breakpoint(s, 7, 2, r0);
  case 7:
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 3;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[3]) return breakpoint(s, 8, 3, r0);
  case 8:
    s.i___11484 = (0);
    s.lastBrkId = 4;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[4]) return breakpoint(s, 9, 4, r0);
  case 9:
  case 3:
    s.lastBrkId = 5;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[5]) return breakpoint(s, 10, 5, r0);
  case 10:
    r0 = (s.i___11484 < s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 6;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[6]) return breakpoint(s, 11, 6, r0);
  case 11:
    r0 = pxsim_Array_.removeAt(s.arg0, s.arg1);
    s.lastBrkId = 7;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[7]) return breakpoint(s, 12, 7, r0);
  case 12:
    r0 = (s.i___11484 + 1);
    s.i___11484 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySplice__P100.info = {"start":3642,"length":213,"line":137,"column":4,"endLine":144,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySplice","argumentNames":["arr","start","len"]}

function helpers_arraySplice__P100_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySplice__P100, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  i___11484: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_imageDrawIcon__P1956(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 584;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[584]) return breakpoint(s, 1, 584, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = helpers_pack__P4774_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg3;
    s.callLocIdx = 86; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods._drawIcon(s.tmp_0, s.tmp_1, s.tmp_2, s.arg4);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageDrawIcon__P1956.info = {"start":5304,"length":145,"line":173,"column":4,"endLine":175,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"imageDrawIcon","argumentNames":["img","icon","x","y","c"]}

function helpers_imageDrawIcon__P1956_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageDrawIcon__P1956, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function helpers_pack__P4774(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 571;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[571]) return breakpoint(s, 1, 571, r0);
  case 1:
    s.tmp_2 = Math_clamp__P127_mk(s);
    s.tmp_2.arg0 = -30000;
    s.tmp_2.arg1 = 30000;
    r0 = (s.arg0 | 0);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 84; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 65535);
    s.tmp_0 = r0;
    s.tmp_5 = Math_clamp__P127_mk(s);
    s.tmp_5.arg0 = -30000;
    s.tmp_5.arg1 = 30000;
    r0 = (s.arg1 | 0);
    s.tmp_5.arg2 = r0;
    s.callLocIdx = 85; s.pc = 3; return s.tmp_5;
  case 3:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 << 16);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 | s.tmp_3);
    return leave(s, r0)
  default: oops()
} } }
helpers_pack__P4774.info = {"start":4278,"length":145,"line":148,"column":4,"endLine":150,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"pack","argumentNames":["x","y"]}

function helpers_pack__P4774_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_pack__P4774, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Math_clamp__P127(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 195;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[195]) return breakpoint(s, 1, 195, r0);
  case 1:
    s.tmp_0 = Math_min__P131_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg2;
    s.callLocIdx = 15; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 16; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
Math_clamp__P127.info = {"start":15643,"length":130,"line":528,"column":4,"endLine":530,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"clamp","argumentNames":["min","max","value"]}

function Math_clamp__P127_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_clamp__P127, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Math_min__P131(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 205;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[205]) return breakpoint(s, 4, 205, r0);
  case 4:
    r0 = (s.arg0 <= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 206;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[206]) return breakpoint(s, 5, 206, r0);
  case 5:
    r0 = s.arg0;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 207;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[207]) return breakpoint(s, 6, 207, r0);
  case 6:
    r0 = s.arg1;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Math_min__P131.info = {"start":16854,"length":105,"line":568,"column":4,"endLine":571,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"min","argumentNames":["a","b"]}

function Math_min__P131_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_min__P131, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Math_max__P130(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 202;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[202]) return breakpoint(s, 4, 202, r0);
  case 4:
    r0 = (s.arg0 >= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 203;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[203]) return breakpoint(s, 5, 203, r0);
  case 5:
    r0 = s.arg0;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 204;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[204]) return breakpoint(s, 6, 204, r0);
  case 6:
    r0 = s.arg1;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Math_max__P130.info = {"start":16614,"length":105,"line":558,"column":4,"endLine":561,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"max","argumentNames":["a","b"]}

function Math_max__P130_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_max__P130, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_imageFillRect__P1957(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 585;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[585]) return breakpoint(s, 1, 585, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = helpers_pack__P4774_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 87; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = helpers_pack__P4774_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.tmp_4.arg1 = s.arg4;
    s.callLocIdx = 88; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods._fillRect(s.tmp_0, s.tmp_1, s.tmp_3, s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageFillRect__P1957.info = {"start":5454,"length":159,"line":176,"column":4,"endLine":178,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"imageFillRect","argumentNames":["img","x","y","w","h","c"]}

function helpers_imageFillRect__P1957_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageFillRect__P1957, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function helpers_imageDrawRect__P1960(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 587;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[587]) return breakpoint(s, 6, 587, r0);
  case 6:
    r0 = (s.arg3 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg4 == 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 588;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[588]) return breakpoint(s, 7, 588, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 589;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[589]) return breakpoint(s, 8, 589, r0);
  case 8:
    r0 = (s.arg3 - 1);
    s.arg3 = (r0);
    s.lastBrkId = 590;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[590]) return breakpoint(s, 9, 590, r0);
  case 9:
    r0 = (s.arg4 - 1);
    s.arg4 = (r0);
    s.lastBrkId = 591;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[591]) return breakpoint(s, 10, 591, r0);
  case 10:
    s.tmp_0 = helpers_imageDrawLine__P1959_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = s.arg2;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 91; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 592;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[592]) return breakpoint(s, 12, 592, r0);
  case 12:
    s.tmp_0 = helpers_imageDrawLine__P1959_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = s.arg1;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 92; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 593;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[593]) return breakpoint(s, 14, 593, r0);
  case 14:
    s.tmp_0 = helpers_imageDrawLine__P1959_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg1 = r0;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg2 = r0;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = s.arg2;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 93; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 594;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[594]) return breakpoint(s, 16, 594, r0);
  case 16:
    s.tmp_0 = helpers_imageDrawLine__P1959_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg1 = r0;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.arg1;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 94; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageDrawRect__P1960.info = {"start":5945,"length":370,"line":185,"column":4,"endLine":193,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"imageDrawRect","argumentNames":["img","x","y","w","h","c"]}

function helpers_imageDrawRect__P1960_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageDrawRect__P1960, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function helpers_imageDrawLine__P1959(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 586;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[586]) return breakpoint(s, 1, 586, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = helpers_pack__P4774_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 89; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = helpers_pack__P4774_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.tmp_4.arg1 = s.arg4;
    s.callLocIdx = 90; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods._drawLine(s.tmp_0, s.tmp_1, s.tmp_3, s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageDrawLine__P1959.info = {"start":5781,"length":159,"line":182,"column":4,"endLine":184,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"imageDrawLine","argumentNames":["img","x","y","w","h","c"]}

function helpers_imageDrawLine__P1959_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageDrawLine__P1959, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function helpers_arrayForEach__P109(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___11443 = undefined;
    s.i___11446 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 74;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[74]) return breakpoint(s, 3, 74, r0);
  case 3:
    r0 = pxsim_Array__length(s.arg0);
    s.len___11443 = (r0);
    s.lastBrkId = 75;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[75]) return breakpoint(s, 4, 75, r0);
  case 4:
    s.i___11446 = (0);
    s.lastBrkId = 76;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[76]) return breakpoint(s, 5, 76, r0);
  case 5:
  case 1:
    s.lastBrkId = 77;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[77]) return breakpoint(s, 6, 77, r0);
  case 6:
    r0 = (s.i___11446 < s.len___11443);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 78;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[78]) return breakpoint(s, 7, 78, r0);
  case 7:
    s.tmp_1 = lambda_3_mk(s);
    s.tmp_1.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___11446);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.i___11446;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 5; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 79;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[79]) return breakpoint(s, 9, 79, r0);
  case 9:
    r0 = (s.i___11446 + 1);
    s.i___11446 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayForEach__P109.info = {"start":7439,"length":250,"line":254,"column":4,"endLine":259,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayForEach","argumentNames":["arr","callbackfn"]}

function helpers_arrayForEach__P109_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayForEach__P109, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  len___11443: undefined,
  i___11446: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_game__internal_update__P4451(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals._gameUpdate___8712);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 21; continue; }
  case 1:
  case 2:
    r0 = (globals.state___4447 === 1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    r0 = (globals.tick___4443 / 3600);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    globals.difficulty___4444 = (r0);
  case 3:
  case 4:
    r0 = (globals.state___4447 === 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    s.tmp_1 = dot_Input_justPressed__P8880_mk(s);
    s.tmp_1.arg0 = globals.input___4455;
    s.callLocIdx = 213; s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
  case 6:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 7; continue; }
    s.tmp_3 = dot_game_gotoPlaying__P8835_mk(s);
    s.callLocIdx = 214; s.pc = 23; return s.tmp_3;
  case 23:
    r0 = s.retval;
  case 7:
  case 8:
    s.tmp_0 = r0 = globals.restartAt___8702;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 9:
    r0 = (globals.restartAt___8702 < globals.tick___4443);
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 11; continue; }
    r0 = s.tmp_1;
    { step = 14; continue; }
  case 11:
    r0 = (globals.state___4447 === 2);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 12; continue; }
    r0 = s.tmp_2;
    { step = 13; continue; }
  case 12:
    s.tmp_3 = dot_Input_justPressed__P8880_mk(s);
    s.tmp_3.arg0 = globals.input___4455;
    s.callLocIdx = 215; s.pc = 24; return s.tmp_3;
  case 24:
    r0 = s.retval;
  case 13:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
  case 14:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 15; continue; }
    s.tmp_6 = dot_game_start__P4448_mk(s);
    s.tmp_6.arg0 = globals._gameUpdate___8712;
    s.callLocIdx = 216; s.pc = 25; return s.tmp_6;
  case 25:
    r0 = s.retval;
  case 15:
  case 16:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = globals._gameUpdate___8712;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 217; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.tmp_0 = dot_scores__internal_update__P4462_mk(s);
    s.callLocIdx = 218; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    s.tmp_0 = dot_particles__internal_update__P34743_mk(s);
    s.callLocIdx = 219; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    s.tmp_0 = dot_game_drawScoreboard__P8737_mk(s);
    s.callLocIdx = 220; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    r0 = (globals.state___4447 === 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    s.tmp_1 = dot_game_drawTitle__P8767_mk(s);
    s.callLocIdx = 221; s.pc = 30; return s.tmp_1;
  case 30:
    r0 = s.retval;
  case 17:
  case 18:
    r0 = (globals.state___4447 === 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 19; continue; }
    s.tmp_1 = dot_game_drawGameOver__P8814_mk(s);
    s.callLocIdx = 222; s.pc = 31; return s.tmp_1;
  case 31:
    r0 = s.retval;
  case 19:
  case 20:
    r0 = (globals.tick___4443 + 1);
    globals.tick___4443 = (r0);
    s.tmp_0 = dot_collision__internal_clear__P4374_mk(s);
    s.callLocIdx = 223; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.tmp_0 = dot_color__internal_reset__P4410_mk(s);
    s.callLocIdx = 224; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
  case 21:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_game__internal_update__P4451.info = {"start":3657,"length":1002,"line":113,"column":12,"endLine":145,"endColumn":13,"fileName":"game.ts","functionName":"update","argumentNames":[]}

function dot_game__internal_update__P4451_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_game__internal_update__P4451, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
} }





function dot_color__internal_reset__P4410(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, 2);
    globals._colorStack___7652 = (s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_color__internal_reset__P4410.info = {"start":1915,"length":82,"line":73,"column":12,"endLine":75,"endColumn":13,"fileName":"color.ts","functionName":"reset","argumentNames":[]}

function dot_color__internal_reset__P4410_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_color__internal_reset__P4410, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function dot_collision__internal_clear__P4374(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = (globals.gen___4373 + 1);
    globals.gen___4373 = (r0);
    s.tmp_0 = helpers_arraySplice__P100_mk(s);
    s.tmp_0.arg0 = globals.reporters___7464;
    s.tmp_0.arg1 = 0;
    r0 = pxsim_Array__length(globals.reporters___7464);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 78; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = helpers_arraySplice__P100_mk(s);
    s.tmp_0.arg0 = globals.dirty___7466;
    s.tmp_0.arg1 = 0;
    r0 = pxsim_Array__length(globals.dirty___7466);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 79; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_collision__internal_clear__P4374.info = {"start":2142,"length":164,"line":64,"column":12,"endLine":68,"endColumn":13,"fileName":"collision.ts","functionName":"clear","argumentNames":[]}

function dot_collision__internal_clear__P4374_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_collision__internal_clear__P4374, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function dot_game_drawGameOver__P8814(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.text___8817 = undefined;
    s.tmp_0 = dot_color_push__P4402_mk(s);
    s.tmp_0.arg0 = globals.textColor___4438;
    s.callLocIdx = 202; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = r0 = globals._gameOverText___8711;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = "GAME OVER";
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.text___8817 = (s.tmp_1);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    r0 = (globals.SCREEN_WIDTH___4379 / 2);
    s.tmp_1.arg1 = r0;
    r0 = (globals.SCREEN_HEIGHT___4380 / 2);
    s.tmp_2 = r0;
    s.tmp_5 = if_charHeight_1_mk(s);
    s.tmp_5.arg0 = globals.titleFont___8708;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "charHeight");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["charHeight"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["charHeight"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 203; s.pc = 5; return s.tmp_5; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 / 2);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 204; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_6 = dot_draw_text__P60300_mk(s);
    s.tmp_6.arg0 = s.tmp_0;
    s.tmp_6.arg1 = s.text___8817;
    s.tmp_6.arg2 = 1;
    s.tmp_6.arg3 = globals.titleFont___8708;
    s.callLocIdx = 205; s.pc = 6; return s.tmp_6;
  case 6:
    r0 = s.retval;
    s.tmp_0 = dot_color_pop__P4403_mk(s);
    s.callLocIdx = 206; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_game_drawGameOver__P8814.info = {"start":2640,"length":334,"line":80,"column":8,"endLine":88,"endColumn":9,"fileName":"game.ts","functionName":"drawGameOver","argumentNames":[]}

function dot_game_drawGameOver__P8814_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_game_drawGameOver__P8814, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  text___8817: undefined,
} }





function dot_color_pop__P4403(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_Array__length(globals._colorStack___7652);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array_.pop(globals._colorStack___7652);
  case 1:
  case 2:
    s.tmp_0 = r0 = globals._colorStack___7652;
    r0 = pxsim_Array__length(globals._colorStack___7652);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
dot_color_pop__P4403.info = {"start":1167,"length":158,"line":51,"column":8,"endLine":56,"endColumn":9,"fileName":"color.ts","functionName":"pop","argumentNames":[]}

function dot_color_pop__P4403_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_color_pop__P4403, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function dot_color_curr__P4400(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = r0 = globals._colorStack___7652;
    r0 = pxsim_Array__length(globals._colorStack___7652);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
dot_color_curr__P4400.info = {"start":858,"length":97,"line":42,"column":8,"endLine":44,"endColumn":9,"fileName":"color.ts","functionName":"curr","argumentNames":[]}

function dot_color_curr__P4400_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_color_curr__P4400, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function dot_draw_text__P60300(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.x___60305 = undefined;
    s.y___60310 = undefined;
    s.x0___60320 = undefined;
    s.cp___60322 = undefined;
    s.mult___60323 = undefined;
    s.dataW___60328 = undefined;
    s.dataH___60334 = undefined;
    s.byteHeight___60340 = undefined;
    s.charSize___60346 = undefined;
    s.dataSize___60350 = undefined;
    s.fontdata___60354 = undefined;
    s.lastchar___60357 = undefined;
    s.width___60364 = undefined;
    s.xOffset___60390 = undefined;
    s.yOffset___60391 = undefined;
    s.ch___60392 = undefined;
    s.l___60411 = undefined;
    s.r___60412 = undefined;
    s.off___60414 = undefined;
    s.guess___60415 = undefined;
    s.m___60434 = undefined;
    s.v___60443 = undefined;
    s.imgBuf___60470 = undefined;
    s.i___60514 = undefined;
    s.j___60519 = undefined;
    s.mask___60520 = undefined;
    s.c___60521 = undefined;
    s.n___60538 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["x"];
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.x___60305 = (r0);
    r0 = s.arg0.fields["y"];
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.y___60310 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = image_getFontForText__P1978_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 132; s.pc = 34; return s.tmp_2;
  case 34:
    r0 = s.retval;
    s.arg3 = (r0);
  case 1:
  case 2:
    s.x0___60320 = (s.x___60305);
    s.cp___60322 = (0);
    s.tmp_1 = if_multiplier_1_mk(s);
    s.tmp_1.arg0 = s.arg3;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "multiplier");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["multiplier"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["multiplier"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 133; s.pc = 35; return s.tmp_1; }
    }
  case 35:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_2 = if_multiplier_1_mk(s);
    s.tmp_2.arg0 = s.arg3;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "multiplier");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["multiplier"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["multiplier"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 134; s.pc = 36; return s.tmp_2; }
    }
  case 36:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    r0 = 1;
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.mult___60323 = (s.tmp_3);
    s.tmp_1 = if_charWidth_1_mk(s);
    s.tmp_1.arg0 = s.arg3;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "charWidth");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["charWidth"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["charWidth"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 135; s.pc = 37; return s.tmp_1; }
    }
  case 37:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.mult___60323);
    s.dataW___60328 = (r0);
    s.tmp_1 = if_charHeight_1_mk(s);
    s.tmp_1.arg0 = s.arg3;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "charHeight");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["charHeight"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["charHeight"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 136; s.pc = 38; return s.tmp_1; }
    }
  case 38:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.mult___60323);
    s.dataH___60334 = (r0);
    r0 = (s.dataH___60334 + 7);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 3);
    s.byteHeight___60340 = (r0);
    r0 = (s.byteHeight___60340 * s.dataW___60328);
    s.charSize___60346 = (r0);
    r0 = (2 + s.charSize___60346);
    s.dataSize___60350 = (r0);
    s.tmp_0 = if_data_1_mk(s);
    s.tmp_0.arg0 = s.arg3;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "data");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["data"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["data"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 137; s.pc = 39; return s.tmp_0; }
    }
  case 39:
    r0 = s.retval;
    s.fontdata___60354 = (r0);
    r0 = pxsim.BufferMethods.length(s.fontdata___60354);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_1, s.dataSize___60350);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    s.lastchar___60357 = (r0);
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_0 = r0;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.arg3;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 138; s.pc = 40; return s.tmp_2; }
    }
  case 40:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.width___60364 = (r0);
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 5:
    s.tmp_1 = r0 = s.x___60305;
    r0 = (s.width___60364 / 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.x___60305 = (r0);
    { step = 7; continue; }
  case 6:
    r0 = (s.x___60305 - s.width___60364);
    s.x___60305 = (r0);
  case 7:
  case 8:
    s.tmp_1 = r0 = s.cp___60322;
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 33; continue; }
    s.xOffset___60390 = (0);
    s.yOffset___60391 = (0);
    s.tmp_0 = r0 = s.cp___60322;
    r0 = (s.tmp_0 + 1);
    s.cp___60322 = (r0);
    r0 = pxsim_String_.charCodeAt(s.arg1, s.tmp_0);
    s.ch___60392 = (r0);
    r0 = (s.ch___60392 == 10);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.tmp_1 = r0 = s.y___60310;
    s.tmp_4 = if_charHeight_1_mk(s);
    s.tmp_4.arg0 = s.arg3;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charHeight");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charHeight"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charHeight"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 139; s.pc = 41; return s.tmp_4; }
    }
  case 41:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.y___60310 = (r0);
    s.x___60305 = (s.x0___60320);
  case 9:
  case 10:
    r0 = (s.ch___60392 < 32);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    { step = 8; continue; }
  case 11:
  case 12:
    s.l___60411 = (0);
    s.r___60412 = (s.lastchar___60357);
    s.off___60414 = (0);
    r0 = (s.ch___60392 - 32);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.dataSize___60350);
    s.guess___60415 = (r0);
    r0 = pxsim.BufferMethods.getNumber(s.fontdata___60354, 4, s.guess___60415);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.ch___60392);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.off___60414 = (s.guess___60415);
    { step = 20; continue; }
  case 13:
  case 14:
    r0 = (s.l___60411 <= s.r___60412);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 19; continue; }
    s.tmp_1 = r0 = s.l___60411;
    r0 = (s.r___60412 - s.l___60411);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.m___60434 = (r0);
    s.tmp_0 = r0 = s.fontdata___60354;
    r0 = (s.m___60434 * s.dataSize___60350);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.getNumber(s.tmp_0, 4, s.tmp_1);
    s.v___60443 = (r0);
    r0 = (s.v___60443 == s.ch___60392);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    r0 = (s.m___60434 * s.dataSize___60350);
    s.off___60414 = (r0);
    { step = 19; continue; }
  case 15:
  case 16:
    r0 = (s.v___60443 < s.ch___60392);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    r0 = (s.m___60434 + 1);
    s.l___60411 = (r0);
    { step = 18; continue; }
  case 17:
    r0 = (s.m___60434 - 1);
    s.r___60412 = (r0);
  case 18:
    { step = 14; continue; }
  case 19:
  case 20:
    r0 = (s.mult___60323 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 21; continue; }
    s.imgBuf___60470 = (undefined);
    r0 = (8 + s.charSize___60346);
    s.tmp_0 = r0;
    r0 = pxsim.control.createBuffer(s.tmp_0);
    s.imgBuf___60470 = (r0);
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___60470, 0, 135);
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___60470, 1, 1);
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___60470, 2, s.dataW___60328);
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___60470, 4, s.dataH___60334);
    s.tmp_0 = r0 = s.imgBuf___60470;
    s.tmp_2 = r0 = s.fontdata___60354;
    r0 = (s.off___60414 + 2);
    s.tmp_3 = r0;
    r0 = pxsim.BufferMethods.slice(s.tmp_2, s.tmp_3, s.charSize___60346);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.write(s.tmp_0, 8, s.tmp_1);
    s.tmp_0 = dot_gfx_icon__P4415_mk(s);
    r0 = (s.x___60305 + s.xOffset___60390);
    s.tmp_0.arg0 = r0;
    r0 = (s.y___60310 + s.yOffset___60391);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.imgBuf___60470;
    s.callLocIdx = 140; s.pc = 42; return s.tmp_0;
  case 42:
    r0 = s.retval;
    s.tmp_0 = r0 = s.x___60305;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.arg3;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 141; s.pc = 43; return s.tmp_2; }
    }
  case 43:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.x___60305 = (r0);
    { step = 32; continue; }
  case 21:
    r0 = (s.off___60414 + 2);
    s.off___60414 = (r0);
    s.i___60514 = (0);
  case 22:
    r0 = (s.i___60514 < s.dataW___60328);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 31; continue; }
    s.j___60519 = (0);
    s.mask___60520 = (1);
    s.tmp_0 = r0 = s.off___60414;
    r0 = (s.tmp_0 + 1);
    s.off___60414 = (r0);
    r0 = pxsim.BufferMethods.getByte(s.fontdata___60354, s.tmp_0);
    s.c___60521 = (r0);
  case 23:
    r0 = (s.j___60519 < s.dataH___60334);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 30; continue; }
    r0 = (s.mask___60520 == 256);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 24; continue; }
    s.tmp_2 = r0 = s.off___60414;
    r0 = (s.tmp_2 + 1);
    s.off___60414 = (r0);
    r0 = pxsim.BufferMethods.getByte(s.fontdata___60354, s.tmp_2);
    s.c___60521 = (r0);
    s.mask___60520 = (1);
  case 24:
  case 25:
    s.n___60538 = (0);
  case 26:
    r0 = (s.c___60521 & s.mask___60520);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 27; continue; }
    r0 = (s.n___60538 + 1);
    s.n___60538 = (r0);
    r0 = (s.mask___60520 << 1);
    s.mask___60520 = (r0);
    { step = 26; continue; }
  case 27:
    r0 = pxsim_numops_toBoolDecr(s.n___60538);
    if (!r0) { step = 28; continue; }
    s.tmp_0 = dot_gfx_box__P4414_mk(s);
    s.tmp_1 = r0 = s.x___60305;
    r0 = (s.xOffset___60390 * s.mult___60323);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg0 = r0;
    s.tmp_3 = r0 = s.y___60310;
    r0 = (s.j___60519 + s.yOffset___60391);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 * s.mult___60323);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.mult___60323;
    r0 = (s.mult___60323 * s.n___60538);
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 142; s.pc = 44; return s.tmp_0;
  case 44:
    r0 = s.retval;
    r0 = (s.j___60519 + s.n___60538);
    s.j___60519 = (r0);
    { step = 29; continue; }
  case 28:
    r0 = (s.mask___60520 << 1);
    s.mask___60520 = (r0);
    r0 = (s.j___60519 + 1);
    s.j___60519 = (r0);
  case 29:
    { step = 23; continue; }
  case 30:
    r0 = (s.x___60305 + s.mult___60323);
    s.x___60305 = (r0);
    r0 = (s.i___60514 + 1);
    s.i___60514 = (r0);
    { step = 22; continue; }
  case 31:
  case 32:
    { step = 8; continue; }
  case 33:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_draw_text__P60300.info = {"start":3681,"length":3961,"line":112,"column":8,"endLine":219,"endColumn":9,"fileName":"draw.ts","functionName":"text","argumentNames":["p","s","alignment","font"]}

function dot_draw_text__P60300_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_draw_text__P60300, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  x___60305: undefined,
  y___60310: undefined,
  x0___60320: undefined,
  cp___60322: undefined,
  mult___60323: undefined,
  dataW___60328: undefined,
  dataH___60334: undefined,
  byteHeight___60340: undefined,
  charSize___60346: undefined,
  dataSize___60350: undefined,
  fontdata___60354: undefined,
  lastchar___60357: undefined,
  width___60364: undefined,
  xOffset___60390: undefined,
  yOffset___60391: undefined,
  ch___60392: undefined,
  l___60411: undefined,
  r___60412: undefined,
  off___60414: undefined,
  guess___60415: undefined,
  m___60434: undefined,
  v___60443: undefined,
  imgBuf___60470: undefined,
  i___60514: undefined,
  j___60519: undefined,
  mask___60520: undefined,
  c___60521: undefined,
  n___60538: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function dot_gfx_box__P4414(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(dot_gfx_GfxBoxCommand__C7726_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_gfx_GfxBoxCommand_constructor__P7728_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.arg2;
    s.tmp_1.arg4 = s.arg3;
    s.tmp_2 = r0 = globals._colorStack___7652;
    r0 = pxsim_Array__length(globals._colorStack___7652);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 1);
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_3);
    s.tmp_1.arg5 = r0;
    s.callLocIdx = 101; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = pxsim_Array__push(globals.commands___7759, s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_gfx_box__P4414.info = {"start":1365,"length":164,"line":35,"column":8,"endLine":37,"endColumn":9,"fileName":"gfx.ts","functionName":"box","argumentNames":["x","y","width","height"]}

function dot_gfx_box__P4414_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_gfx_box__P4414, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function dot_gfx_GfxBoxCommand_constructor__P7728(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_gfx_GfxBoxCommand__C7726_VT)) failedCast(r0);
    r0 = (s.arg0).fields["x"] = (s.arg1);
    r0 = (s.arg0).fields["y"] = (s.arg2);
    r0 = (s.arg0).fields["w"] = (s.arg3);
    r0 = (s.arg0).fields["h"] = (s.arg4);
    r0 = (s.arg0).fields["color"] = (s.arg5);
    s.tmp_0 = dot_gfx_GfxCommand_constructor__P7711_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 1;
    s.callLocIdx = 95; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_gfx_GfxBoxCommand_constructor__P7728.info = {"start":545,"length":164,"line":17,"column":12,"endLine":19,"endColumn":13,"fileName":"gfx.ts","functionName":"inline","argumentNames":["this","x","y","w","h","color"]}

function dot_gfx_GfxBoxCommand_constructor__P7728_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_gfx_GfxBoxCommand_constructor__P7728, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function dot_gfx_GfxCommand_constructor__P7711(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_gfx_GfxCommand__C7710_VT)) failedCast(r0);
    r0 = (s.arg0).fields["type"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_gfx_GfxCommand_constructor__P7711.info = {"start":191,"length":44,"line":9,"column":12,"endLine":9,"endColumn":56,"fileName":"gfx.ts","functionName":"inline","argumentNames":["this","type"]}

function dot_gfx_GfxCommand_constructor__P7711_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_gfx_GfxCommand_constructor__P7711, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function dot_gfx_icon__P4415(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(dot_gfx_GfxIconCommand__C7738_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_gfx_GfxIconCommand_constructor__P7740_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.arg2;
    s.tmp_2 = r0 = globals._colorStack___7652;
    r0 = pxsim_Array__length(globals._colorStack___7652);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 1);
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_3);
    s.tmp_1.arg4 = r0;
    s.callLocIdx = 103; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = pxsim_Array__push(globals.commands___7759, s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_gfx_icon__P4415.info = {"start":1538,"length":139,"line":38,"column":8,"endLine":40,"endColumn":9,"fileName":"gfx.ts","functionName":"icon","argumentNames":["x","y","buf"]}

function dot_gfx_icon__P4415_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_gfx_icon__P4415, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function dot_gfx_GfxIconCommand_constructor__P7740(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_gfx_GfxIconCommand__C7738_VT)) failedCast(r0);
    r0 = (s.arg0).fields["x"] = (s.arg1);
    r0 = (s.arg0).fields["y"] = (s.arg2);
    r0 = (s.arg0).fields["buf"] = (s.arg3);
    r0 = (s.arg0).fields["color"] = (s.arg4);
    s.tmp_0 = dot_gfx_GfxCommand_constructor__P7711_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 2;
    s.callLocIdx = 96; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_gfx_GfxIconCommand_constructor__P7740.info = {"start":782,"length":149,"line":22,"column":12,"endLine":24,"endColumn":13,"fileName":"gfx.ts","functionName":"inline","argumentNames":["this","x","y","buf","color"]}

function dot_gfx_GfxIconCommand_constructor__P7740_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_gfx_GfxIconCommand_constructor__P7740, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function image_getFontForText__P1978(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___11221 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 601;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[601]) return breakpoint(s, 6, 601, r0);
  case 6:
    s.i___11221 = (0);
    s.lastBrkId = 602;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[602]) return breakpoint(s, 7, 602, r0);
  case 7:
  case 1:
    s.lastBrkId = 603;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[603]) return breakpoint(s, 8, 603, r0);
  case 8:
    s.tmp_1 = r0 = s.i___11221;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 604;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[604]) return breakpoint(s, 9, 604, r0);
  case 9:
    r0 = pxsim_String_.charCodeAt(s.arg0, s.i___11221);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 > 8192);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 605;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[605]) return breakpoint(s, 10, 605, r0);
  case 10:
    r0 = globals.font12___1977;
    { step = 5; continue; }
  case 2:
  case 3:
    s.lastBrkId = 606;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[606]) return breakpoint(s, 11, 606, r0);
  case 11:
    r0 = (s.i___11221 + 1);
    s.i___11221 = (r0);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 607;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[607]) return breakpoint(s, 12, 607, r0);
  case 12:
    r0 = globals.font8___1976;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
image_getFontForText__P1978.info = {"start":11713,"length":259,"line":136,"column":4,"endLine":143,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"getFontForText","argumentNames":["text"]}

function image_getFontForText__P1978_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: image_getFontForText__P1978, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  i___11221: undefined,
  arg0: undefined,
} }





function dot_color_push__P4402(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__push(globals._colorStack___7652, s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_color_push__P4402.info = {"start":1075,"length":83,"line":48,"column":8,"endLine":50,"endColumn":9,"fileName":"color.ts","functionName":"push","argumentNames":["color"]}

function dot_color_push__P4402_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_color_push__P4402, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function dot_game_drawTitle__P8767(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.text___8799 = undefined;
    r0 = pxsim_numops_toBoolDecr(globals.gameTitle___4439);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = dot_color_push__P4402_mk(s);
    s.tmp_0.arg0 = globals.textColor___4438;
    s.callLocIdx = 192; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    r0 = (globals.SCREEN_WIDTH___4379 / 2);
    s.tmp_1.arg1 = r0;
    r0 = (globals.SCREEN_HEIGHT___4380 / 3);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 193; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_2 = dot_draw_text__P60300_mk(s);
    s.tmp_2.arg0 = s.tmp_0;
    s.tmp_2.arg1 = globals.gameTitle___4439;
    s.tmp_2.arg2 = 1;
    s.tmp_2.arg3 = globals.titleFont___8708;
    s.callLocIdx = 194; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    r0 = (globals.SCREEN_WIDTH___4379 / 2);
    s.tmp_1.arg1 = r0;
    r0 = (globals.SCREEN_HEIGHT___4380 / 2);
    s.tmp_2 = r0;
    r0 = (8 + s.tmp_2);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 195; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.tmp_3 = dot_draw_text__P60300_mk(s);
    s.tmp_3.arg0 = s.tmp_0;
    s.tmp_3.arg1 = globals.gameDescription___4440;
    s.tmp_3.arg2 = 1;
    s.tmp_3.arg3 = globals.font8___1976;
    s.callLocIdx = 196; s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.tmp_0 = dot_color_pop__P4403_mk(s);
    s.callLocIdx = 197; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = (globals.tick___4443 % 80);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 40);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_2 = dot_color_push__P4402_mk(s);
    s.tmp_2.arg0 = globals.textColor___4438;
    s.callLocIdx = 198; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.tmp_0 = r0 = globals.insertCoinText___4441;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = "PRESS ANY KEY";
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.text___8799 = (s.tmp_1);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    r0 = (globals.SCREEN_WIDTH___4379 / 2);
    s.tmp_1.arg1 = r0;
    r0 = (globals.SCREEN_HEIGHT___4380 * 5);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 / 6);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 199; s.pc = 14; return s.tmp_1;
  case 14:
    r0 = s.retval;
    s.tmp_3 = dot_draw_text__P60300_mk(s);
    s.tmp_3.arg0 = s.tmp_0;
    s.tmp_3.arg1 = s.text___8799;
    s.tmp_3.arg2 = 1;
    s.tmp_3.arg3 = globals.font5___1981;
    s.callLocIdx = 200; s.pc = 15; return s.tmp_3;
  case 15:
    r0 = s.retval;
    s.tmp_0 = dot_color_pop__P4403_mk(s);
    s.callLocIdx = 201; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_game_drawTitle__P8767.info = {"start":1760,"length":870,"line":56,"column":8,"endLine":78,"endColumn":9,"fileName":"game.ts","functionName":"drawTitle","argumentNames":[]}

function dot_game_drawTitle__P8767_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_game_drawTitle__P8767, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  text___8799: undefined,
} }





function dot_game_drawScoreboard__P8737(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = dot_color_push__P4402_mk(s);
    s.tmp_0.arg0 = globals.scoreboardColor___4437;
    s.callLocIdx = 186; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 2;
    s.tmp_1.arg2 = 2;
    s.callLocIdx = 187; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_2 = dot_draw_text__P60300_mk(s);
    s.tmp_2.arg0 = s.tmp_0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_3 = r0;
    r0 = pxsim.Math_.floor(globals.score___4445);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2.arg1 = r0;
    s.tmp_2.arg2 = 0;
    s.tmp_2.arg3 = globals.scoreboardFont___8704;
    s.callLocIdx = 188; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.SCREEN_WIDTH___4379;
    s.tmp_1.arg2 = 2;
    s.callLocIdx = 189; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_2 = dot_draw_text__P60300_mk(s);
    s.tmp_2.arg0 = s.tmp_0;
    r0 = pxsim.Math_.floor(globals.high___4446);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 7);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("HI ", s.tmp_3);
    s.tmp_2.arg1 = r0;
    s.tmp_2.arg2 = 2;
    s.tmp_2.arg3 = globals.scoreboardFont___8704;
    s.callLocIdx = 190; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_0 = dot_color_pop__P4403_mk(s);
    s.callLocIdx = 191; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_game_drawScoreboard__P8737.info = {"start":1339,"length":411,"line":43,"column":8,"endLine":54,"endColumn":9,"fileName":"game.ts","functionName":"drawScoreboard","argumentNames":[]}

function dot_game_drawScoreboard__P8737_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_game_drawScoreboard__P8737, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
} }





function dot_particles__internal_update__P34743(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.c___34894 = undefined;
    s.tmp_0 = r0 = globals._colorStack___7652;
    r0 = pxsim_Array__length(globals._colorStack___7652);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    s.c___34894 = (r0);
    s.tmp_0 = dot_Pool_update__P4483_mk(s);
    s.tmp_0.arg0 = globals.pool___34823;
    s.tmp_0.arg1 = dot_particles__internal_update_inline__P34899;
    s.callLocIdx = 312; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = dot_color_set__P4401_mk(s);
    s.tmp_0.arg0 = s.c___34894;
    s.callLocIdx = 313; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_particles__internal_update__P34743.info = {"start":1626,"length":499,"line":54,"column":12,"endLine":68,"endColumn":13,"fileName":"particles.ts","functionName":"update","argumentNames":[]}

function dot_particles__internal_update__P34743_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_particles__internal_update__P34743, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  c___34894: undefined,
} }





function dot_particles__internal_update_inline__P34899(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["ticks"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ticks"] = (s.tmp_1);
    r0 = s.arg0.fields["ticks"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = true;
    { step = 3; continue; }
  case 1:
  case 2:
    s.tmp_2 = dot_Vec_add__P30675_mk(s);
    r0 = s.arg0.fields["pos"];
    s.tmp_2.arg0 = r0;
    r0 = s.arg0.fields["vel"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 308; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_0 = dot_Vec_scale__P30678_mk(s);
    r0 = s.arg0.fields["vel"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 0.98;
    s.callLocIdx = 309; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.tmp_0 = dot_color_set__P4401_mk(s);
    r0 = s.arg0.fields["color"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 310; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.tmp_0 = dot_gfx_rect__P4413_mk(s);
    r0 = s.arg0.fields["pos"];
    r0 = r0.fields["x"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["pos"];
    r0 = r0.fields["y"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 1;
    s.tmp_0.arg3 = 1;
    s.callLocIdx = 311; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = false;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
dot_particles__internal_update_inline__P34899.info = {"start":1721,"length":358,"line":56,"column":28,"endLine":66,"endColumn":17,"fileName":"particles.ts","functionName":"inline","argumentNames":["p"]}

function dot_particles__internal_update_inline__P34899_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_particles__internal_update_inline__P34899, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function dot_gfx_rect__P4413(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(dot_gfx_GfxRectCommand__C7714_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_gfx_GfxRectCommand_constructor__P7716_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.arg2;
    s.tmp_1.arg4 = s.arg3;
    s.tmp_2 = r0 = globals._colorStack___7652;
    r0 = pxsim_Array__length(globals._colorStack___7652);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 1);
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_3);
    s.tmp_1.arg5 = r0;
    s.callLocIdx = 99; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = pxsim_Array__push(globals.commands___7759, s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_gfx_rect__P4413.info = {"start":1190,"length":166,"line":32,"column":8,"endLine":34,"endColumn":9,"fileName":"gfx.ts","functionName":"rect","argumentNames":["x","y","width","height"]}

function dot_gfx_rect__P4413_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_gfx_rect__P4413, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function dot_gfx_GfxRectCommand_constructor__P7716(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_gfx_GfxRectCommand__C7714_VT)) failedCast(r0);
    r0 = (s.arg0).fields["x"] = (s.arg1);
    r0 = (s.arg0).fields["y"] = (s.arg2);
    r0 = (s.arg0).fields["w"] = (s.arg3);
    r0 = (s.arg0).fields["h"] = (s.arg4);
    r0 = (s.arg0).fields["color"] = (s.arg5);
    s.tmp_0 = dot_gfx_GfxCommand_constructor__P7711_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 94; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_gfx_GfxRectCommand_constructor__P7716.info = {"start":308,"length":165,"line":12,"column":12,"endLine":14,"endColumn":13,"fileName":"gfx.ts","functionName":"inline","argumentNames":["this","x","y","w","h","color"]}

function dot_gfx_GfxRectCommand_constructor__P7716_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_gfx_GfxRectCommand_constructor__P7716, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function dot_color_set__P4401(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = globals._colorStack___7652;
    r0 = pxsim_Array__length(globals._colorStack___7652);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_1, s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_color_set__P4401.info = {"start":964,"length":102,"line":45,"column":8,"endLine":47,"endColumn":9,"fileName":"color.ts","functionName":"set","argumentNames":["color"]}

function dot_color_set__P4401_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_color_set__P4401, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function dot_Vec_scale__P30678(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Vec__C30670_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["x"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["x"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["y"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["y"] = (s.tmp_1);
    r0 = s.arg0;
    return leave(s, r0)
  default: oops()
} } }
dot_Vec_scale__P30678.info = {"start":811,"length":116,"line":26,"column":8,"endLine":30,"endColumn":9,"fileName":"vec.ts","functionName":"scale","argumentNames":["this","s"]}

function dot_Vec_scale__P30678_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Vec_scale__P30678, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_Vec_add__P30675(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Vec__C30670_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["x"];
    s.tmp_2 = r0;
    r0 = s.arg1.fields["x"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["x"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["y"];
    s.tmp_2 = r0;
    r0 = s.arg1.fields["y"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["y"] = (s.tmp_1);
    r0 = s.arg0;
    return leave(s, r0)
  default: oops()
} } }
dot_Vec_add__P30675.info = {"start":439,"length":115,"line":11,"column":8,"endLine":15,"endColumn":9,"fileName":"vec.ts","functionName":"add","argumentNames":["this","v"]}

function dot_Vec_add__P30675_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Vec_add__P30675, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_Pool_update__P4483(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Pool__C4477_VT)) failedCast(r0);
    r0 = pxsim_pxtcore_mkAction(1, dot_Pool_update_inline__P9574);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    s.tmp_1 = dot_remove__P4337_mk(s);
    r0 = s.arg0.fields["active"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    r0 = s.arg0.fields["pool"];
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 290; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Pool_update__P4483.info = {"start":676,"length":103,"line":22,"column":8,"endLine":24,"endColumn":9,"fileName":"pool.ts","functionName":"update","argumentNames":["this","fn"]}

function dot_Pool_update__P4483_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Pool_update__P4483, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_Pool_update_inline__P9574(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.caps[0];
    s.tmp_0.arg0 = s.arg0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 289; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
dot_Pool_update_inline__P9574.info = {"start":742,"length":14,"line":23,"column":32,"endLine":23,"endColumn":46,"fileName":"pool.ts","functionName":"inline","argumentNames":["obj"]}

function dot_Pool_update_inline__P9574_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Pool_update_inline__P9574, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function dot_remove__P4337(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___7229 = undefined;
    s.index___7230 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__mk();
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.arg2 = (s.tmp_1);
    s.i___7229 = (0);
    s.index___7230 = (0);
  case 3:
    s.tmp_1 = r0 = s.i___7229;
    r0 = pxsim_Array__length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_4 = lambda_3_mk(s);
    s.tmp_4.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___7229);
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.index___7230;
    setupLambda(s.tmp_4, s.tmp_4.argL);
    s.callLocIdx = 63; s.pc = 7; return s.tmp_4;
  case 7:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 4; continue; }
    s.tmp_5 = r0 = s.arg2;
    r0 = pxsim_Array__getAt(s.arg0, s.i___7229);
    s.tmp_6 = r0;
    r0 = pxsim_Array__push(s.tmp_5, s.tmp_6);
    s.tmp_0 = helpers_arraySplice__P100_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.i___7229;
    s.tmp_0.arg2 = 1;
    s.callLocIdx = 64; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    { step = 5; continue; }
  case 4:
    r0 = (s.i___7229 + 1);
    s.i___7229 = (r0);
  case 5:
    r0 = (s.index___7230 + 1);
    s.index___7230 = (r0);
    { step = 3; continue; }
  case 6:
    r0 = s.arg2;
    return leave(s, r0)
  default: oops()
} } }
dot_remove__P4337.info = {"start":565,"length":436,"line":19,"column":4,"endLine":34,"endColumn":5,"fileName":"util.ts","functionName":"remove","argumentNames":["array","func","removed"]}

function dot_remove__P4337_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_remove__P4337, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  i___7229: undefined,
  index___7230: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function dot_scores__internal_update__P4462(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.c___9347 = undefined;
    s.tmp_0 = r0 = globals._colorStack___7652;
    r0 = pxsim_Array__length(globals._colorStack___7652);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    s.c___9347 = (r0);
    s.tmp_0 = dot_Pool_update__P4483_mk(s);
    s.tmp_0.arg0 = globals.pool___9289;
    s.tmp_0.arg1 = dot_scores__internal_update_inline__P9352;
    s.callLocIdx = 278; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = dot_color_set__P4401_mk(s);
    s.tmp_0.arg0 = s.c___9347;
    s.callLocIdx = 279; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_scores__internal_update__P4462.info = {"start":1497,"length":406,"line":50,"column":12,"endLine":60,"endColumn":13,"fileName":"scores.ts","functionName":"update","argumentNames":[]}

function dot_scores__internal_update__P4462_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_scores__internal_update__P4462, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  c___9347: undefined,
} }





function dot_scores__internal_update_inline__P9352(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = dot_color_set__P4401_mk(s);
    r0 = s.arg0.fields["color"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 276; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = dot_draw_text__P60300_mk(s);
    r0 = s.arg0.fields["pos"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["str"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 1;
    s.tmp_0.arg3 = globals.scoreFont___4457;
    s.callLocIdx = 277; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = s.arg0.fields["pos"];
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["y"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["vy"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["y"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["vy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * 0.9);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vy"] = (s.tmp_1);
    r0 = s.arg0.fields["deathTick"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 <= globals.tick___4443);
    return leave(s, r0)
  default: oops()
} } }
dot_scores__internal_update_inline__P9352.info = {"start":1592,"length":265,"line":52,"column":28,"endLine":58,"endColumn":17,"fileName":"scores.ts","functionName":"inline","argumentNames":["s"]}

function dot_scores__internal_update_inline__P9352_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_scores__internal_update_inline__P9352, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function dot_game_gotoPlaying__P8835(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = dot_Input_block__P8720_mk(s);
    s.tmp_0.arg0 = globals.input___4453;
    s.callLocIdx = 207; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = dot_Input_block__P8720_mk(s);
    s.tmp_0.arg0 = globals.input___4455;
    s.callLocIdx = 208; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    globals.tick___4443 = (0);
    globals.score___4445 = (0);
    globals.difficulty___4444 = (1);
    s.tmp_0 = dot_scores__internal_init__P4461_mk(s);
    s.callLocIdx = 209; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = dot_particles__internal_init__P34738_mk(s);
    s.callLocIdx = 210; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    globals.state___4447 = (1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_game_gotoPlaying__P8835.info = {"start":2984,"length":293,"line":90,"column":8,"endLine":99,"endColumn":9,"fileName":"game.ts","functionName":"gotoPlaying","argumentNames":[]}

function dot_game_gotoPlaying__P8835_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_game_gotoPlaying__P8835, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function dot_particles__internal_init__P34738(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = dot_Pool_reset__P4482_mk(s);
    s.tmp_0.arg0 = globals.pool___34823;
    s.callLocIdx = 306; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_particles__internal_init__P34738.info = {"start":1545,"length":68,"line":51,"column":12,"endLine":53,"endColumn":13,"fileName":"particles.ts","functionName":"init","argumentNames":[]}

function dot_particles__internal_init__P34738_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_particles__internal_init__P34738, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function dot_Pool_reset__P4482(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Pool__C4477_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = helpers_arrayConcat__P113_mk(s);
    r0 = s.arg0.fields["pool"];
    s.tmp_2.arg0 = r0;
    r0 = s.arg0.fields["active"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 287; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["pool"] = (s.tmp_1);
    s.tmp_0 = helpers_arraySplice__P100_mk(s);
    r0 = s.arg0.fields["active"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 0;
    r0 = s.arg0.fields["active"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__length(s.tmp_1);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 288; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Pool_reset__P4482.info = {"start":538,"length":129,"line":18,"column":8,"endLine":21,"endColumn":9,"fileName":"pool.ts","functionName":"reset","argumentNames":["this"]}

function dot_Pool_reset__P4482_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Pool_reset__P4482, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function helpers_arrayConcat__P113(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.out___11046 = undefined;
    s.value___11049 = undefined;
    s.unnamed1290___U2 = undefined;
    s.unnamed1291___U3 = undefined;
    s.value___11056 = undefined;
    s.unnamed1292___U5 = undefined;
    s.unnamed1293___U6 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 106;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[106]) return breakpoint(s, 5, 106, r0);
  case 5:
    r0 = pxsim_Array__mk();
    s.out___11046 = (r0);
    s.lastBrkId = 107;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[107]) return breakpoint(s, 6, 107, r0);
  case 6:
    s.value___11049 = (undefined);
    s.unnamed1290___U2 = (s.arg0);
    s.unnamed1291___U3 = (0);
    s.lastBrkId = 108;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[108]) return breakpoint(s, 7, 108, r0);
  case 7:
  case 1:
    s.tmp_0 = r0 = s.unnamed1291___U3;
    r0 = pxsim_Array__length(s.unnamed1290___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1290___U2, s.unnamed1291___U3);
    s.value___11049 = (r0);
    s.lastBrkId = 109;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[109]) return breakpoint(s, 8, 109, r0);
  case 8:
    s.lastBrkId = 110;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[110]) return breakpoint(s, 9, 110, r0);
  case 9:
    r0 = pxsim_Array__push(s.out___11046, s.value___11049);
    r0 = (s.unnamed1291___U3 + 1);
    s.unnamed1291___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed1290___U2 = (undefined);
    s.lastBrkId = 111;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[111]) return breakpoint(s, 10, 111, r0);
  case 10:
    s.value___11056 = (undefined);
    s.unnamed1292___U5 = (s.arg1);
    s.unnamed1293___U6 = (0);
    s.lastBrkId = 112;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[112]) return breakpoint(s, 11, 112, r0);
  case 11:
  case 3:
    s.tmp_0 = r0 = s.unnamed1293___U6;
    r0 = pxsim_Array__length(s.unnamed1292___U5);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1292___U5, s.unnamed1293___U6);
    s.value___11056 = (r0);
    s.lastBrkId = 113;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[113]) return breakpoint(s, 12, 113, r0);
  case 12:
    s.lastBrkId = 114;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[114]) return breakpoint(s, 13, 114, r0);
  case 13:
    r0 = pxsim_Array__push(s.out___11046, s.value___11056);
    r0 = (s.unnamed1293___U6 + 1);
    s.unnamed1293___U6 = (r0);
    { step = 3; continue; }
  case 4:
    s.unnamed1292___U5 = (undefined);
    s.lastBrkId = 115;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[115]) return breakpoint(s, 14, 115, r0);
  case 14:
    r0 = s.out___11046;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayConcat__P113.info = {"start":8639,"length":264,"line":288,"column":4,"endLine":297,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayConcat","argumentNames":["arr","otherArr"]}

function helpers_arrayConcat__P113_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayConcat__P113, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  out___11046: undefined,
  value___11049: undefined,
  unnamed1290___U2: undefined,
  unnamed1291___U3: undefined,
  value___11056: undefined,
  unnamed1292___U5: undefined,
  unnamed1293___U6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_scores__internal_init__P4461(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = dot_Pool_reset__P4482_mk(s);
    s.tmp_0.arg0 = globals.pool___9289;
    s.callLocIdx = 274; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_scores__internal_init__P4461.info = {"start":1416,"length":68,"line":47,"column":12,"endLine":49,"endColumn":13,"fileName":"scores.ts","functionName":"init","argumentNames":[]}

function dot_scores__internal_init__P4461_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_scores__internal_init__P4461, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function dot_Input_block__P8720(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Input__C8999_VT)) failedCast(r0);
    s.tmp_0 = dot_Button_block__P8921_mk(s);
    r0 = s.arg0.fields["_A"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 259; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = dot_Button_block__P8921_mk(s);
    r0 = s.arg0.fields["_B"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 260; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = dot_Button_block__P8921_mk(s);
    r0 = s.arg0.fields["_Up"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 261; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = dot_Button_block__P8921_mk(s);
    r0 = s.arg0.fields["_Down"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 262; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.tmp_0 = dot_Button_block__P8921_mk(s);
    r0 = s.arg0.fields["_Left"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 263; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.tmp_0 = dot_Button_block__P8921_mk(s);
    r0 = s.arg0.fields["_Right"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 264; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = (s.arg0).fields["_isPressed"] = (false);
    r0 = (s.arg0).fields["_justPressed"] = (false);
    r0 = (s.arg0).fields["_justReleased"] = (false);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Input_block__P8720.info = {"start":3703,"length":320,"line":111,"column":8,"endLine":121,"endColumn":9,"fileName":"input.ts","functionName":"block","argumentNames":["this"]}

function dot_Input_block__P8720_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Input_block__P8720, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function dot_Button_block__P8921(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Button__C8915_VT)) failedCast(r0);
    r0 = s.arg0.fields["_isPressed"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (s.arg0).fields["_block"] = (true);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Button_block__P8921.info = {"start":1100,"length":104,"line":32,"column":8,"endLine":36,"endColumn":9,"fileName":"input.ts","functionName":"block","argumentNames":["this"]}

function dot_Button_block__P8921_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Button_block__P8921, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function dot_Input_justPressed__P8880(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Input__C8999_VT)) failedCast(r0);
    s.tmp_1 = if_condition_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "condition"), 1);
      s.callLocIdx = 228; s.pc = 3; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["condition"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["condition"], 1); s.callLocIdx = 228; s.pc = 3; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 228; s.pc = 3; return s.tmp_1;; }
     else { s.callLocIdx = 228; s.pc = 3; return s.tmp_1; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_justPressed"];
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leaveAccessor(s, r0)
  default: oops()
} } }
dot_Input_justPressed__P8880.info = {"start":1429,"length":96,"line":47,"column":8,"endLine":49,"endColumn":9,"fileName":"input.ts","functionName":"justPressed","argumentNames":["this"]}
dot_Input_justPressed__P8880.isGetter = true;

function dot_Input_justPressed__P8880_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Input_justPressed__P8880, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function dot_Input_update__P9008(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Input__C8999_VT)) failedCast(r0);
    s.tmp_0 = dot_Button_update__P8919_mk(s);
    r0 = s.arg0.fields["_A"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 235; s.pc = 31; return s.tmp_0;
  case 31:
    r0 = s.retval;
    s.tmp_0 = dot_Button_update__P8919_mk(s);
    r0 = s.arg0.fields["_B"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 236; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.tmp_0 = dot_Button_update__P8919_mk(s);
    r0 = s.arg0.fields["_Up"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 237; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
    s.tmp_0 = dot_Button_update__P8919_mk(s);
    r0 = s.arg0.fields["_Down"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 238; s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
    s.tmp_0 = dot_Button_update__P8919_mk(s);
    r0 = s.arg0.fields["_Left"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 239; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    s.tmp_0 = dot_Button_update__P8919_mk(s);
    r0 = s.arg0.fields["_Right"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 240; s.pc = 36; return s.tmp_0;
  case 36:
    r0 = s.retval;
    s.tmp_1 = dot_Button_isPressed__P8916_mk(s);
    r0 = s.arg0.fields["_A"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 241; s.pc = 37; return s.tmp_1;
  case 37:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = dot_Button_isPressed__P8916_mk(s);
    r0 = s.arg0.fields["_B"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 242; s.pc = 38; return s.tmp_2;
  case 38:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_3;
    { step = 4; continue; }
  case 3:
    s.tmp_4 = dot_Button_isPressed__P8916_mk(s);
    r0 = s.arg0.fields["_Up"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 243; s.pc = 39; return s.tmp_4;
  case 39:
    r0 = s.retval;
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_5;
    { step = 6; continue; }
  case 5:
    s.tmp_6 = dot_Button_isPressed__P8916_mk(s);
    r0 = s.arg0.fields["_Down"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 244; s.pc = 40; return s.tmp_6;
  case 40:
    r0 = s.retval;
  case 6:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBool(s.tmp_7);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_7;
    { step = 8; continue; }
  case 7:
    s.tmp_8 = dot_Button_isPressed__P8916_mk(s);
    r0 = s.arg0.fields["_Left"];
    s.tmp_8.arg0 = r0;
    s.callLocIdx = 245; s.pc = 41; return s.tmp_8;
  case 41:
    r0 = s.retval;
  case 8:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBool(s.tmp_9);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_9;
    { step = 10; continue; }
  case 9:
    s.tmp_10 = dot_Button_isPressed__P8916_mk(s);
    r0 = s.arg0.fields["_Right"];
    s.tmp_10.arg0 = r0;
    s.callLocIdx = 246; s.pc = 42; return s.tmp_10;
  case 42:
    r0 = s.retval;
  case 10:
    // jmp value (already in r0)
    s.tmp_11 = r0;
    r0 = (s.arg0).fields["_isPressed"] = (s.tmp_11);
    s.tmp_1 = dot_Button_justPressed__P8917_mk(s);
    r0 = s.arg0.fields["_A"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 247; s.pc = 43; return s.tmp_1;
  case 43:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 11; continue; }
    r0 = s.tmp_0;
    { step = 12; continue; }
  case 11:
    s.tmp_2 = dot_Button_justPressed__P8917_mk(s);
    r0 = s.arg0.fields["_B"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 248; s.pc = 44; return s.tmp_2;
  case 44:
    r0 = s.retval;
  case 12:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 13; continue; }
    r0 = s.tmp_3;
    { step = 14; continue; }
  case 13:
    s.tmp_4 = dot_Button_justPressed__P8917_mk(s);
    r0 = s.arg0.fields["_Up"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 249; s.pc = 45; return s.tmp_4;
  case 45:
    r0 = s.retval;
  case 14:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (!r0) { step = 15; continue; }
    r0 = s.tmp_5;
    { step = 16; continue; }
  case 15:
    s.tmp_6 = dot_Button_justPressed__P8917_mk(s);
    r0 = s.arg0.fields["_Down"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 250; s.pc = 46; return s.tmp_6;
  case 46:
    r0 = s.retval;
  case 16:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBool(s.tmp_7);
    if (!r0) { step = 17; continue; }
    r0 = s.tmp_7;
    { step = 18; continue; }
  case 17:
    s.tmp_8 = dot_Button_justPressed__P8917_mk(s);
    r0 = s.arg0.fields["_Left"];
    s.tmp_8.arg0 = r0;
    s.callLocIdx = 251; s.pc = 47; return s.tmp_8;
  case 47:
    r0 = s.retval;
  case 18:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBool(s.tmp_9);
    if (!r0) { step = 19; continue; }
    r0 = s.tmp_9;
    { step = 20; continue; }
  case 19:
    s.tmp_10 = dot_Button_justPressed__P8917_mk(s);
    r0 = s.arg0.fields["_Right"];
    s.tmp_10.arg0 = r0;
    s.callLocIdx = 252; s.pc = 48; return s.tmp_10;
  case 48:
    r0 = s.retval;
  case 20:
    // jmp value (already in r0)
    s.tmp_11 = r0;
    r0 = (s.arg0).fields["_justPressed"] = (s.tmp_11);
    s.tmp_1 = dot_Button_justReleased__P8918_mk(s);
    r0 = s.arg0.fields["_A"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 253; s.pc = 49; return s.tmp_1;
  case 49:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 21; continue; }
    r0 = s.tmp_0;
    { step = 22; continue; }
  case 21:
    s.tmp_2 = dot_Button_justReleased__P8918_mk(s);
    r0 = s.arg0.fields["_B"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 254; s.pc = 50; return s.tmp_2;
  case 50:
    r0 = s.retval;
  case 22:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 23; continue; }
    r0 = s.tmp_3;
    { step = 24; continue; }
  case 23:
    s.tmp_4 = dot_Button_justReleased__P8918_mk(s);
    r0 = s.arg0.fields["_Up"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 255; s.pc = 51; return s.tmp_4;
  case 51:
    r0 = s.retval;
  case 24:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (!r0) { step = 25; continue; }
    r0 = s.tmp_5;
    { step = 26; continue; }
  case 25:
    s.tmp_6 = dot_Button_justReleased__P8918_mk(s);
    r0 = s.arg0.fields["_Down"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 256; s.pc = 52; return s.tmp_6;
  case 52:
    r0 = s.retval;
  case 26:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBool(s.tmp_7);
    if (!r0) { step = 27; continue; }
    r0 = s.tmp_7;
    { step = 28; continue; }
  case 27:
    s.tmp_8 = dot_Button_justReleased__P8918_mk(s);
    r0 = s.arg0.fields["_Left"];
    s.tmp_8.arg0 = r0;
    s.callLocIdx = 257; s.pc = 53; return s.tmp_8;
  case 53:
    r0 = s.retval;
  case 28:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBool(s.tmp_9);
    if (!r0) { step = 29; continue; }
    r0 = s.tmp_9;
    { step = 30; continue; }
  case 29:
    s.tmp_10 = dot_Button_justReleased__P8918_mk(s);
    r0 = s.arg0.fields["_Right"];
    s.tmp_10.arg0 = r0;
    s.callLocIdx = 258; s.pc = 54; return s.tmp_10;
  case 54:
    r0 = s.retval;
  case 30:
    // jmp value (already in r0)
    s.tmp_11 = r0;
    r0 = (s.arg0).fields["_justReleased"] = (s.tmp_11);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Input_update__P9008.info = {"start":2624,"length":741,"line":89,"column":8,"endLine":99,"endColumn":9,"fileName":"input.ts","functionName":"update","argumentNames":["this"]}

function dot_Input_update__P9008_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Input_update__P9008, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  arg0: undefined,
} }





function dot_Button_justReleased__P8918(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Button__C8915_VT)) failedCast(r0);
    r0 = s.arg0.fields["_block"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_3 = if_condition_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!s.tmp_3.arg0.vtable.iface) {
      setupLambda(s.tmp_3, pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "condition"), 1);
      s.callLocIdx = 227; s.pc = 5; return s.tmp_3;
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["condition"];
      if (s.tmp_3.fn == null) { setupLambda(s.tmp_3, s.tmp_3.arg0.fields["condition"], 1); s.callLocIdx = 227; s.pc = 5; return s.tmp_3; }
      else if (s.tmp_3.fn.isGetter) { s.tmp_3.stage2Call = true; s.callLocIdx = 227; s.pc = 5; return s.tmp_3;; }
     else { s.callLocIdx = 227; s.pc = 5; return s.tmp_3; }
    }
  case 5:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_4;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["_justReleased"];
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
    return leaveAccessor(s, r0)
  default: oops()
} } }
dot_Button_justReleased__P8918.info = {"start":486,"length":114,"line":15,"column":8,"endLine":17,"endColumn":9,"fileName":"input.ts","functionName":"justReleased","argumentNames":["this"]}
dot_Button_justReleased__P8918.isGetter = true;

function dot_Button_justReleased__P8918_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Button_justReleased__P8918, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function dot_Button_justPressed__P8917(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Button__C8915_VT)) failedCast(r0);
    r0 = s.arg0.fields["_block"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_3 = if_condition_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!s.tmp_3.arg0.vtable.iface) {
      setupLambda(s.tmp_3, pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "condition"), 1);
      s.callLocIdx = 226; s.pc = 5; return s.tmp_3;
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["condition"];
      if (s.tmp_3.fn == null) { setupLambda(s.tmp_3, s.tmp_3.arg0.fields["condition"], 1); s.callLocIdx = 226; s.pc = 5; return s.tmp_3; }
      else if (s.tmp_3.fn.isGetter) { s.tmp_3.stage2Call = true; s.callLocIdx = 226; s.pc = 5; return s.tmp_3;; }
     else { s.callLocIdx = 226; s.pc = 5; return s.tmp_3; }
    }
  case 5:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_4;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["_justPressed"];
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
    return leaveAccessor(s, r0)
  default: oops()
} } }
dot_Button_justPressed__P8917.info = {"start":365,"length":112,"line":12,"column":8,"endLine":14,"endColumn":9,"fileName":"input.ts","functionName":"justPressed","argumentNames":["this"]}
dot_Button_justPressed__P8917.isGetter = true;

function dot_Button_justPressed__P8917_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Button_justPressed__P8917, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function dot_Button_isPressed__P8916(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Button__C8915_VT)) failedCast(r0);
    r0 = s.arg0.fields["_block"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_3 = if_condition_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!s.tmp_3.arg0.vtable.iface) {
      setupLambda(s.tmp_3, pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "condition"), 1);
      s.callLocIdx = 225; s.pc = 5; return s.tmp_3;
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["condition"];
      if (s.tmp_3.fn == null) { setupLambda(s.tmp_3, s.tmp_3.arg0.fields["condition"], 1); s.callLocIdx = 225; s.pc = 5; return s.tmp_3; }
      else if (s.tmp_3.fn.isGetter) { s.tmp_3.stage2Call = true; s.callLocIdx = 225; s.pc = 5; return s.tmp_3;; }
     else { s.callLocIdx = 225; s.pc = 5; return s.tmp_3; }
    }
  case 5:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_4;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["_isPressed"];
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
    return leaveAccessor(s, r0)
  default: oops()
} } }
dot_Button_isPressed__P8916.info = {"start":248,"length":108,"line":9,"column":8,"endLine":11,"endColumn":9,"fileName":"input.ts","functionName":"isPressed","argumentNames":["this"]}
dot_Button_isPressed__P8916.isGetter = true;

function dot_Button_isPressed__P8916_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Button_isPressed__P8916, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function dot_Button_update__P8919(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.wasPressed___8958 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Button__C8915_VT)) failedCast(r0);
    r0 = s.arg0.fields["_isPressed"];
    s.wasPressed___8958 = (r0);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = controller_Button__C2190_v0_1_mk(s);
    r0 = s.arg0.fields["src"];
    s.tmp_2.arg0 = r0;
    if (!checkSubtype(s.tmp_2.arg0, controller_Button__C2190_VT)) failedCast(s.tmp_2.arg0);
    s.tmp_2.fn = s.tmp_2.arg0.vtable.methods.isPressed;
    s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_isPressed"] = (s.tmp_1);
    r0 = pxsim_numops_toBoolDecr(s.wasPressed___8958);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_isPressed"];
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = (s.arg0).fields["_justPressed"] = (s.tmp_2);
    s.tmp_0 = r0 = s.wasPressed___8958;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["_isPressed"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = (s.arg0).fields["_justReleased"] = (s.tmp_3);
    r0 = s.arg0.fields["_isPressed"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = (s.arg0).fields["_block"] = (false);
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Button_update__P8919.info = {"start":610,"length":304,"line":19,"column":8,"endLine":25,"endColumn":9,"fileName":"input.ts","functionName":"update","argumentNames":["this"]}

function dot_Button_update__P8919_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Button_update__P8919, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  wasPressed___8958: undefined,
  arg0: undefined,
} }





function controller_Button_isPressed__P2201(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2190_VT)) failedCast(r0);
    s.lastBrkId = 917;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[917]) return breakpoint(s, 1, 917, r0);
  case 1:
    r0 = s.arg0.fields["_pressed"];
    return leave(s, r0)
  default: oops()
} } }
controller_Button_isPressed__P2201.info = {"start":6303,"length":57,"line":185,"column":8,"endLine":187,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"isPressed","argumentNames":["this"]}

function controller_Button_isPressed__P2201_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_isPressed__P2201, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function control_eventContext__P408(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 488;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[488]) return breakpoint(s, 3, 488, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.eventContexts___4637);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = r0 = globals.eventContexts___4637;
    r0 = pxsim_Array__length(globals.eventContexts___4637);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    { step = 2; continue; }
  case 1:
    r0 = undefined;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.tmp_3;
    return leave(s, r0)
  default: oops()
} } }
control_eventContext__P408.info = {"start":7094,"length":136,"line":213,"column":4,"endLine":215,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"eventContext","argumentNames":[]}

function control_eventContext__P408_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_eventContext__P408, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function control_EventContext_registerFrameHandler__P403(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.fn___10589 = undefined;
    s.i___10598 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.lastBrkId = 463;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[463]) return breakpoint(s, 8, 463, r0);
  case 8:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 464;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[464]) return breakpoint(s, 9, 464, r0);
  case 9:
    s.tmp_3 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["frameCallbacks"] = (s.tmp_4);
    s.lastBrkId = 465;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[465]) return breakpoint(s, 10, 465, r0);
  case 10:
    s.tmp_0 = control_EventContext_registerFrameCallbacks__P4635_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 57; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 466;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[466]) return breakpoint(s, 12, 466, r0);
  case 12:
    r0 = pxsim_pxtcore_mkClassInstance(control_FrameCallback__C392_VT);
    s.fn___10589 = (r0);
    s.lastBrkId = 467;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[467]) return breakpoint(s, 13, 467, r0);
  case 13:
    r0 = (s.fn___10589).fields["order"] = (s.arg1);
    s.lastBrkId = 468;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[468]) return breakpoint(s, 14, 468, r0);
  case 14:
    r0 = (s.fn___10589).fields["handler"] = (s.arg2);
    s.lastBrkId = 469;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[469]) return breakpoint(s, 15, 469, r0);
  case 15:
    s.i___10598 = (0);
    s.lastBrkId = 470;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[470]) return breakpoint(s, 16, 470, r0);
  case 16:
  case 3:
    s.lastBrkId = 471;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[471]) return breakpoint(s, 17, 471, r0);
  case 17:
    s.tmp_1 = r0 = s.i___10598;
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 472;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[472]) return breakpoint(s, 18, 472, r0);
  case 18:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_6, s.i___10598);
    r0 = r0.fields["order"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 > s.arg1);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 473;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[473]) return breakpoint(s, 19, 473, r0);
  case 19:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_7 = r0;
    r0 = pxsim_Array_.insertAt(s.tmp_7, s.i___10598, s.fn___10589);
    s.lastBrkId = 474;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[474]) return breakpoint(s, 20, 474, r0);
  case 20:
    r0 = s.fn___10589;
    { step = 7; continue; }
  case 4:
  case 5:
    s.lastBrkId = 475;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[475]) return breakpoint(s, 21, 475, r0);
  case 21:
    r0 = (s.i___10598 + 1);
    s.i___10598 = (r0);
    { step = 3; continue; }
  case 6:
    s.lastBrkId = 476;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[476]) return breakpoint(s, 22, 476, r0);
  case 22:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.fn___10589);
    s.lastBrkId = 477;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[477]) return breakpoint(s, 23, 477, r0);
  case 23:
    r0 = s.fn___10589;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerFrameHandler__P403.info = {"start":4862,"length":643,"line":147,"column":8,"endLine":164,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"registerFrameHandler","argumentNames":["this","order","handler"]}

function control_EventContext_registerFrameHandler__P403_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerFrameHandler__P403, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  fn___10589: undefined,
  i___10598: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_EventContext_registerFrameCallbacks__P4635(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.worker___10632 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.lastBrkId = 437;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[437]) return breakpoint(s, 4, 437, r0);
  case 4:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 438;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[438]) return breakpoint(s, 5, 438, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 439;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[439]) return breakpoint(s, 6, 439, r0);
  case 6:
    r0 = s.arg0.fields["frameWorker"];
    s.worker___10632 = (r0);
    s.lastBrkId = 440;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[440]) return breakpoint(s, 7, 440, r0);
  case 7:
    r0 = pxsim_pxtcore_mkAction(2, control_EventContext_registerFrameCallbacks_inline__P10638);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.worker___10632);
    r0 = pxsim.control.runInParallel(s.tmp_0);
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerFrameCallbacks__P4635.info = {"start":3668,"length":895,"line":109,"column":8,"endLine":133,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"registerFrameCallbacks","argumentNames":["this"]}

function control_EventContext_registerFrameCallbacks__P4635_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerFrameCallbacks__P4635, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  worker___10632: undefined,
  arg0: undefined,
} }





function control_EventContext_registerFrameCallbacks_inline__P10638(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.delay___10668 = undefined;
    s.lastBrkId = 441;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[441]) return breakpoint(s, 5, 441, r0);
  case 5:
    r0 = s.caps[0].fields["runningCallbacks"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 442;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[442]) return breakpoint(s, 6, 442, r0);
  case 6:
    r0 = pxsim_pxtcore_mkAction(1, control_EventContext_registerFrameCallbacks_inline__P10644);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.caps[0]);
    s.tmp_2 = pauseUntil__P367_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    s.tmp_2.arg1 = undefined;
    s.callLocIdx = 51; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 443;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[443]) return breakpoint(s, 8, 443, r0);
  case 8:
    r0 = (s.caps[0]).fields["runningCallbacks"] = (true);
    s.lastBrkId = 444;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[444]) return breakpoint(s, 9, 444, r0);
  case 9:
    r0 = (s.caps[0]).fields["framesInSample"] = (0);
    s.lastBrkId = 445;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[445]) return breakpoint(s, 10, 445, r0);
  case 10:
    r0 = (s.caps[0]).fields["timeInSample"] = (0);
    s.lastBrkId = 446;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[446]) return breakpoint(s, 11, 446, r0);
  case 11:
    r0 = (s.caps[0]).fields["deltaTimeMillis"] = (0);
    s.lastBrkId = 447;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[447]) return breakpoint(s, 12, 447, r0);
  case 12:
    s.tmp_0 = r0 = s.caps[0];
    r0 = pxsim.control.millis();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["prevTimeMillis"] = (s.tmp_1);
    s.lastBrkId = 448;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[448]) return breakpoint(s, 13, 448, r0);
  case 13:
  case 3:
    s.lastBrkId = 449;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[449]) return breakpoint(s, 14, 449, r0);
  case 14:
    r0 = s.caps[0].fields["frameWorker"];
    s.tmp_1 = r0;
    r0 = (s.caps[1] == s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 450;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[450]) return breakpoint(s, 15, 450, r0);
  case 15:
    s.tmp_2 = control_EventContext_runCallbacks__P4634_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 52; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
    s.delay___10668 = (r0);
    s.lastBrkId = 451;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[451]) return breakpoint(s, 17, 451, r0);
  case 17:
    s.tmp_0 = pause__P413_mk(s);
    s.tmp_0.arg0 = s.delay___10668;
    s.callLocIdx = 53; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    { step = 3; continue; }
  case 4:
    s.lastBrkId = 452;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[452]) return breakpoint(s, 19, 452, r0);
  case 19:
    r0 = (s.caps[0]).fields["runningCallbacks"] = (false);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerFrameCallbacks_inline__P10638.info = {"start":3829,"length":723,"line":113,"column":34,"endLine":132,"endColumn":13,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":[]}

function control_EventContext_registerFrameCallbacks_inline__P10638_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerFrameCallbacks_inline__P10638, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  delay___10668: undefined,
} }





function control_EventContext_registerFrameCallbacks_inline__P10644(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = s.caps[0].fields["runningCallbacks"];
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerFrameCallbacks_inline__P10644.info = {"start":4060,"length":28,"line":117,"column":31,"endLine":117,"endColumn":59,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":[]}

function control_EventContext_registerFrameCallbacks_inline__P10644_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerFrameCallbacks_inline__P10644, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function control_EventContext_runCallbacks__P4634(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.loopStart___10677 = undefined;
    s.f___10690 = undefined;
    s.unnamed1298___U2 = undefined;
    s.unnamed1299___U3 = undefined;
    s.now___10695 = undefined;
    s.runtime___10698 = undefined;
    s.realTimeInSample___10717 = undefined;
    s.fps___10726 = undefined;
    s.delay___10795 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.lastBrkId = 410;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[410]) return breakpoint(s, 11, 410, r0);
  case 11:
    s.lastBrkId = 411;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[411]) return breakpoint(s, 12, 411, r0);
  case 12:
    r0 = pxsim.control.millis();
    s.loopStart___10677 = (r0);
    s.lastBrkId = 412;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[412]) return breakpoint(s, 13, 412, r0);
  case 13:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["prevTimeMillis"];
    s.tmp_2 = r0;
    r0 = (s.loopStart___10677 - s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["deltaTimeMillis"] = (s.tmp_1);
    s.lastBrkId = 413;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[413]) return breakpoint(s, 14, 413, r0);
  case 14:
    r0 = (s.arg0).fields["prevTimeMillis"] = (s.loopStart___10677);
    s.lastBrkId = 414;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[414]) return breakpoint(s, 15, 414, r0);
  case 15:
    s.f___10690 = (undefined);
    r0 = s.arg0.fields["frameCallbacks"];
    s.unnamed1298___U2 = (r0);
    s.unnamed1299___U3 = (0);
    s.lastBrkId = 415;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[415]) return breakpoint(s, 16, 415, r0);
  case 16:
  case 1:
    s.tmp_0 = r0 = s.unnamed1299___U3;
    r0 = pxsim_Array__length(s.unnamed1298___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1298___U2, s.unnamed1299___U3);
    s.f___10690 = (r0);
    s.lastBrkId = 416;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[416]) return breakpoint(s, 17, 416, r0);
  case 17:
    s.lastBrkId = 417;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[417]) return breakpoint(s, 18, 417, r0);
  case 18:
    s.tmp_2 = if_handler_1_mk(s);
    s.tmp_2.arg0 = s.f___10690;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "handler"), 1);
      s.callLocIdx = 49; s.pc = 19; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["handler"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["handler"], 1); s.callLocIdx = 49; s.pc = 19; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 49; s.pc = 19; return s.tmp_2;; }
     else { s.callLocIdx = 49; s.pc = 19; return s.tmp_2; }
    }
  case 19:
    r0 = s.retval;
    r0 = (s.unnamed1299___U3 + 1);
    s.unnamed1299___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed1298___U2 = (undefined);
    s.lastBrkId = 418;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[418]) return breakpoint(s, 20, 418, r0);
  case 20:
    r0 = pxsim.control.millis();
    s.now___10695 = (r0);
    s.lastBrkId = 419;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[419]) return breakpoint(s, 21, 419, r0);
  case 21:
    r0 = (s.now___10695 - s.loopStart___10677);
    s.runtime___10698 = (r0);
    s.lastBrkId = 420;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[420]) return breakpoint(s, 22, 420, r0);
  case 22:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["timeInSample"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.runtime___10698);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["timeInSample"] = (s.tmp_1);
    s.lastBrkId = 421;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[421]) return breakpoint(s, 23, 421, r0);
  case 23:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["framesInSample"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["framesInSample"] = (s.tmp_1);
    s.lastBrkId = 422;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[422]) return breakpoint(s, 24, 422, r0);
  case 24:
    r0 = s.arg0.fields["timeInSample"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 1000);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["framesInSample"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 30);
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 423;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[423]) return breakpoint(s, 25, 423, r0);
  case 25:
    r0 = s.arg0.fields["lastPerfDump"];
    s.tmp_4 = r0;
    r0 = (s.now___10695 - s.tmp_4);
    s.realTimeInSample___10717 = (r0);
    s.lastBrkId = 424;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[424]) return breakpoint(s, 26, 424, r0);
  case 26:
    r0 = (s.arg0).fields["lastPerfDump"] = (s.now___10695);
    s.lastBrkId = 425;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[425]) return breakpoint(s, 27, 425, r0);
  case 27:
    r0 = s.arg0.fields["framesInSample"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["timeInSample"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 / 1000);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 / s.tmp_1);
    s.fps___10726 = (r0);
    s.lastBrkId = 426;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[426]) return breakpoint(s, 28, 426, r0);
  case 28:
    r0 = pxsim.Math_.round(s.fps___10726);
    s.tmp_1 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 29);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 29:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat("fps:", s.tmp_0);
    globals.control_EventContext_lastStats___397 = (r0);
    s.lastBrkId = 427;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[427]) return breakpoint(s, 30, 427, r0);
  case 30:
    r0 = (s.fps___10726 < 99);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 428;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[428]) return breakpoint(s, 31, 428, r0);
  case 31:
    if ((globals.control_EventContext_lastStats___397) && (globals.control_EventContext_lastStats___397).vtable) {
    setupResume(s, 32);
    pxsim_String__stringConv(globals.control_EventContext_lastStats___397);
    checkResumeConsumed();
    return;
    } else { s.retval = (globals.control_EventContext_lastStats___397) + ""; }
  case 32:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.fps___10726 * 10);
    s.tmp_7 = r0;
    r0 = pxsim.Math_.round(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 % 10);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 33);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 33:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(".", s.tmp_4);
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 34);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 34:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_2);
    globals.control_EventContext_lastStats___397 = (r0);
  case 5:
  case 6:
    s.lastBrkId = 429;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[429]) return breakpoint(s, 35, 429, r0);
  case 35:
    r0 = pxsim.control.profilingEnabled();
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 430;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[430]) return breakpoint(s, 36, 430, r0);
  case 36:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_9 = r0;
    r0 = (s.fps___10726 * 100);
    s.tmp_12 = r0;
    r0 = (s.tmp_12 | 0);
    s.tmp_11 = r0;
    if ((s.tmp_11) && (s.tmp_11).vtable) {
    setupResume(s, 37);
    pxsim_String__stringConv(s.tmp_11);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_11) + ""; }
  case 37:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_String__concat(s.tmp_9, s.tmp_10);
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_8, "/100 fps - ");
    s.tmp_7 = r0;
    r0 = s.arg0.fields["framesInSample"];
    s.tmp_14 = r0;
    if ((s.tmp_14) && (s.tmp_14).vtable) {
    setupResume(s, 38);
    pxsim_String__stringConv(s.tmp_14);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_14) + ""; }
  case 38:
    r0 = s.retval;
    s.tmp_13 = r0;
    r0 = pxsim_String__concat(s.tmp_7, s.tmp_13);
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_6, " frames (");
    s.tmp_5 = r0;
    r0 = s.arg0.fields["timeInSample"];
    s.tmp_16 = r0;
    if ((s.tmp_16) && (s.tmp_16).vtable) {
    setupResume(s, 39);
    pxsim_String__stringConv(s.tmp_16);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_16) + ""; }
  case 39:
    r0 = s.retval;
    s.tmp_15 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_15);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, "ms/");
    s.tmp_3 = r0;
    if ((s.realTimeInSample___10717) && (s.realTimeInSample___10717).vtable) {
    setupResume(s, 40);
    pxsim_String__stringConv(s.realTimeInSample___10717);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.realTimeInSample___10717) + ""; }
  case 40:
    r0 = s.retval;
    s.tmp_17 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_17);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, "ms)");
    s.tmp_1 = r0;
    r0 = pxsim.control.dmesg(s.tmp_1);
    s.lastBrkId = 431;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[431]) return breakpoint(s, 41, 431, r0);
  case 41:
    r0 = pxsim.control.gc();
    s.lastBrkId = 432;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[432]) return breakpoint(s, 42, 432, r0);
  case 42:
    r0 = pxsim_pxtcore.dumpPerfCounters();
  case 7:
  case 8:
    s.lastBrkId = 433;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[433]) return breakpoint(s, 43, 433, r0);
  case 43:
    r0 = (s.arg0).fields["timeInSample"] = (0);
    s.lastBrkId = 434;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[434]) return breakpoint(s, 44, 434, r0);
  case 44:
    r0 = (s.arg0).fields["framesInSample"] = (0);
  case 9:
  case 10:
    s.lastBrkId = 435;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[435]) return breakpoint(s, 45, 435, r0);
  case 45:
    s.tmp_0 = Math_max__P130_mk(s);
    s.tmp_0.arg0 = 1;
    r0 = (20 - s.runtime___10698);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 50; s.pc = 46; return s.tmp_0;
  case 46:
    r0 = s.retval;
    s.delay___10795 = (r0);
    s.lastBrkId = 436;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[436]) return breakpoint(s, 47, 436, r0);
  case 47:
    r0 = s.delay___10795;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_runCallbacks__P4634.info = {"start":2220,"length":1395,"line":75,"column":8,"endLine":106,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"runCallbacks","argumentNames":["this"]}

function control_EventContext_runCallbacks__P4634_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_runCallbacks__P4634, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  loopStart___10677: undefined,
  f___10690: undefined,
  unnamed1298___U2: undefined,
  unnamed1299___U3: undefined,
  now___10695: undefined,
  runtime___10698: undefined,
  realTimeInSample___10717: undefined,
  fps___10726: undefined,
  delay___10795: undefined,
  arg0: undefined,
} }





function pauseUntil__P367(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 355;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[355]) return breakpoint(s, 8, 355, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = lambda_1_mk(s);
    s.tmp_2.argL = s.arg0;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.callLocIdx = 36; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 356;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[356]) return breakpoint(s, 10, 356, r0);
  case 10:
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 357;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[357]) return breakpoint(s, 11, 357, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 358;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[358]) return breakpoint(s, 12, 358, r0);
  case 12:
    s.arg1 = (0);
  case 5:
  case 6:
    s.lastBrkId = 359;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[359]) return breakpoint(s, 13, 359, r0);
  case 13:
    s.tmp_0 = control___queuePollEvent__P366_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 37; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pauseUntil__P367.info = {"start":2224,"length":227,"line":73,"column":0,"endLine":77,"endColumn":1,"fileName":"pxt_modules/base/poll.ts","functionName":"pauseUntil","argumentNames":["condition","timeOut"]}

function pauseUntil__P367_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pauseUntil__P367, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function control___queuePollEvent__P366(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ev___10817 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 347;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[347]) return breakpoint(s, 5, 347, r0);
  case 5:
    r0 = pxsim_pxtcore_mkClassInstance(control_PollEvent__C4608_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_PollEvent_constructor__P4609_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 1023;
    r0 = pxsim.control.allocateNotifyEvent();
    s.tmp_1.arg2 = r0;
    r0 = pxsim.control.millis();
    s.tmp_1.arg3 = r0;
    s.tmp_1.arg4 = s.arg0;
    s.tmp_1.arg5 = s.arg1;
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1.arg6 = r0;
    s.callLocIdx = 34; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.ev___10817 = (s.tmp_0);
    s.lastBrkId = 348;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[348]) return breakpoint(s, 7, 348, r0);
  case 7:
    r0 = pxsim_numops_toBoolDecr(globals._pollEventQueue___4611);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 349;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[349]) return breakpoint(s, 8, 349, r0);
  case 8:
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_2, s.ev___10817);
    globals._pollEventQueue___4611 = (s.tmp_2);
    s.lastBrkId = 350;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[350]) return breakpoint(s, 9, 350, r0);
  case 9:
    r0 = pxsim.control.runInParallel(control_pollEvents__P4612);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 351;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[351]) return breakpoint(s, 10, 351, r0);
  case 10:
    r0 = pxsim_Array__push(globals._pollEventQueue___4611, s.ev___10817);
  case 2:
    s.lastBrkId = 352;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[352]) return breakpoint(s, 11, 352, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 353;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[353]) return breakpoint(s, 12, 353, r0);
  case 12:
    s.tmp_0 = control_onEvent__P391_mk(s);
    r0 = s.ev___10817.fields["eid"];
    s.tmp_0.arg0 = r0;
    r0 = s.ev___10817.fields["vid"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = 16;
    s.callLocIdx = 35; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 354;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[354]) return breakpoint(s, 14, 354, r0);
  case 14:
    r0 = s.ev___10817.fields["eid"];
    s.tmp_0 = r0;
    r0 = s.ev___10817.fields["vid"];
    s.tmp_1 = r0;
    setupResume(s, 15);
    pxsim.control.waitForEvent(s.tmp_0, s.tmp_1);
    checkResumeConsumed();
    return;
  case 15:
    r0 = s.retval;
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___queuePollEvent__P366.info = {"start":1262,"length":758,"line":39,"column":4,"endLine":64,"endColumn":5,"fileName":"pxt_modules/base/poll.ts","functionName":"__queuePollEvent","argumentNames":["timeOut","condition","handler"]}

function control___queuePollEvent__P366_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___queuePollEvent__P366, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  ev___10817: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_pollEvents__P4612(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.now___10938 = undefined;
    s.i___10941 = undefined;
    s.ev___10947 = undefined;
    s.lastBrkId = 332;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[332]) return breakpoint(s, 13, 332, r0);
  case 13:
  case 1:
    s.lastBrkId = 333;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[333]) return breakpoint(s, 14, 333, r0);
  case 14:
    r0 = pxsim_Array__length(globals._pollEventQueue___4611);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 334;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[334]) return breakpoint(s, 15, 334, r0);
  case 15:
    r0 = pxsim.control.millis();
    s.now___10938 = (r0);
    s.lastBrkId = 335;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[335]) return breakpoint(s, 16, 335, r0);
  case 16:
    s.i___10941 = (0);
    s.lastBrkId = 336;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[336]) return breakpoint(s, 17, 336, r0);
  case 17:
  case 2:
    s.lastBrkId = 337;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[337]) return breakpoint(s, 18, 337, r0);
  case 18:
    s.tmp_1 = r0 = s.i___10941;
    r0 = pxsim_Array__length(globals._pollEventQueue___4611);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 338;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[338]) return breakpoint(s, 19, 338, r0);
  case 19:
    r0 = pxsim_Array__getAt(globals._pollEventQueue___4611, s.i___10941);
    s.ev___10947 = (r0);
    s.lastBrkId = 339;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[339]) return breakpoint(s, 20, 339, r0);
  case 20:
    s.tmp_1 = if_condition_1_mk(s);
    s.tmp_1.arg0 = s.ev___10947;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "condition"), 1);
      s.callLocIdx = 31; s.pc = 21; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["condition"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["condition"], 1); s.callLocIdx = 31; s.pc = 21; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 31; s.pc = 21; return s.tmp_1;; }
     else { s.callLocIdx = 31; s.pc = 21; return s.tmp_1; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 3:
    r0 = s.ev___10947.fields["timeOut"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_2;
    { step = 5; continue; }
  case 4:
    r0 = s.ev___10947.fields["start"];
    s.tmp_5 = r0;
    r0 = (s.now___10938 - s.tmp_5);
    s.tmp_4 = r0;
    r0 = s.ev___10947.fields["timeOut"];
    s.tmp_6 = r0;
    r0 = (s.tmp_4 > s.tmp_6);
  case 5:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 6:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 340;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[340]) return breakpoint(s, 22, 340, r0);
  case 22:
    r0 = s.ev___10947.fields["eid"];
    s.tmp_9 = r0;
    r0 = s.ev___10947.fields["vid"];
    s.tmp_10 = r0;
    r0 = pxsim.control.raiseEvent(s.tmp_9, s.tmp_10);
    s.lastBrkId = 341;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[341]) return breakpoint(s, 23, 341, r0);
  case 23:
    r0 = s.ev___10947.fields["once"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 342;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[342]) return breakpoint(s, 24, 342, r0);
  case 24:
    s.tmp_1 = helpers_arraySplice__P100_mk(s);
    s.tmp_1.arg0 = globals._pollEventQueue___4611;
    s.tmp_1.arg1 = s.i___10941;
    s.tmp_1.arg2 = 1;
    s.callLocIdx = 32; s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
    s.lastBrkId = 343;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[343]) return breakpoint(s, 26, 343, r0);
  case 26:
    r0 = (s.i___10941 - 1);
    s.i___10941 = (r0);
  case 7:
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 344;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[344]) return breakpoint(s, 27, 344, r0);
  case 27:
    r0 = (s.i___10941 + 1);
    s.i___10941 = (r0);
    { step = 2; continue; }
  case 11:
    s.lastBrkId = 345;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[345]) return breakpoint(s, 28, 345, r0);
  case 28:
    s.tmp_0 = pause__P413_mk(s);
    s.tmp_0.arg0 = 50;
    s.callLocIdx = 33; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    { step = 1; continue; }
  case 12:
    s.lastBrkId = 346;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[346]) return breakpoint(s, 30, 346, r0);
  case 30:
    globals._pollEventQueue___4611 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_pollEvents__P4612.info = {"start":618,"length":638,"line":20,"column":4,"endLine":37,"endColumn":5,"fileName":"pxt_modules/base/poll.ts","functionName":"pollEvents","argumentNames":[]}

function control_pollEvents__P4612_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_pollEvents__P4612, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  now___10938: undefined,
  i___10941: undefined,
  ev___10947: undefined,
} }





function control_PollEvent_constructor__P4609(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_PollEvent__C4608_VT)) failedCast(r0);
    s.lastBrkId = 325;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[325]) return breakpoint(s, 1, 325, r0);
  case 1:
    r0 = (s.arg0).fields["eid"] = (s.arg1);
    s.lastBrkId = 326;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[326]) return breakpoint(s, 2, 326, r0);
  case 2:
    r0 = (s.arg0).fields["vid"] = (s.arg2);
    s.lastBrkId = 327;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[327]) return breakpoint(s, 3, 327, r0);
  case 3:
    r0 = (s.arg0).fields["start"] = (s.arg3);
    s.lastBrkId = 328;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[328]) return breakpoint(s, 4, 328, r0);
  case 4:
    r0 = (s.arg0).fields["timeOut"] = (s.arg4);
    s.lastBrkId = 329;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[329]) return breakpoint(s, 5, 329, r0);
  case 5:
    r0 = (s.arg0).fields["condition"] = (s.arg5);
    s.lastBrkId = 330;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[330]) return breakpoint(s, 6, 330, r0);
  case 6:
    r0 = (s.arg0).fields["once"] = (s.arg6);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_PollEvent_constructor__P4609.info = {"start":239,"length":316,"line":8,"column":8,"endLine":15,"endColumn":9,"fileName":"pxt_modules/base/poll.ts","functionName":"inline","argumentNames":["this","eid","vid","start","timeOut","condition","once"]}

function control_PollEvent_constructor__P4609_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_PollEvent_constructor__P4609, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
} }





function control_onEvent__P391(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctx___10860 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 393;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[393]) return breakpoint(s, 3, 393, r0);
  case 3:
    s.tmp_0 = control_eventContext__P408_mk(s);
    s.callLocIdx = 46; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.ctx___10860 = (r0);
    s.lastBrkId = 394;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[394]) return breakpoint(s, 5, 394, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.ctx___10860);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 395;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[395]) return breakpoint(s, 6, 395, r0);
  case 6:
    r0 = pxsim.control.internalOnEvent(s.arg0, s.arg1, s.arg2, s.arg3);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 396;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[396]) return breakpoint(s, 7, 396, r0);
  case 7:
    s.tmp_0 = control_EventContext_registerHandler__P405_mk(s);
    s.tmp_0.arg0 = s.ctx___10860;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg1;
    s.tmp_0.arg3 = s.arg2;
    s.tmp_0.arg4 = s.arg3;
    s.callLocIdx = 47; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_onEvent__P391.info = {"start":336,"length":325,"line":9,"column":4,"endLine":15,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"onEvent","argumentNames":["src","value","handler","flags"]}

function control_onEvent__P391_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_onEvent__P391, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  ctx___10860: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function control_EventContext_registerHandler__P405(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.h___10883 = undefined;
    s.unnamed1304___U1 = undefined;
    s.unnamed1305___U2 = undefined;
    s.hn___10906 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.lastBrkId = 478;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[478]) return breakpoint(s, 8, 478, r0);
  case 8:
    s.h___10883 = (undefined);
    r0 = s.arg0.fields["handlers"];
    s.unnamed1304___U1 = (r0);
    s.unnamed1305___U2 = (0);
    s.lastBrkId = 479;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[479]) return breakpoint(s, 9, 479, r0);
  case 9:
  case 1:
    s.tmp_0 = r0 = s.unnamed1305___U2;
    r0 = pxsim_Array__length(s.unnamed1304___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1304___U1, s.unnamed1305___U2);
    s.h___10883 = (r0);
    s.lastBrkId = 480;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[480]) return breakpoint(s, 10, 480, r0);
  case 10:
    s.lastBrkId = 481;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[481]) return breakpoint(s, 11, 481, r0);
  case 11:
    r0 = s.h___10883.fields["src"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_2;
    { step = 3; continue; }
  case 2:
    r0 = s.h___10883.fields["value"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 == s.arg2);
  case 3:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 482;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[482]) return breakpoint(s, 12, 482, r0);
  case 12:
    r0 = (s.h___10883).fields["flags"] = (s.arg4);
    s.lastBrkId = 483;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[483]) return breakpoint(s, 13, 483, r0);
  case 13:
    r0 = (s.h___10883).fields["handler"] = (s.arg3);
    s.lastBrkId = 484;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[484]) return breakpoint(s, 14, 484, r0);
  case 14:
    { step = 7; continue; }
  case 4:
  case 5:
    r0 = (s.unnamed1305___U2 + 1);
    s.unnamed1305___U2 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed1304___U1 = (undefined);
    s.lastBrkId = 485;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[485]) return breakpoint(s, 15, 485, r0);
  case 15:
    r0 = pxsim_pxtcore_mkClassInstance(control_EventHandler__C4629_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_EventHandler_constructor__P4632_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.tmp_1.arg3 = s.arg3;
    s.tmp_1.arg4 = s.arg4;
    s.callLocIdx = 58; s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    s.hn___10906 = (s.tmp_0);
    s.lastBrkId = 486;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[486]) return breakpoint(s, 17, 486, r0);
  case 17:
    r0 = s.arg0.fields["handlers"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.hn___10906);
    s.lastBrkId = 487;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[487]) return breakpoint(s, 18, 487, r0);
  case 18:
    s.tmp_0 = control_EventHandler_register__P4630_mk(s);
    s.tmp_0.arg0 = s.hn___10906;
    s.callLocIdx = 59; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerHandler__P405.info = {"start":5760,"length":525,"line":173,"column":8,"endLine":186,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"registerHandler","argumentNames":["this","src","value","handler","flags"]}

function control_EventContext_registerHandler__P405_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerHandler__P405, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  h___10883: undefined,
  unnamed1304___U1: undefined,
  unnamed1305___U2: undefined,
  hn___10906: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function control_EventHandler_constructor__P4632(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventHandler__C4629_VT)) failedCast(r0);
    r0 = (s.arg0).fields["src"] = (s.arg1);
    r0 = (s.arg0).fields["value"] = (s.arg2);
    r0 = (s.arg0).fields["handler"] = (s.arg3);
    r0 = (s.arg0).fields["flags"] = (s.arg4);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_constructor__P4632.info = {"start":786,"length":165,"line":23,"column":8,"endLine":28,"endColumn":13,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":["this","src","value","handler","flags"]}

function control_EventHandler_constructor__P4632_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_constructor__P4632, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function control_EventHandler_register__P4630(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventHandler__C4629_VT)) failedCast(r0);
    s.lastBrkId = 397;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[397]) return breakpoint(s, 1, 397, r0);
  case 1:
    r0 = pxsim_pxtcore_mkAction(1, control_EventHandler_register_inline__P10927);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = s.arg0.fields["src"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["value"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["flags"];
    s.tmp_3 = r0;
    r0 = pxsim.control.internalOnEvent(s.tmp_1, s.tmp_2, s.tmp_0, s.tmp_3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_register__P4630.info = {"start":961,"length":165,"line":30,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"register","argumentNames":["this"]}

function control_EventHandler_register__P4630_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_register__P4630, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function control_EventHandler_register_inline__P10927(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 398;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[398]) return breakpoint(s, 3, 398, r0);
  case 3:
    r0 = s.caps[0].fields["handler"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 399;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[399]) return breakpoint(s, 4, 399, r0);
  case 4:
    s.tmp_1 = if_handler_1_mk(s);
    s.tmp_1.arg0 = s.caps[0];
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "handler"), 1);
      s.callLocIdx = 48; s.pc = 5; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["handler"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["handler"], 1); s.callLocIdx = 48; s.pc = 5; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 48; s.pc = 5; return s.tmp_1;; }
     else { s.callLocIdx = 48; s.pc = 5; return s.tmp_1; }
    }
  case 5:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_register_inline__P10927.info = {"start":1032,"length":71,"line":31,"column":58,"endLine":33,"endColumn":13,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":[]}

function control_EventHandler_register_inline__P10927_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_register_inline__P10927, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function dot_Random_select__P4473(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Random__C4464_VT)) failedCast(r0);
    r0 = pxsim_Array__length(s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.throwValue("Invalid range");
  case 1:
  case 2:
    s.tmp_3 = r0 = s.arg1;
    s.tmp_5 = dot_Random_getInt__P4471_mk(s);
    s.tmp_5.arg0 = s.arg0;
    r0 = pxsim_Array__length(s.arg1);
    s.tmp_5.arg1 = r0;
    s.tmp_5.arg2 = undefined;
    s.callLocIdx = 283; s.pc = 3; return s.tmp_5;
  case 3:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.tmp_4);
    return leave(s, r0)
  default: oops()
} } }
dot_Random_select__P4473.info = {"start":1049,"length":147,"line":37,"column":8,"endLine":40,"endColumn":9,"fileName":"random.ts","functionName":"select","argumentNames":["this","values"]}

function dot_Random_select__P4473_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Random_select__P4473, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_Random_getInt__P4471(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lowOrHighInt___9413 = undefined;
    s.highInt___9417 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Random__C4464_VT)) failedCast(r0);
    r0 = (s.arg2 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.arg2 = (s.arg1);
    s.arg1 = (0);
  case 1:
  case 2:
    r0 = pxsim.Math_.floor(s.arg1);
    s.lowOrHighInt___9413 = (r0);
    r0 = pxsim.Math_.floor(s.arg2);
    s.highInt___9417 = (r0);
    r0 = (s.highInt___9417 === s.lowOrHighInt___9413);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.lowOrHighInt___9413;
    { step = 5; continue; }
  case 3:
  case 4:
    s.tmp_3 = dot_Random_next__P4475_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 282; s.pc = 6; return s.tmp_3;
  case 6:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.highInt___9417 - s.lowOrHighInt___9413);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 % s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + s.lowOrHighInt___9413);
  case 5:
    return leave(s, r0)
  default: oops()
} } }
dot_Random_getInt__P4471.info = {"start":522,"length":436,"line":20,"column":8,"endLine":31,"endColumn":9,"fileName":"random.ts","functionName":"getInt","argumentNames":["this","lowOrHigh","high"]}

function dot_Random_getInt__P4471_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Random_getInt__P4471, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  lowOrHighInt___9413: undefined,
  highInt___9417: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function dot_Random_next__P4475(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.t___9492 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Random__C4464_VT)) failedCast(r0);
    r0 = s.arg0.fields["x"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["x"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 << 11);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 ^ s.tmp_1);
    s.t___9492 = (r0);
    r0 = s.arg0.fields["y"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["x"] = (s.tmp_0);
    r0 = s.arg0.fields["z"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["y"] = (s.tmp_0);
    r0 = s.arg0.fields["w"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["z"] = (s.tmp_0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["w"];
    s.tmp_4 = r0;
    r0 = s.arg0.fields["w"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >>> 19);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 ^ s.tmp_5);
    s.tmp_3 = r0;
    s.tmp_8 = r0 = s.t___9492;
    r0 = (s.t___9492 >>> 8);
    s.tmp_9 = r0;
    r0 = (s.tmp_8 ^ s.tmp_9);
    s.tmp_7 = r0;
    r0 = (s.tmp_3 ^ s.tmp_7);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >>> 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["w"] = (s.tmp_1);
    r0 = s.arg0.fields["w"];
    return leave(s, r0)
  default: oops()
} } }
dot_Random_next__P4475.info = {"start":1675,"length":252,"line":59,"column":8,"endLine":66,"endColumn":9,"fileName":"random.ts","functionName":"next","argumentNames":["this"]}

function dot_Random_next__P4475_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Random_next__P4475, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  t___9492: undefined,
  arg0: undefined,
} }





function dot_Random_get__P4470(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Random__C4464_VT)) failedCast(r0);
    r0 = (s.arg2 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.arg2 = (s.arg1);
    s.arg1 = (0);
  case 1:
  case 2:
    s.tmp_3 = dot_Random_next__P4475_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 281; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 / 4294967295);
    s.tmp_1 = r0;
    r0 = (s.arg2 - s.arg1);
    s.tmp_4 = r0;
    r0 = (s.tmp_1 * s.tmp_4);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + s.arg1);
    return leave(s, r0)
  default: oops()
} } }
dot_Random_get__P4470.info = {"start":268,"length":244,"line":12,"column":8,"endLine":18,"endColumn":9,"fileName":"random.ts","functionName":"get","argumentNames":["this","lowOrHigh","high"]}

function dot_Random_get__P4470_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Random_get__P4470, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function dot_Vec_constructor__P30716(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Vec__C30670_VT)) failedCast(r0);
    r0 = (s.arg0).fields["x"] = (s.arg1);
    r0 = (s.arg0).fields["y"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Vec_constructor__P30716.info = {"start":379,"length":51,"line":10,"column":8,"endLine":10,"endColumn":59,"fileName":"vec.ts","functionName":"inline","argumentNames":["this","x","y"]}

function dot_Vec_constructor__P30716_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Vec_constructor__P30716, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function dot_Rect_constructor__P4348(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Rect__C4340_VT)) failedCast(r0);
    r0 = (s.arg0).fields["pos"] = (s.arg1);
    r0 = (s.arg0).fields["size"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Rect_constructor__P4348.info = {"start":416,"length":50,"line":9,"column":8,"endLine":9,"endColumn":58,"fileName":"rect.ts","functionName":"inline","argumentNames":["this","pos","size"]}

function dot_Rect_constructor__P4348_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Rect_constructor__P4348, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function dot_color_allExcept__P4404(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkAction(1, dot_color_allExcept_inline__P7683);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = helpers_arrayFilter__P110_mk(s);
    s.tmp_2 = helpers_arraySlice__P115_mk(s);
    s.tmp_2.arg0 = globals.ALL_COLORS___7649;
    s.tmp_2.arg1 = undefined;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 91; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 92; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
dot_color_allExcept__P4404.info = {"start":1334,"length":132,"line":57,"column":8,"endLine":59,"endColumn":9,"fileName":"color.ts","functionName":"allExcept","argumentNames":["ex"]}

function dot_color_allExcept__P4404_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_color_allExcept__P4404, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function dot_color_allExcept_inline__P7683(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array_.indexOf(s.caps[0], s.arg0, undefined);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 === -1);
    return leave(s, r0)
  default: oops()
} } }
dot_color_allExcept_inline__P7683.info = {"start":1429,"length":25,"line":58,"column":45,"endLine":58,"endColumn":70,"fileName":"color.ts","functionName":"inline","argumentNames":["c"]}

function dot_color_allExcept_inline__P7683_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_color_allExcept_inline__P7683, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function helpers_arraySlice__P115(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___11364 = undefined;
    s.len___11366 = undefined;
    s.i___11400 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 116;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[116]) return breakpoint(s, 16, 116, r0);
  case 16:
    r0 = pxsim_Array__mk();
    s.res___11364 = (r0);
    s.lastBrkId = 117;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[117]) return breakpoint(s, 17, 117, r0);
  case 17:
    r0 = pxsim_Array__length(s.arg0);
    s.len___11366 = (r0);
    s.lastBrkId = 118;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[118]) return breakpoint(s, 18, 118, r0);
  case 18:
    r0 = (s.arg1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 119;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[119]) return breakpoint(s, 19, 119, r0);
  case 19:
    s.arg1 = (0);
    { step = 4; continue; }
  case 1:
    s.lastBrkId = 120;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[120]) return breakpoint(s, 20, 120, r0);
  case 20:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 121;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[121]) return breakpoint(s, 21, 121, r0);
  case 21:
    s.tmp_1 = Math_max__P130_mk(s);
    r0 = (s.len___11366 + s.arg1);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 9; s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
    s.arg1 = (r0);
  case 2:
  case 3:
  case 4:
    s.lastBrkId = 122;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[122]) return breakpoint(s, 23, 122, r0);
  case 23:
    r0 = (s.arg1 > s.len___11366);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 123;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[123]) return breakpoint(s, 24, 123, r0);
  case 24:
    r0 = s.res___11364;
    { step = 15; continue; }
  case 5:
  case 6:
    s.lastBrkId = 124;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[124]) return breakpoint(s, 25, 124, r0);
  case 25:
    r0 = (s.arg2 === undefined);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 125;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[125]) return breakpoint(s, 26, 125, r0);
  case 26:
    s.arg2 = (s.len___11366);
    { step = 10; continue; }
  case 7:
    s.lastBrkId = 126;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[126]) return breakpoint(s, 27, 126, r0);
  case 27:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 127;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[127]) return breakpoint(s, 28, 127, r0);
  case 28:
    r0 = (s.len___11366 + s.arg2);
    s.arg2 = (r0);
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 128;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[128]) return breakpoint(s, 29, 128, r0);
  case 29:
    r0 = (s.arg2 > s.len___11366);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 129;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[129]) return breakpoint(s, 30, 129, r0);
  case 30:
    s.arg2 = (s.len___11366);
  case 11:
  case 12:
    s.lastBrkId = 130;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[130]) return breakpoint(s, 31, 130, r0);
  case 31:
    s.i___11400 = (s.arg1);
    s.lastBrkId = 131;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[131]) return breakpoint(s, 32, 131, r0);
  case 32:
  case 13:
    s.lastBrkId = 132;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[132]) return breakpoint(s, 33, 132, r0);
  case 33:
    r0 = (s.i___11400 < s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 133;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[133]) return breakpoint(s, 34, 133, r0);
  case 34:
    s.tmp_1 = r0 = s.res___11364;
    r0 = pxsim_Array__getAt(s.arg0, s.i___11400);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    s.lastBrkId = 134;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[134]) return breakpoint(s, 35, 134, r0);
  case 35:
    r0 = (s.i___11400 + 1);
    s.i___11400 = (r0);
    { step = 13; continue; }
  case 14:
    s.lastBrkId = 135;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[135]) return breakpoint(s, 36, 135, r0);
  case 36:
    r0 = s.res___11364;
  case 15:
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySlice__P115.info = {"start":9027,"length":690,"line":303,"column":4,"endLine":328,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySlice","argumentNames":["arr","start","end"]}

function helpers_arraySlice__P115_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySlice__P115, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  res___11364: undefined,
  len___11366: undefined,
  i___11400: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_arrayFilter__P110(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___11417 = undefined;
    s.len___11419 = undefined;
    s.i___11422 = undefined;
    s.v___11427 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 80;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[80]) return breakpoint(s, 5, 80, r0);
  case 5:
    r0 = pxsim_Array__mk();
    s.res___11417 = (r0);
    s.lastBrkId = 81;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[81]) return breakpoint(s, 6, 81, r0);
  case 6:
    r0 = pxsim_Array__length(s.arg0);
    s.len___11419 = (r0);
    s.lastBrkId = 82;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[82]) return breakpoint(s, 7, 82, r0);
  case 7:
    s.i___11422 = (0);
    s.lastBrkId = 83;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[83]) return breakpoint(s, 8, 83, r0);
  case 8:
  case 1:
    s.lastBrkId = 84;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[84]) return breakpoint(s, 9, 84, r0);
  case 9:
    r0 = (s.i___11422 < s.len___11419);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 85;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[85]) return breakpoint(s, 10, 85, r0);
  case 10:
    r0 = pxsim_Array__getAt(s.arg0, s.i___11422);
    s.v___11427 = (r0);
    s.lastBrkId = 86;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[86]) return breakpoint(s, 11, 86, r0);
  case 11:
    s.tmp_1 = lambda_3_mk(s);
    s.tmp_1.argL = s.arg1;
    s.tmp_1.arg0 = s.v___11427;
    s.tmp_1.arg1 = s.i___11422;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 6; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 87;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[87]) return breakpoint(s, 13, 87, r0);
  case 13:
    r0 = pxsim_Array__push(s.res___11417, s.v___11427);
  case 2:
  case 3:
    s.lastBrkId = 88;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[88]) return breakpoint(s, 14, 88, r0);
  case 14:
    r0 = (s.i___11422 + 1);
    s.i___11422 = (r0);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 89;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[89]) return breakpoint(s, 15, 89, r0);
  case 15:
    r0 = s.res___11417;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayFilter__P110.info = {"start":7695,"length":317,"line":261,"column":4,"endLine":269,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayFilter","argumentNames":["arr","callbackfn"]}

function helpers_arrayFilter__P110_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayFilter__P110, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  res___11417: undefined,
  len___11419: undefined,
  i___11422: undefined,
  v___11427: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_Set_constructor__P4493(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Set__C4491_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_items"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Set_constructor__P4493.info = {"start":88,"length":55,"line":3,"column":8,"endLine":5,"endColumn":9,"fileName":"set.ts","functionName":"inline","argumentNames":["this"]}

function dot_Set_constructor__P4493_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Set_constructor__P4493, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function test_gameUpdate__P48446(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p0___48549 = undefined;
    s.p1___48556 = undefined;
    s.det___48567 = undefined;
    s.colls___48705 = undefined;
    s.coll___48710 = undefined;
    s.unnamed2136___U5 = undefined;
    s.unnamed2137___U6 = undefined;
    s.pos___48721 = undefined;
    s.coll___48744 = undefined;
    s.unnamed2138___U9 = undefined;
    s.unnamed2139___U10 = undefined;
    r0 = (globals.tick___4443 === 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    globals.d___48530 = (1);
    globals.a___48532 = (0);
  case 1:
  case 2:
    s.tmp_0 = scene_setBackgroundColor__P2884_mk(s);
    s.tmp_0.arg0 = 13;
    s.callLocIdx = 337; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.tmp_0 = r0 = globals.a___48532;
    r0 = (globals.difficulty___4444 * globals.d___48530);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 / 20);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    globals.a___48532 = (r0);
    s.tmp_0 = dot_vec_make__P30717_mk(s);
    r0 = (globals.SCREEN_WIDTH___4379 / 2);
    s.tmp_0.arg0 = r0;
    r0 = (globals.SCREEN_HEIGHT___4380 / 2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 338; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    s.p0___48549 = (r0);
    s.tmp_0 = dot_Vec_add__P30675_mk(s);
    s.tmp_1 = dot_Vec_scale__P30678_mk(s);
    s.tmp_2 = dot_vec_fromAngle__P31015_mk(s);
    s.tmp_2.arg0 = globals.a___48532;
    s.callLocIdx = 339; s.pc = 26; return s.tmp_2;
  case 26:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    r0 = (globals.SCREEN_WIDTH___4379 / 2);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 340; s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.p0___48549;
    s.callLocIdx = 341; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.p1___48556 = (r0);
    s.tmp_0 = dot_color_set__P4401_mk(s);
    s.tmp_0.arg0 = 1;
    s.callLocIdx = 342; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    s.tmp_0 = dot_draw_line__P60177_mk(s);
    s.tmp_0.arg0 = s.p0___48549;
    s.tmp_0.arg1 = s.p1___48556;
    s.tmp_0.arg2 = 3;
    s.tmp_0.arg3 = 0;
    s.tmp_0.arg4 = null;
    s.tmp_0.arg5 = undefined;
    s.callLocIdx = 343; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    s.det___48567 = (r0);
    s.tmp_0 = dot_color_set__P4401_mk(s);
    s.tmp_0.arg0 = 11;
    s.callLocIdx = 344; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    s.tmp_0 = dot_draw_arc__P60206_mk(s);
    s.tmp_0.arg0 = s.p0___48549;
    r0 = (globals.tick___4443 / 4);
    s.tmp_1 = r0;
    r0 = (globals.SCREEN_WIDTH___4379 / 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 % s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 1;
    s.tmp_0.arg3 = 0;
    s.tmp_0.arg4 = 6.283185307179586;
    s.tmp_3 = dot_color_noncollidable__P4407_mk(s);
    s.callLocIdx = 345; s.pc = 31; return s.tmp_3;
  case 31:
    r0 = s.retval;
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 346; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    s.tmp_0 = dot_draw_img__P60243_mk(s);
    s.tmp_0.arg0 = s.p1___48556;
    s.tmp_0.arg1 = globals.duck___48455;
    s.tmp_0.arg2 = true;
    s.tmp_0.arg3 = 15;
    s.tmp_0.arg4 = undefined;
    s.tmp_0.arg5 = undefined;
    s.callLocIdx = 347; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.tmp_0 = dot_color_set__P4401_mk(s);
    s.tmp_0.arg0 = 3;
    s.callLocIdx = 348; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
    s.tmp_0 = dot_draw_bar__P60145_mk(s);
    s.tmp_0.arg0 = s.p0___48549;
    s.tmp_0.arg1 = 40;
    s.tmp_0.arg2 = 2;
    r0 = (0 - globals.a___48532);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = 0.5;
    s.tmp_1 = dot_color_noncollidable__P4407_mk(s);
    s.callLocIdx = 349; s.pc = 35; return s.tmp_1;
  case 35:
    r0 = s.retval;
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 350; s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_0.arg0 = globals.boxes___48457;
    s.tmp_0.arg1 = test_gameUpdate_inline__P48603;
    s.callLocIdx = 354; s.pc = 36; return s.tmp_0;
  case 36:
    r0 = s.retval;
    r0 = (globals.state___4447 === 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.tmp_2 = dot_Button_justPressed__P8917_mk(s);
    r0 = globals.input___4453.fields["_Left"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 356; s.pc = 37; return s.tmp_2;
  case 37:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    globals.d___48530 = (-1);
    { step = 8; continue; }
  case 3:
    s.tmp_1 = dot_Button_justPressed__P8917_mk(s);
    r0 = globals.input___4453.fields["_Right"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 358; s.pc = 38; return s.tmp_1;
  case 38:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    globals.d___48530 = (1);
    { step = 7; continue; }
  case 4:
    s.tmp_1 = dot_Input_justPressed__P8880_mk(s);
    s.tmp_1.arg0 = globals.input___4453;
    s.callLocIdx = 359; s.pc = 39; return s.tmp_1;
  case 39:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_2 = dot_game_end__P4449_mk(s);
    s.tmp_2.arg0 = undefined;
    s.callLocIdx = 360; s.pc = 40; return s.tmp_2;
  case 40:
    r0 = s.retval;
  case 5:
  case 6:
  case 7:
  case 8:
    s.tmp_0 = dot_CollisionReporter_collisions__P4366_mk(s);
    s.tmp_0.arg0 = s.det___48567;
    s.callLocIdx = 361; s.pc = 41; return s.tmp_0;
  case 41:
    r0 = s.retval;
    s.colls___48705 = (r0);
    s.coll___48710 = (undefined);
    s.unnamed2136___U5 = (s.colls___48705);
    s.unnamed2137___U6 = (0);
  case 9:
    s.tmp_0 = r0 = s.unnamed2137___U6;
    r0 = pxsim_Array__length(s.unnamed2136___U5);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 15; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2136___U5, s.unnamed2137___U6);
    s.coll___48710 = (r0);
    r0 = s.coll___48710.fields["dst"];
    r0 = r0.fields["id"];
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 10; continue; }
    { step = 14; continue; }
  case 10:
  case 11:
    r0 = s.coll___48710.fields["dst"];
    r0 = r0.fields["id"];
    s.tmp_6 = r0;
    r0 = globals.collisions___48452.fields["_items"];
    s.tmp_8 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.tmp_8, s.tmp_6);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 != null);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 12; continue; }
    { step = 14; continue; }
  case 12:
  case 13:
    s.tmp_9 = dot_Rect_center__P4347_mk(s);
    r0 = s.coll___48710.fields["dst"];
    r0 = r0.fields["rect"];
    s.tmp_9.arg0 = r0;
    s.callLocIdx = 363; s.pc = 42; return s.tmp_9;
  case 42:
    r0 = s.retval;
    s.pos___48721 = (r0);
    s.tmp_0 = dot_color_set__P4401_mk(s);
    r0 = s.coll___48710.fields["dst"];
    r0 = r0.fields["color"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 364; s.pc = 43; return s.tmp_0;
  case 43:
    r0 = s.retval;
    s.tmp_0 = dot_scores_add__P4459_mk(s);
    s.tmp_0.arg0 = 10;
    s.tmp_0.arg1 = s.pos___48721;
    s.callLocIdx = 365; s.pc = 44; return s.tmp_0;
  case 44:
    r0 = s.retval;
    s.tmp_0 = dot_particles_add__P34836_mk(s);
    s.tmp_0.arg0 = s.pos___48721;
    s.tmp_0.arg1 = 10;
    s.tmp_0.arg2 = 2;
    s.tmp_0.arg3 = 1.5707963267948966;
    s.tmp_0.arg4 = 0.5235987755982988;
    s.callLocIdx = 366; s.pc = 45; return s.tmp_0;
  case 45:
    r0 = s.retval;
  case 14:
    r0 = (s.unnamed2137___U6 + 1);
    s.unnamed2137___U6 = (r0);
    { step = 9; continue; }
  case 15:
    s.unnamed2136___U5 = (undefined);
    s.tmp_0 = dot_Set_clear__P4497_mk(s);
    s.tmp_0.arg0 = globals.collisions___48452;
    s.callLocIdx = 367; s.pc = 46; return s.tmp_0;
  case 46:
    r0 = s.retval;
    s.coll___48744 = (undefined);
    s.unnamed2138___U9 = (s.colls___48705);
    s.unnamed2139___U10 = (0);
  case 16:
    s.tmp_0 = r0 = s.unnamed2139___U10;
    r0 = pxsim_Array__length(s.unnamed2138___U9);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 19; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2138___U9, s.unnamed2139___U10);
    s.coll___48744 = (r0);
    r0 = s.coll___48744.fields["dst"];
    r0 = r0.fields["id"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 17; continue; }
    s.tmp_3 = dot_Set_set__P4496_mk(s);
    s.tmp_3.arg0 = globals.collisions___48452;
    r0 = s.coll___48744.fields["dst"];
    r0 = r0.fields["id"];
    s.tmp_3.arg1 = r0;
    s.tmp_3.arg2 = true;
    s.callLocIdx = 368; s.pc = 47; return s.tmp_3;
  case 47:
    r0 = s.retval;
  case 17:
  case 18:
    r0 = (s.unnamed2139___U10 + 1);
    s.unnamed2139___U10 = (r0);
    { step = 16; continue; }
  case 19:
    s.unnamed2138___U9 = (undefined);
  case 20:
  case 21:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
test_gameUpdate__P48446.info = {"start":1679,"length":2146,"line":60,"column":4,"endLine":115,"endColumn":5,"fileName":"test.ts","functionName":"gameUpdate","argumentNames":[]}

function test_gameUpdate__P48446_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: test_gameUpdate__P48446, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  p0___48549: undefined,
  p1___48556: undefined,
  det___48567: undefined,
  colls___48705: undefined,
  coll___48710: undefined,
  unnamed2136___U5: undefined,
  unnamed2137___U6: undefined,
  pos___48721: undefined,
  coll___48744: undefined,
  unnamed2138___U9: undefined,
  unnamed2139___U10: undefined,
} }





function test_gameUpdate_inline__P48603(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["r"];
    r0 = r0.fields["pos"];
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["x"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["v"];
    r0 = r0.fields["x"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 * globals.difficulty___4444);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["x"] = (s.tmp_1);
    r0 = s.arg0.fields["r"];
    r0 = r0.fields["pos"];
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["y"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["v"];
    r0 = r0.fields["y"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 * globals.difficulty___4444);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["y"] = (s.tmp_1);
    r0 = s.arg0.fields["r"];
    r0 = r0.fields["pos"];
    r0 = r0.fields["x"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["r"];
    r0 = r0.fields["pos"];
    r0 = r0.fields["x"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["r"];
    r0 = r0.fields["size"];
    r0 = r0.fields["x"];
    s.tmp_4 = r0;
    r0 = (globals.SCREEN_WIDTH___4379 - s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 > s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 3; continue; }
    r0 = s.arg0.fields["v"];
    s.tmp_6 = r0;
    r0 = s.tmp_6.fields["x"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 * -1);
    s.tmp_7 = r0;
    r0 = (s.tmp_6).fields["x"] = (s.tmp_7);
  case 3:
  case 4:
    r0 = s.arg0.fields["r"];
    r0 = r0.fields["pos"];
    r0 = r0.fields["y"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["r"];
    r0 = r0.fields["pos"];
    r0 = r0.fields["y"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["r"];
    r0 = r0.fields["size"];
    r0 = r0.fields["y"];
    s.tmp_4 = r0;
    r0 = (globals.SCREEN_HEIGHT___4380 - s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 > s.tmp_3);
  case 6:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 7; continue; }
    r0 = s.arg0.fields["v"];
    s.tmp_6 = r0;
    r0 = s.tmp_6.fields["y"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 * -1);
    s.tmp_7 = r0;
    r0 = (s.tmp_6).fields["y"] = (s.tmp_7);
  case 7:
  case 8:
    s.tmp_0 = dot_color_set__P4401_mk(s);
    r0 = s.arg0.fields["c"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 351; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.tmp_0 = dot_draw_box__P60113_mk(s);
    r0 = s.arg0.fields["r"];
    r0 = r0.fields["pos"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["r"];
    r0 = r0.fields["size"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = false;
    r0 = pxsim_Array__mk();
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["id"];
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 353; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
test_gameUpdate_inline__P48603.info = {"start":2489,"length":411,"line":81,"column":22,"endLine":88,"endColumn":9,"fileName":"test.ts","functionName":"inline","argumentNames":["b"]}

function test_gameUpdate_inline__P48603_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: test_gameUpdate_inline__P48603, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
} }





function dot_Set_set__P4496(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Set__C4491_VT)) failedCast(r0);
    r0 = s.arg0.fields["_items"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetGeneric(s.tmp_0, s.arg1, s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Set_set__P4496.info = {"start":308,"length":72,"line":12,"column":8,"endLine":14,"endColumn":9,"fileName":"set.ts","functionName":"set","argumentNames":["this","key","val"]}

function dot_Set_set__P4496_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Set_set__P4496, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function dot_Set_clear__P4497(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Set__C4491_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_items"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Set_clear__P4497.info = {"start":389,"length":49,"line":15,"column":8,"endLine":17,"endColumn":9,"fileName":"set.ts","functionName":"clear","argumentNames":["this"]}

function dot_Set_clear__P4497_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Set_clear__P4497, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function dot_particles_add__P34836(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___34851 = undefined;
    s.a___34856 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg1 < 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = dot_Random_get__P4470_mk(s);
    s.tmp_3.arg0 = globals.random___34834;
    s.tmp_3.arg1 = 1;
    s.tmp_3.arg2 = undefined;
    s.callLocIdx = 295; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 1; continue; }
    { step = 7; continue; }
  case 1:
  case 2:
    s.arg1 = (1);
  case 3:
  case 4:
    s.i___34851 = (0);
  case 5:
    r0 = (s.i___34851 < s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_2 = r0 = s.arg3;
    s.tmp_4 = dot_Random_get__P4470_mk(s);
    s.tmp_4.arg0 = globals.random___34834;
    s.tmp_4.arg1 = s.arg4;
    s.tmp_4.arg2 = undefined;
    s.callLocIdx = 296; s.pc = 9; return s.tmp_4;
  case 9:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.arg4 / 2);
    s.tmp_5 = r0;
    r0 = (s.tmp_1 - s.tmp_5);
    s.a___34856 = (r0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    s.tmp_2 = dot_vec_dup__P30713_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 297; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_3 = r0;
    s.tmp_4 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_4.arg0 = s.tmp_3;
    s.tmp_5 = r0 = s.arg2;
    s.tmp_7 = dot_Random_get__P4470_mk(s);
    s.tmp_7.arg0 = globals.random___34834;
    s.tmp_7.arg1 = 0.5;
    s.tmp_7.arg2 = 1;
    s.callLocIdx = 298; s.pc = 12; return s.tmp_7;
  case 12:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5 * s.tmp_6);
    s.tmp_4.arg1 = r0;
    s.tmp_4.arg2 = 0;
    s.callLocIdx = 299; s.pc = 11; return s.tmp_4;
  case 11:
    r0 = s.retval;
    s.tmp_9 = dot_Vec_rotate__P30679_mk(s);
    s.tmp_9.arg0 = s.tmp_3;
    s.tmp_9.arg1 = s.a___34856;
    s.callLocIdx = 300; s.pc = 13; return s.tmp_9;
  case 13:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_8);
    s.tmp_11 = r0 = globals._colorStack___7652;
    r0 = pxsim_Array__length(globals._colorStack___7652);
    s.tmp_13 = r0;
    r0 = (s.tmp_13 - 1);
    s.tmp_12 = r0;
    r0 = pxsim_Array__getAt(s.tmp_11, s.tmp_12);
    s.tmp_10 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_10);
    s.tmp_15 = Math_clamp__P127_mk(s);
    s.tmp_15.arg0 = 10;
    s.tmp_15.arg1 = 60;
    s.tmp_17 = dot_Random_get__P4470_mk(s);
    s.tmp_17.arg0 = globals.random___34834;
    s.tmp_17.arg1 = 10;
    s.tmp_17.arg2 = 20;
    s.callLocIdx = 302; s.pc = 15; return s.tmp_17;
  case 15:
    r0 = s.retval;
    s.tmp_16 = r0;
    s.tmp_20 = Math_abs__P128_mk(s);
    s.tmp_20.arg0 = s.arg2;
    s.callLocIdx = 303; s.pc = 16; return s.tmp_20;
  case 16:
    r0 = s.retval;
    s.tmp_19 = r0;
    r0 = pxsim.Math_.sqrt(s.tmp_19);
    s.tmp_18 = r0;
    r0 = (s.tmp_16 * s.tmp_18);
    s.tmp_15.arg2 = r0;
    s.callLocIdx = 304; s.pc = 14; return s.tmp_15;
  case 14:
    r0 = s.retval;
    s.tmp_14 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_14);
    s.tmp_21 = dot_Pool_alloc__P4481_mk(s);
    s.tmp_21.arg0 = globals.pool___34823;
    s.tmp_21.arg1 = s.tmp_0;
    s.callLocIdx = 305; s.pc = 17; return s.tmp_21;
  case 17:
    r0 = s.retval;
    r0 = (s.i___34851 + 1);
    s.i___34851 = (r0);
    { step = 5; continue; }
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_particles_add__P34836.info = {"start":777,"length":717,"line":27,"column":8,"endLine":48,"endColumn":9,"fileName":"particles.ts","functionName":"add","argumentNames":["pos","count","speed","angle","angleWidth"]}

function dot_particles_add__P34836_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_particles_add__P34836, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  i___34851: undefined,
  a___34856: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function Math_abs__P128(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 196;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[196]) return breakpoint(s, 3, 196, r0);
  case 3:
    r0 = (s.arg0 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (0 - s.arg0);
    { step = 2; continue; }
  case 1:
    r0 = s.arg0;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
Math_abs__P128.info = {"start":16120,"length":77,"line":539,"column":4,"endLine":541,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"abs","argumentNames":["x"]}

function Math_abs__P128_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_abs__P128, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function dot_Vec_rotate__P30679(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.x___30890 = undefined;
    s.y___30904 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Vec__C30670_VT)) failedCast(r0);
    r0 = s.arg0.fields["x"];
    s.tmp_1 = r0;
    r0 = pxsim.Math_.cos(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["y"];
    s.tmp_4 = r0;
    r0 = pxsim.Math_.sin(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 * s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 - s.tmp_3);
    s.x___30890 = (r0);
    r0 = s.arg0.fields["x"];
    s.tmp_1 = r0;
    r0 = pxsim.Math_.sin(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["y"];
    s.tmp_4 = r0;
    r0 = pxsim.Math_.cos(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 * s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 + s.tmp_3);
    s.y___30904 = (r0);
    r0 = (s.arg0).fields["x"] = (s.x___30890);
    r0 = (s.arg0).fields["y"] = (s.y___30904);
    r0 = s.arg0;
    return leave(s, r0)
  default: oops()
} } }
dot_Vec_rotate__P30679.info = {"start":936,"length":249,"line":31,"column":8,"endLine":37,"endColumn":9,"fileName":"vec.ts","functionName":"rotate","argumentNames":["this","a"]}

function dot_Vec_rotate__P30679_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Vec_rotate__P30679, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  x___30890: undefined,
  y___30904: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_vec_dup__P30713(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    r0 = s.arg0.fields["x"];
    s.tmp_1.arg1 = r0;
    r0 = s.arg0.fields["y"];
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 317; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
dot_vec_dup__P30713.info = {"start":2617,"length":82,"line":85,"column":8,"endLine":87,"endColumn":9,"fileName":"vec.ts","functionName":"dup","argumentNames":["v"]}

function dot_vec_dup__P30713_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_vec_dup__P30713, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function dot_Pool_alloc__P4481(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.obj___9535 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Pool__C4477_VT)) failedCast(r0);
    r0 = s.arg0.fields["pool"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__length(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["pool"];
    s.tmp_2 = r0;
    r0 = pxsim_Array_.pop(s.tmp_2);
    s.obj___9535 = (r0);
    { step = 2; continue; }
  case 1:
    s.tmp_0 = if_factoryFn_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "factoryFn"), 1);
      s.callLocIdx = 285; s.pc = 3; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["factoryFn"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["factoryFn"], 1); s.callLocIdx = 285; s.pc = 3; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 285; s.pc = 3; return s.tmp_0;; }
     else { s.callLocIdx = 285; s.pc = 3; return s.tmp_0; }
    }
  case 3:
    r0 = s.retval;
    s.obj___9535 = (r0);
  case 2:
    s.tmp_0 = if_initFn_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.obj___9535;
    s.tmp_0.arg2 = s.arg1;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "initFn"), 3);
      s.callLocIdx = 286; s.pc = 4; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["initFn"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["initFn"], 3); s.callLocIdx = 286; s.pc = 4; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 286; s.pc = 4; return s.tmp_0;; }
     else { s.callLocIdx = 286; s.pc = 4; return s.tmp_0; }
    }
  case 4:
    r0 = s.retval;
    r0 = s.arg0.fields["active"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.obj___9535);
    r0 = s.obj___9535;
    return leave(s, r0)
  default: oops()
} } }
dot_Pool_alloc__P4481.info = {"start":225,"length":304,"line":7,"column":8,"endLine":17,"endColumn":9,"fileName":"pool.ts","functionName":"alloc","argumentNames":["this","args"]}

function dot_Pool_alloc__P4481_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Pool_alloc__P4481, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  obj___9535: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_scores_add__P4459(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.prefix___9310 = undefined;
    s.str___9314 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (globals.state___4447 === 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (globals.score___4445 + s.arg0);
    globals.score___4445 = (r0);
  case 1:
  case 2:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    { step = 7; continue; }
  case 3:
  case 4:
    r0 = (s.arg0 > 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 5; continue; }
    r0 = "+";
    { step = 6; continue; }
  case 5:
    r0 = pxsim_String_.mkEmpty();
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.prefix___9310 = (s.tmp_3);
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    if ((s.prefix___9310) && (s.prefix___9310).vtable) {
    setupResume(s, 8);
    pxsim_String__stringConv(s.prefix___9310);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.prefix___9310) + ""; }
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.arg0);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 9);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 9:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_3);
    s.str___9314 = (r0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.str___9314);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_1 = r0;
    s.tmp_2 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    r0 = s.arg1.fields["x"];
    s.tmp_2.arg1 = r0;
    r0 = s.arg1.fields["y"];
    s.tmp_3 = r0;
    s.tmp_6 = if_charHeight_1_mk(s);
    s.tmp_6.arg0 = globals.scoreFont___4457;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "charHeight");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["charHeight"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["charHeight"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 270; s.pc = 11; return s.tmp_6; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 / 2);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 271; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    r0 = pxsim_Array__push(s.tmp_0, -2);
    r0 = (globals.tick___4443 + 30);
    s.tmp_7 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_7);
    s.tmp_9 = r0 = globals._colorStack___7652;
    r0 = pxsim_Array__length(globals._colorStack___7652);
    s.tmp_11 = r0;
    r0 = (s.tmp_11 - 1);
    s.tmp_10 = r0;
    r0 = pxsim_Array__getAt(s.tmp_9, s.tmp_10);
    s.tmp_8 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_8);
    s.tmp_12 = dot_Pool_alloc__P4481_mk(s);
    s.tmp_12.arg0 = globals.pool___9289;
    s.tmp_12.arg1 = s.tmp_0;
    s.callLocIdx = 273; s.pc = 12; return s.tmp_12;
  case 12:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_scores_add__P4459.info = {"start":874,"length":492,"line":32,"column":8,"endLine":45,"endColumn":9,"fileName":"scores.ts","functionName":"add","argumentNames":["value","pos"]}

function dot_scores_add__P4459_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_scores_add__P4459, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  prefix___9310: undefined,
  str___9314: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_Rect_center__P4347(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Rect__C4340_VT)) failedCast(r0);
    s.tmp_0 = dot_vec_add__P30666_mk(s);
    r0 = s.arg0.fields["pos"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = dot_vec_scale__P30667_mk(s);
    r0 = s.arg0.fields["size"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0.5;
    s.callLocIdx = 69; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 70; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
dot_Rect_center__P4347.info = {"start":343,"length":64,"line":8,"column":8,"endLine":8,"endColumn":72,"fileName":"rect.ts","functionName":"center","argumentNames":["this"]}

function dot_Rect_center__P4347_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Rect_center__P4347, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function dot_vec_scale__P30667(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    r0 = s.arg0.fields["x"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * s.arg1);
    s.tmp_1.arg1 = r0;
    r0 = s.arg0.fields["y"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * s.arg1);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 320; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
dot_vec_scale__P30667.info = {"start":3336,"length":149,"line":112,"column":8,"endLine":117,"endColumn":9,"fileName":"vec.ts","functionName":"scale","argumentNames":["v","s"]}

function dot_vec_scale__P30667_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_vec_scale__P30667, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_vec_add__P30666(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    r0 = s.arg0.fields["x"];
    s.tmp_2 = r0;
    r0 = s.arg1.fields["x"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1.arg1 = r0;
    r0 = s.arg0.fields["y"];
    s.tmp_4 = r0;
    r0 = s.arg1.fields["y"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 318; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
dot_vec_add__P30666.info = {"start":2708,"length":148,"line":88,"column":8,"endLine":93,"endColumn":9,"fileName":"vec.ts","functionName":"add","argumentNames":["a","b"]}

function dot_vec_add__P30666_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_vec_add__P30666, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_Set_has__P4494(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Set__C4491_VT)) failedCast(r0);
    r0 = s.arg0.fields["_items"];
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.tmp_1, s.arg1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 != null);
    return leave(s, r0)
  default: oops()
} } }
dot_Set_has__P4494.info = {"start":152,"length":73,"line":6,"column":8,"endLine":8,"endColumn":9,"fileName":"set.ts","functionName":"has","argumentNames":["this","key"]}

function dot_Set_has__P4494_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Set_has__P4494, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_CollisionReporter_collisions__P4366(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_CollisionReporter__C4359_VT)) failedCast(r0);
    r0 = s.arg0.fields["_gen"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== globals.gen___4373);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.throwValue("Don't cache CollisionReporters across updates");
  case 1:
  case 2:
    s.tmp_2 = dot_collision__internal_calc__P4376_mk(s);
    s.callLocIdx = 75; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    r0 = s.arg0.fields["_collisions"];
    return leave(s, r0)
  default: oops()
} } }
dot_CollisionReporter_collisions__P4366.info = {"start":922,"length":224,"line":30,"column":8,"endLine":34,"endColumn":9,"fileName":"collision.ts","functionName":"collisions","argumentNames":["this"]}

function dot_CollisionReporter_collisions__P4366_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_CollisionReporter_collisions__P4366, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function dot_collision__internal_calc__P4376(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.n___7592 = undefined;
    s.i___7595 = undefined;
    s.r0___7600 = undefined;
    s.j___7604 = undefined;
    s.r1___7612 = undefined;
    r0 = pxsim_Array__length(globals.dirty___7466);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_1.arg0 = globals.reporters___7464;
    s.tmp_1.arg1 = dot_collision__internal_calc_inline__P7584;
    s.callLocIdx = 87; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    r0 = pxsim_Array__length(globals.reporters___7464);
    s.n___7592 = (r0);
    s.i___7595 = (0);
  case 1:
    r0 = (s.i___7595 < s.n___7592);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(globals.reporters___7464, s.i___7595);
    s.r0___7600 = (r0);
    r0 = (s.i___7595 + 1);
    s.j___7604 = (r0);
  case 2:
    r0 = (s.j___7604 < s.n___7592);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_Array__getAt(globals.reporters___7464, s.j___7604);
    s.r1___7612 = (r0);
    s.tmp_0 = dot_collision__internal_calcCollisions__P7513_mk(s);
    s.tmp_0.arg0 = s.r0___7600;
    s.tmp_0.arg1 = s.r1___7612;
    s.callLocIdx = 88; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = (s.j___7604 + 1);
    s.j___7604 = (r0);
    { step = 2; continue; }
  case 3:
    r0 = (s.i___7595 + 1);
    s.i___7595 = (r0);
    { step = 1; continue; }
  case 4:
    s.tmp_0 = helpers_arraySplice__P100_mk(s);
    s.tmp_0.arg0 = globals.dirty___7466;
    s.tmp_0.arg1 = 0;
    r0 = pxsim_Array__length(globals.dirty___7466);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 89; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_collision__internal_calc__P4376.info = {"start":3470,"length":641,"line":92,"column":12,"endLine":107,"endColumn":13,"fileName":"collision.ts","functionName":"calc","argumentNames":[]}

function dot_collision__internal_calc__P4376_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_collision__internal_calc__P4376, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  n___7592: undefined,
  i___7595: undefined,
  r0___7600: undefined,
  j___7604: undefined,
  r1___7612: undefined,
} }





function dot_collision__internal_calc_inline__P7584(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = helpers_arraySplice__P100_mk(s);
    r0 = s.arg0.fields["_collisions"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 0;
    r0 = s.arg0.fields["_collisions"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__length(s.tmp_1);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 86; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_collision__internal_calc_inline__P7584.info = {"start":3569,"length":99,"line":94,"column":38,"endLine":96,"endColumn":21,"fileName":"collision.ts","functionName":"inline","argumentNames":["r"]}

function dot_collision__internal_calc_inline__P7584_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_collision__internal_calc_inline__P7584, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function dot_collision__internal_calcCollisions__P7513(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.srcs___7516 = undefined;
    s.dsts___7519 = undefined;
    s.src___7523 = undefined;
    s.unnamed2132___U3 = undefined;
    s.unnamed2133___U4 = undefined;
    s.dst___7526 = undefined;
    s.unnamed2134___U6 = undefined;
    s.unnamed2135___U7 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["_srcs"];
    s.srcs___7516 = (r0);
    r0 = s.arg1.fields["_srcs"];
    s.dsts___7519 = (r0);
    s.src___7523 = (undefined);
    s.unnamed2132___U3 = (s.srcs___7516);
    s.unnamed2133___U4 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed2133___U4;
    r0 = pxsim_Array__length(s.unnamed2132___U3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 19; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2132___U3, s.unnamed2133___U4);
    s.src___7523 = (r0);
    s.dst___7526 = (undefined);
    s.unnamed2134___U6 = (s.dsts___7519);
    s.unnamed2135___U7 = (0);
  case 2:
    s.tmp_0 = r0 = s.unnamed2135___U7;
    r0 = pxsim_Array__length(s.unnamed2134___U6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 18; continue; }
    r0 = pxsim_Array__getAt(s.unnamed2134___U6, s.unnamed2135___U7);
    s.dst___7526 = (r0);
    r0 = s.src___7523.fields["_mask"];
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_2;
    { step = 4; continue; }
  case 3:
    r0 = s.dst___7526.fields["_mask"];
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
  case 4:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 5; continue; }
    { step = 17; continue; }
  case 5:
  case 6:
    s.tmp_9 = dot_rect_overlapping__P4353_mk(s);
    r0 = s.src___7523.fields["rect"];
    s.tmp_9.arg0 = r0;
    r0 = s.dst___7526.fields["rect"];
    s.tmp_9.arg1 = r0;
    s.callLocIdx = 81; s.pc = 20; return s.tmp_9;
  case 20:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 15; continue; }
    r0 = s.src___7523.fields["_mask"];
    s.tmp_10 = r0;
    r0 = pxsim_numops_toBool(s.tmp_10);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_10;
    { step = 8; continue; }
  case 7:
    r0 = pxsim_pxtcore_mkAction(1, dot_collision__internal_calcCollisions_inline__P7546);
    s.tmp_11 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_11, 0, s.dst___7526);
    s.tmp_12 = helpers_arrayFind__P111_mk(s);
    r0 = s.src___7523.fields["_mask"];
    s.tmp_12.arg0 = r0;
    s.tmp_12.arg1 = s.tmp_11;
    s.callLocIdx = 82; s.pc = 21; return s.tmp_12;
  case 21:
    r0 = s.retval;
  case 8:
    // jmp value (already in r0)
    s.tmp_13 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_13);
    if (!r0) { step = 9; continue; }
    r0 = pxsim_pxtcore_mkClassInstance(dot_Collision__C4357_VT);
    s.tmp_14 = r0;
    s.tmp_15 = dot_Collision_constructor__P4358_mk(s);
    s.tmp_15.arg0 = s.tmp_14;
    s.tmp_15.arg1 = s.src___7523;
    s.tmp_15.arg2 = s.dst___7526;
    s.callLocIdx = 83; s.pc = 22; return s.tmp_15;
  case 22:
    r0 = s.retval;
    r0 = s.arg0.fields["_collisions"];
    s.tmp_16 = r0;
    r0 = pxsim_Array__push(s.tmp_16, s.tmp_14);
  case 9:
  case 10:
    r0 = s.dst___7526.fields["_mask"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = s.tmp_0;
    { step = 12; continue; }
  case 11:
    r0 = pxsim_pxtcore_mkAction(1, dot_collision__internal_calcCollisions_inline__P7566);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.src___7523);
    s.tmp_2 = helpers_arrayFind__P111_mk(s);
    r0 = s.dst___7526.fields["_mask"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 84; s.pc = 23; return s.tmp_2;
  case 23:
    r0 = s.retval;
  case 12:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 13; continue; }
    r0 = pxsim_pxtcore_mkClassInstance(dot_Collision__C4357_VT);
    s.tmp_4 = r0;
    s.tmp_5 = dot_Collision_constructor__P4358_mk(s);
    s.tmp_5.arg0 = s.tmp_4;
    s.tmp_5.arg1 = s.dst___7526;
    s.tmp_5.arg2 = s.src___7523;
    s.callLocIdx = 85; s.pc = 24; return s.tmp_5;
  case 24:
    r0 = s.retval;
    r0 = s.arg1.fields["_collisions"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__push(s.tmp_6, s.tmp_4);
  case 13:
  case 14:
  case 15:
  case 16:
  case 17:
    r0 = (s.unnamed2135___U7 + 1);
    s.unnamed2135___U7 = (r0);
    { step = 2; continue; }
  case 18:
    s.unnamed2134___U6 = (undefined);
    r0 = (s.unnamed2133___U4 + 1);
    s.unnamed2133___U4 = (r0);
    { step = 1; continue; }
  case 19:
    s.unnamed2132___U3 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_collision__internal_calcCollisions__P7513.info = {"start":2622,"length":835,"line":75,"column":12,"endLine":91,"endColumn":13,"fileName":"collision.ts","functionName":"calcCollisions","argumentNames":["r0","r1"]}

function dot_collision__internal_calcCollisions__P7513_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_collision__internal_calcCollisions__P7513, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  srcs___7516: undefined,
  dsts___7519: undefined,
  src___7523: undefined,
  unnamed2132___U3: undefined,
  unnamed2133___U4: undefined,
  dst___7526: undefined,
  unnamed2134___U6: undefined,
  unnamed2135___U7: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_collision__internal_calcCollisions_inline__P7546(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.caps[0].fields["color"];
    s.tmp_0 = r0;
    r0 = (s.arg0 === s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
dot_collision__internal_calcCollisions_inline__P7546.info = {"start":3052,"length":20,"line":82,"column":60,"endLine":82,"endColumn":80,"fileName":"collision.ts","functionName":"inline","argumentNames":["c"]}

function dot_collision__internal_calcCollisions_inline__P7546_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_collision__internal_calcCollisions_inline__P7546, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function dot_collision__internal_calcCollisions_inline__P7566(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.caps[0].fields["color"];
    s.tmp_0 = r0;
    r0 = (s.arg0 === s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
dot_collision__internal_calcCollisions_inline__P7566.info = {"start":3245,"length":20,"line":85,"column":60,"endLine":85,"endColumn":80,"fileName":"collision.ts","functionName":"inline","argumentNames":["c"]}

function dot_collision__internal_calcCollisions_inline__P7566_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_collision__internal_calcCollisions_inline__P7566, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function dot_Collision_constructor__P4358(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Collision__C4357_VT)) failedCast(r0);
    r0 = (s.arg0).fields["src"] = (s.arg1);
    r0 = (s.arg0).fields["dst"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Collision_constructor__P4358.info = {"start":244,"length":88,"line":9,"column":8,"endLine":11,"endColumn":39,"fileName":"collision.ts","functionName":"inline","argumentNames":["this","src","dst"]}

function dot_Collision_constructor__P4358_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Collision_constructor__P4358, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_arrayFind__P111(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___11460 = undefined;
    s.i___11463 = undefined;
    s.v___11468 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 90;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[90]) return breakpoint(s, 6, 90, r0);
  case 6:
    r0 = pxsim_Array__length(s.arg0);
    s.len___11460 = (r0);
    s.lastBrkId = 91;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[91]) return breakpoint(s, 7, 91, r0);
  case 7:
    s.i___11463 = (0);
    s.lastBrkId = 92;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[92]) return breakpoint(s, 8, 92, r0);
  case 8:
  case 1:
    s.lastBrkId = 93;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[93]) return breakpoint(s, 9, 93, r0);
  case 9:
    r0 = (s.i___11463 < s.len___11460);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 94;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[94]) return breakpoint(s, 10, 94, r0);
  case 10:
    r0 = pxsim_Array__getAt(s.arg0, s.i___11463);
    s.v___11468 = (r0);
    s.lastBrkId = 95;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[95]) return breakpoint(s, 11, 95, r0);
  case 11:
    s.tmp_1 = lambda_3_mk(s);
    s.tmp_1.argL = s.arg1;
    s.tmp_1.arg0 = s.v___11468;
    s.tmp_1.arg1 = s.i___11463;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 7; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 96;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[96]) return breakpoint(s, 13, 96, r0);
  case 13:
    r0 = s.v___11468;
    { step = 5; continue; }
  case 2:
  case 3:
    s.lastBrkId = 97;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[97]) return breakpoint(s, 14, 97, r0);
  case 14:
    r0 = (s.i___11463 + 1);
    s.i___11463 = (r0);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 98;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[98]) return breakpoint(s, 15, 98, r0);
  case 15:
    r0 = undefined;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayFind__P111.info = {"start":8018,"length":292,"line":271,"column":4,"endLine":278,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayFind","argumentNames":["arr","callbackfn"]}

function helpers_arrayFind__P111_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayFind__P111, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  len___11460: undefined,
  i___11463: undefined,
  v___11468: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_rect_overlapping__P4353(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ox___7345 = undefined;
    s.oy___7353 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg1.fields["pos"];
    r0 = r0.fields["x"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["pos"];
    r0 = r0.fields["x"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.ox___7345 = (r0);
    r0 = s.arg1.fields["pos"];
    r0 = r0.fields["y"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["pos"];
    r0 = r0.fields["y"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.oy___7353 = (r0);
    r0 = s.arg1.fields["size"];
    r0 = r0.fields["x"];
    s.tmp_2 = r0;
    r0 = (0 - s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < s.ox___7345);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["size"];
    r0 = r0.fields["x"];
    s.tmp_3 = r0;
    r0 = (s.ox___7345 < s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_4;
    { step = 4; continue; }
  case 3:
    r0 = s.arg1.fields["size"];
    r0 = r0.fields["y"];
    s.tmp_6 = r0;
    r0 = (0 - s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 < s.oy___7353);
  case 4:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBool(s.tmp_7);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_7;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["size"];
    r0 = r0.fields["y"];
    s.tmp_8 = r0;
    r0 = (s.oy___7353 < s.tmp_8);
  case 6:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = s.tmp_9;
    return leave(s, r0)
  default: oops()
} } }
dot_rect_overlapping__P4353.info = {"start":971,"length":237,"line":24,"column":8,"endLine":28,"endColumn":9,"fileName":"rect.ts","functionName":"overlapping","argumentNames":["a","b"]}

function dot_rect_overlapping__P4353_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_rect_overlapping__P4353, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  ox___7345: undefined,
  oy___7353: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_game_end__P4449(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = (globals.state___4447 === 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = dot_game_gotoGameOver__P8735_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 185; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_game_end__P4449.info = {"start":1170,"length":159,"line":37,"column":8,"endLine":41,"endColumn":9,"fileName":"game.ts","functionName":"end","argumentNames":["gameOverText"]}

function dot_game_end__P4449_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_game_end__P4449, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function dot_game_gotoGameOver__P8735(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = dot_Input_block__P8720_mk(s);
    s.tmp_0.arg0 = globals.input___4453;
    s.callLocIdx = 211; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = dot_Input_block__P8720_mk(s);
    s.tmp_0.arg0 = globals.input___4455;
    s.callLocIdx = 212; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = (globals.score___4445 > globals.high___4446);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    globals.high___4446 = (globals.score___4445);
  case 1:
  case 2:
    globals._gameOverText___8711 = (s.arg0);
    r0 = (globals.tick___4443 + 100);
    globals.restartAt___8702 = (r0);
    globals.state___4447 = (2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_game_gotoGameOver__P8735.info = {"start":3287,"length":319,"line":101,"column":8,"endLine":110,"endColumn":9,"fileName":"game.ts","functionName":"gotoGameOver","argumentNames":["gameOverText"]}

function dot_game_gotoGameOver__P8735_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_game_gotoGameOver__P8735, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function dot_Input_Right__P9007(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Input__C8999_VT)) failedCast(r0);
    r0 = s.arg0.fields["_Right"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
dot_Input_Right__P9007.info = {"start":2108,"length":63,"line":76,"column":8,"endLine":78,"endColumn":9,"fileName":"input.ts","functionName":"Right","argumentNames":["this"]}
dot_Input_Right__P9007.isGetter = true;

function dot_Input_Right__P9007_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Input_Right__P9007, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function dot_Input_Left__P9006(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Input__C8999_VT)) failedCast(r0);
    r0 = s.arg0.fields["_Left"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
dot_Input_Left__P9006.info = {"start":2038,"length":61,"line":73,"column":8,"endLine":75,"endColumn":9,"fileName":"input.ts","functionName":"Left","argumentNames":["this"]}
dot_Input_Left__P9006.isGetter = true;

function dot_Input_Left__P9006_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Input_Left__P9006, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function dot_color_none__P4406(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_Array__mk();
    return leave(s, r0)
  default: oops()
} } }
dot_color_none__P4406.info = {"start":1565,"length":66,"line":63,"column":8,"endLine":65,"endColumn":9,"fileName":"color.ts","functionName":"none","argumentNames":[]}

function dot_color_none__P4406_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_color_none__P4406, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function dot_draw_box__P60113(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.x___60119 = undefined;
    s.y___60122 = undefined;
    s.w___60125 = undefined;
    s.h___60128 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["x"];
    s.x___60119 = (r0);
    r0 = s.arg0.fields["y"];
    s.y___60122 = (r0);
    r0 = s.arg1.fields["x"];
    s.w___60125 = (r0);
    r0 = s.arg1.fields["y"];
    s.h___60128 = (r0);
    r0 = (s.arg3 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = dot_color_all__P4405_mk(s);
    s.callLocIdx = 110; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.arg3 = (r0);
  case 1:
  case 2:
    s.tmp_0 = dot_draw__internal_rect__P60104_mk(s);
    s.tmp_0.arg0 = s.arg4;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = true;
    s.tmp_0.arg3 = s.arg3;
    s.tmp_0.arg4 = s.x___60119;
    s.tmp_0.arg5 = s.y___60122;
    s.tmp_0.arg6 = s.w___60125;
    s.tmp_0.arg7 = s.h___60128;
    s.tmp_0.arg8 = undefined;
    s.callLocIdx = 111; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
dot_draw_box__P60113.info = {"start":650,"length":505,"line":23,"column":8,"endLine":38,"endColumn":9,"fileName":"draw.ts","functionName":"box","argumentNames":["pos","size","alignCenter","collidesWith","id"]}

function dot_draw_box__P60113_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_draw_box__P60113, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  x___60119: undefined,
  y___60122: undefined,
  w___60125: undefined,
  h___60128: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function dot_draw__internal_rect__P60104(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.pos___60596 = undefined;
    s.size___60613 = undefined;
    s.c___60626 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.arg8 = (s.lambdaArgs[8]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg8);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = dot_collision_newReporter__P4370_mk(s);
    s.callLocIdx = 143; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
    s.arg8 = (r0);
  case 1:
  case 2:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_2 = r0 = s.arg4;
    r0 = (s.arg6 / 2);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.tmp_1.arg1 = r0;
    s.tmp_4 = r0 = s.arg5;
    r0 = (s.arg7 / 2);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 144; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_6 = r0;
    s.tmp_7 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_7.arg0 = s.tmp_6;
    s.tmp_7.arg1 = s.arg4;
    s.tmp_7.arg2 = s.arg5;
    s.callLocIdx = 145; s.pc = 20; return s.tmp_7;
  case 20:
    r0 = s.retval;
    r0 = s.tmp_6;
  case 4:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    s.pos___60596 = (s.tmp_8);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg6;
    s.tmp_1.arg2 = s.arg7;
    s.callLocIdx = 146; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    s.size___60613 = (s.tmp_0);
    r0 = s.size___60613.fields["x"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = s.size___60613.fields["y"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 === 0);
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    r0 = s.arg8;
    { step = 17; continue; }
  case 7:
  case 8:
    s.tmp_4 = r0 = globals._colorStack___7652;
    r0 = pxsim_Array__length(globals._colorStack___7652);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 - 1);
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.tmp_5);
    s.c___60626 = (r0);
    r0 = s.size___60613.fields["x"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.tmp_2 = r0 = s.pos___60596;
    r0 = s.tmp_2.fields["x"];
    s.tmp_4 = r0;
    r0 = s.size___60613.fields["x"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["x"] = (s.tmp_3);
    s.tmp_0 = r0 = s.size___60613;
    r0 = s.tmp_0.fields["x"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * -1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["x"] = (s.tmp_1);
  case 9:
  case 10:
    r0 = s.size___60613.fields["y"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.tmp_2 = r0 = s.pos___60596;
    r0 = s.tmp_2.fields["y"];
    s.tmp_4 = r0;
    r0 = s.size___60613.fields["y"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["y"] = (s.tmp_3);
    s.tmp_0 = r0 = s.size___60613;
    r0 = s.tmp_0.fields["y"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * -1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["y"] = (s.tmp_1);
  case 11:
  case 12:
    r0 = pxsim_pxtcore_mkClassInstance(dot_Rect__C4340_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Rect_constructor__P4348_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.pos___60596;
    s.tmp_1.arg2 = s.size___60613;
    s.callLocIdx = 148; s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
    s.tmp_2 = dot_CollisionReporter__add__P4365_mk(s);
    s.tmp_2.arg0 = s.arg8;
    s.tmp_2.arg1 = s.arg0;
    s.tmp_2.arg2 = s.tmp_0;
    s.tmp_2.arg3 = s.c___60626;
    s.tmp_2.arg4 = s.arg3;
    s.callLocIdx = 149; s.pc = 23; return s.tmp_2;
  case 23:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(s.c___60626);
    if (!r0) { step = 15; continue; }
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 13; continue; }
    s.tmp_0 = dot_gfx_box__P4414_mk(s);
    r0 = s.pos___60596.fields["x"];
    s.tmp_0.arg0 = r0;
    r0 = s.pos___60596.fields["y"];
    s.tmp_0.arg1 = r0;
    r0 = s.size___60613.fields["x"];
    s.tmp_0.arg2 = r0;
    r0 = s.size___60613.fields["y"];
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 150; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    { step = 14; continue; }
  case 13:
    s.tmp_0 = dot_gfx_rect__P4413_mk(s);
    r0 = s.pos___60596.fields["x"];
    s.tmp_0.arg0 = r0;
    r0 = s.pos___60596.fields["y"];
    s.tmp_0.arg1 = r0;
    r0 = s.size___60613.fields["x"];
    s.tmp_0.arg2 = r0;
    r0 = s.size___60613.fields["y"];
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 151; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
  case 14:
  case 15:
  case 16:
    r0 = s.arg8;
  case 17:
    return leave(s, r0)
  default: oops()
} } }
dot_draw__internal_rect__P60104.info = {"start":7686,"length":1489,"line":222,"column":12,"endLine":266,"endColumn":13,"fileName":"draw.ts","functionName":"rect","argumentNames":["id","alignCenter","fill","collidesWith","x","y","w","h","reporter"]}

function dot_draw__internal_rect__P60104_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_draw__internal_rect__P60104, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  pos___60596: undefined,
  size___60613: undefined,
  c___60626: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
  arg8: undefined,
} }





function dot_CollisionReporter__add__P4365(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_CollisionReporter__C4359_VT)) failedCast(r0);
    r0 = pxsim_Array_.indexOf(s.arg4, 0, undefined);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >= 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtcore_mkClassInstance(dot_Collidable__C4355_VT);
    s.tmp_4 = r0;
    s.tmp_5 = dot_Collidable_constructor__P4356_mk(s);
    s.tmp_5.arg0 = s.tmp_4;
    s.tmp_5.arg1 = s.arg1;
    s.tmp_5.arg2 = s.arg2;
    s.tmp_5.arg3 = s.arg3;
    s.tmp_5.arg4 = s.arg4;
    s.callLocIdx = 73; s.pc = 3; return s.tmp_5;
  case 3:
    r0 = s.retval;
    r0 = s.arg0.fields["_srcs"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__push(s.tmp_6, s.tmp_4);
    s.tmp_0 = dot_collision__internal_enqueue__P4375_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 74; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_CollisionReporter__add__P4365.info = {"start":667,"length":246,"line":24,"column":8,"endLine":29,"endColumn":9,"fileName":"collision.ts","functionName":"_add","argumentNames":["this","id","rect","c","mask"]}

function dot_CollisionReporter__add__P4365_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_CollisionReporter__add__P4365, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function dot_collision__internal_enqueue__P4375(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["_gen"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== globals.gen___4373);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.throwValue("Don't cache CollisionReporters across updates");
  case 1:
  case 2:
    r0 = pxsim_pxtcore_mkAction(1, dot_collision__internal_enqueue_inline__P7500);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_2, 0, s.arg0);
    s.tmp_6 = helpers_arrayFind__P111_mk(s);
    s.tmp_6.arg0 = globals.dirty___7466;
    s.tmp_6.arg1 = s.tmp_2;
    s.callLocIdx = 80; s.pc = 5; return s.tmp_6;
  case 5:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_Array__push(globals.dirty___7466, s.arg0);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_collision__internal_enqueue__P4375.info = {"start":2319,"length":290,"line":69,"column":12,"endLine":74,"endColumn":13,"fileName":"collision.ts","functionName":"enqueue","argumentNames":["reporter"]}

function dot_collision__internal_enqueue__P4375_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_collision__internal_enqueue__P4375, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function dot_collision__internal_enqueue_inline__P7500(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["_id"];
    s.tmp_0 = r0;
    r0 = s.caps[0].fields["_id"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 === s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
dot_collision__internal_enqueue_inline__P7500.info = {"start":2504,"length":27,"line":71,"column":32,"endLine":71,"endColumn":59,"fileName":"collision.ts","functionName":"inline","argumentNames":["r"]}

function dot_collision__internal_enqueue_inline__P7500_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_collision__internal_enqueue_inline__P7500, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function dot_Collidable_constructor__P4356(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Collidable__C4355_VT)) failedCast(r0);
    r0 = (s.arg0).fields["id"] = (s.arg1);
    r0 = (s.arg0).fields["rect"] = (s.arg2);
    r0 = (s.arg0).fields["color"] = (s.arg3);
    r0 = (s.arg0).fields["_mask"] = (s.arg4);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Collidable_constructor__P4356.info = {"start":54,"length":146,"line":2,"column":8,"endLine":6,"endColumn":38,"fileName":"collision.ts","functionName":"inline","argumentNames":["this","id","rect","color","_mask"]}

function dot_Collidable_constructor__P4356_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Collidable_constructor__P4356, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function dot_color_isNoncollidable__P4408(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array_.indexOf(s.arg0, 0, undefined);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >= 0);
    return leave(s, r0)
  default: oops()
} } }
dot_color_isNoncollidable__P4408.info = {"start":1741,"length":124,"line":69,"column":8,"endLine":71,"endColumn":9,"fileName":"color.ts","functionName":"isNoncollidable","argumentNames":["mask"]}

function dot_color_isNoncollidable__P4408_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_color_isNoncollidable__P4408, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function dot_collision_newReporter__P4370(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.reporter___7468 = undefined;
    r0 = pxsim_pxtcore_mkClassInstance(dot_CollisionReporter__C4359_VT);
    s.tmp_0 = r0;
    r0 = (globals.nextId___4372 + 1);
    s.tmp_1 = r0;
    globals.nextId___4372 = (r0);
    s.tmp_2 = dot_CollisionReporter_constructor__P4364_mk(s);
    s.tmp_2.arg0 = s.tmp_0;
    s.tmp_2.arg1 = s.tmp_1;
    s.tmp_2.arg2 = globals.gen___4373;
    s.callLocIdx = 76; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.reporter___7468 = (s.tmp_0);
    r0 = pxsim_Array__push(globals.reporters___7464, s.reporter___7468);
    s.tmp_0 = dot_collision__internal_enqueue__P4375_mk(s);
    s.tmp_0.arg0 = s.reporter___7468;
    s.callLocIdx = 77; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = s.reporter___7468;
    return leave(s, r0)
  default: oops()
} } }
dot_collision_newReporter__P4370.info = {"start":1769,"length":255,"line":54,"column":8,"endLine":59,"endColumn":9,"fileName":"collision.ts","functionName":"newReporter","argumentNames":[]}

function dot_collision_newReporter__P4370_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_collision_newReporter__P4370, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  reporter___7468: undefined,
} }





function dot_CollisionReporter_constructor__P4364(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_CollisionReporter__C4359_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_id"] = (s.arg1);
    r0 = (s.arg0).fields["_gen"] = (s.arg2);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_srcs"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_collisions"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_CollisionReporter_constructor__P4364.info = {"start":490,"length":168,"line":18,"column":8,"endLine":23,"endColumn":9,"fileName":"collision.ts","functionName":"inline","argumentNames":["this","id","gen"]}

function dot_CollisionReporter_constructor__P4364_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_CollisionReporter_constructor__P4364, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function dot_color_all__P4405(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = helpers_arraySlice__P115_mk(s);
    s.tmp_0.arg0 = globals.ALL_COLORS___7649;
    s.tmp_0.arg1 = undefined;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 93; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
dot_color_all__P4405.info = {"start":1475,"length":81,"line":60,"column":8,"endLine":62,"endColumn":9,"fileName":"color.ts","functionName":"all","argumentNames":[]}

function dot_color_all__P4405_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_color_all__P4405, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function dot_draw_bar__P60145(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.l___60156 = undefined;
    s.p0___60162 = undefined;
    s.p1___60171 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = s.arg4;
    s.callLocIdx = 112; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.arg4 = (r0);
    s.tmp_0 = dot_Vec_rotate__P30679_mk(s);
    s.tmp_1 = dot_vec_make__P30717_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 113; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg3;
    s.callLocIdx = 114; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.l___60156 = (r0);
    s.tmp_0 = dot_Vec_sub__P30676_mk(s);
    s.tmp_1 = dot_vec_dup__P30713_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 115; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = dot_vec_scale__P30667_mk(s);
    s.tmp_2.arg0 = s.l___60156;
    s.tmp_2.arg1 = s.arg4;
    s.callLocIdx = 116; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 117; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.p0___60162 = (r0);
    s.tmp_0 = dot_vec_add__P30666_mk(s);
    s.tmp_0.arg0 = s.p0___60162;
    s.tmp_0.arg1 = s.l___60156;
    s.callLocIdx = 118; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.p1___60171 = (r0);
    s.tmp_0 = dot_draw_line__P60177_mk(s);
    s.tmp_0.arg0 = s.p0___60162;
    s.tmp_0.arg1 = s.p1___60171;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = 0;
    s.tmp_0.arg4 = s.arg5;
    s.tmp_0.arg5 = s.arg6;
    s.callLocIdx = 119; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
dot_draw_bar__P60145.info = {"start":1164,"length":566,"line":39,"column":8,"endLine":53,"endColumn":9,"fileName":"draw.ts","functionName":"bar","argumentNames":["center","length","thickness","angle","centerPosRatio","collidesWith","id"]}

function dot_draw_bar__P60145_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_draw_bar__P60145, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  l___60156: undefined,
  p0___60162: undefined,
  p1___60171: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
} }





function dot_Vec_sub__P30676(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Vec__C30670_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["x"];
    s.tmp_2 = r0;
    r0 = s.arg1.fields["x"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["x"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["y"];
    s.tmp_2 = r0;
    r0 = s.arg1.fields["y"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["y"] = (s.tmp_1);
    r0 = s.arg0;
    return leave(s, r0)
  default: oops()
} } }
dot_Vec_sub__P30676.info = {"start":563,"length":115,"line":16,"column":8,"endLine":20,"endColumn":9,"fileName":"vec.ts","functionName":"sub","argumentNames":["this","v"]}

function dot_Vec_sub__P30676_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Vec_sub__P30676, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_draw_img__P60243(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.pos___60250 = undefined;
    s.reporter___60278 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    r0 = s.arg0.fields["x"];
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.width(s.arg1);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 / 2);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.tmp_1.arg1 = r0;
    r0 = s.arg0.fields["y"];
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.height(s.arg1);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 / 2);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 - s.tmp_6);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 124; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_8 = r0;
    s.tmp_9 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_9.arg0 = s.tmp_8;
    r0 = s.arg0.fields["x"];
    s.tmp_9.arg1 = r0;
    r0 = s.arg0.fields["y"];
    s.tmp_9.arg2 = r0;
    s.callLocIdx = 125; s.pc = 6; return s.tmp_9;
  case 6:
    r0 = s.retval;
    r0 = s.tmp_8;
  case 2:
    // jmp value (already in r0)
    s.tmp_10 = r0;
    s.pos___60250 = (s.tmp_10);
    r0 = (s.arg4 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_1 = dot_color_all__P4405_mk(s);
    s.callLocIdx = 126; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.arg4 = (r0);
  case 3:
  case 4:
    s.tmp_0 = dot_collision_newReporter__P4370_mk(s);
    s.callLocIdx = 127; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.reporter___60278 = (r0);
    s.tmp_0 = dot_CollisionReporter__add__P4365_mk(s);
    s.tmp_0.arg0 = s.reporter___60278;
    s.tmp_0.arg1 = s.arg5;
    s.tmp_1 = dot_rect_make__P4350_mk(s);
    s.tmp_1.arg0 = s.pos___60250;
    s.tmp_2 = dot_vec_make__P30717_mk(s);
    r0 = pxsim_ImageMethods.width(s.arg1);
    s.tmp_2.arg0 = r0;
    r0 = pxsim_ImageMethods.height(s.arg1);
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 128; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 129; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.arg3;
    s.tmp_0.arg4 = s.arg4;
    s.callLocIdx = 130; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.tmp_0 = dot_gfx_img__P4416_mk(s);
    r0 = s.pos___60250.fields["x"];
    s.tmp_0.arg0 = r0;
    r0 = s.pos___60250.fields["y"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 131; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    r0 = s.reporter___60278;
    return leave(s, r0)
  default: oops()
} } }
dot_draw_img__P60243.info = {"start":2871,"length":706,"line":90,"column":8,"endLine":108,"endColumn":9,"fileName":"draw.ts","functionName":"img","argumentNames":["p","img","alignCenter","layer","collidesWith","id"]}

function dot_draw_img__P60243_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_draw_img__P60243, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  pos___60250: undefined,
  reporter___60278: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function dot_gfx_img__P4416(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(dot_gfx_GfxImgCommand__C7749_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_gfx_GfxImgCommand_constructor__P7751_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.arg2;
    s.callLocIdx = 104; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = pxsim_Array__push(globals.commands___7759, s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_gfx_img__P4416.info = {"start":1686,"length":122,"line":41,"column":8,"endLine":43,"endColumn":9,"fileName":"gfx.ts","functionName":"img","argumentNames":["x","y","img"]}

function dot_gfx_img__P4416_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_gfx_img__P4416, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function dot_gfx_GfxImgCommand_constructor__P7751(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_gfx_GfxImgCommand__C7749_VT)) failedCast(r0);
    r0 = (s.arg0).fields["x"] = (s.arg1);
    r0 = (s.arg0).fields["y"] = (s.arg2);
    r0 = (s.arg0).fields["img"] = (s.arg3);
    s.tmp_0 = dot_gfx_GfxCommand_constructor__P7711_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 3;
    s.callLocIdx = 97; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_gfx_GfxImgCommand_constructor__P7751.info = {"start":1003,"length":125,"line":27,"column":12,"endLine":29,"endColumn":13,"fileName":"gfx.ts","functionName":"inline","argumentNames":["this","x","y","img"]}

function dot_gfx_GfxImgCommand_constructor__P7751_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_gfx_GfxImgCommand_constructor__P7751, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function dot_rect_make__P4350(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(dot_Rect__C4340_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Rect_constructor__P4348_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.callLocIdx = 71; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
dot_rect_make__P4350.info = {"start":509,"length":99,"line":12,"column":8,"endLine":14,"endColumn":9,"fileName":"rect.ts","functionName":"make","argumentNames":["pos","size"]}

function dot_rect_make__P4350_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_rect_make__P4350, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_color_noncollidable__P4407(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, 0);
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
dot_color_noncollidable__P4407.info = {"start":1640,"length":92,"line":66,"column":8,"endLine":68,"endColumn":9,"fileName":"color.ts","functionName":"noncollidable","argumentNames":[]}

function dot_color_noncollidable__P4407_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_color_noncollidable__P4407, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function dot_draw_arc__P60206(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg2 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = null;
    { step = 9; continue; }
  case 1:
  case 2:
    r0 = (s.arg3 == null);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.arg3 = (0);
  case 3:
  case 4:
    r0 = (s.arg4 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.arg4 = (6.283185307179586);
  case 5:
  case 6:
    r0 = (s.arg5 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.tmp_1 = dot_color_all__P4405_mk(s);
    s.callLocIdx = 122; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.arg5 = (r0);
  case 7:
  case 8:
    s.tmp_0 = dot_draw__internal_arc__P60234_mk(s);
    s.tmp_0.arg0 = s.arg6;
    s.tmp_0.arg1 = s.arg5;
    s.tmp_0.arg2 = s.arg0;
    s.tmp_0.arg3 = s.arg1;
    s.tmp_0.arg4 = s.arg2;
    s.tmp_0.arg5 = s.arg3;
    s.tmp_0.arg6 = s.arg4;
    s.tmp_0.arg7 = undefined;
    s.callLocIdx = 123; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
  case 9:
    return leave(s, r0)
  default: oops()
} } }
dot_draw_arc__P60206.info = {"start":2186,"length":675,"line":68,"column":8,"endLine":88,"endColumn":9,"fileName":"draw.ts","functionName":"arc","argumentNames":["p","radius","thickness","angleFrom","angleTo","collidesWith","id"]}

function dot_draw_arc__P60206_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_draw_arc__P60206, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
} }





function dot_draw__internal_arc__P60234(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.af___60807 = undefined;
    s.ao___60808 = undefined;
    s.lc___60833 = undefined;
    s.ai___60844 = undefined;
    s.a___60848 = undefined;
    s.p1___60850 = undefined;
    s.p2___60857 = undefined;
    s.o___60859 = undefined;
    s.i___60861 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg7);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = dot_collision_newReporter__P4370_mk(s);
    s.callLocIdx = 163; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    s.arg7 = (r0);
  case 1:
  case 2:
    r0 = (s.arg5 > s.arg6);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.af___60807 = (s.arg6);
    r0 = (s.arg5 - s.arg6);
    s.ao___60808 = (r0);
    { step = 4; continue; }
  case 3:
    s.af___60807 = (s.arg5);
    r0 = (s.arg6 - s.arg5);
    s.ao___60808 = (r0);
  case 4:
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_0.arg1 = 6.283185307179586;
    s.tmp_0.arg2 = s.ao___60808;
    s.callLocIdx = 164; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.ao___60808 = (r0);
    r0 = (s.ao___60808 < 0.01);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.arg7;
    { step = 9; continue; }
  case 5:
  case 6:
    s.tmp_1 = Math_clamp__P127_mk(s);
    s.tmp_1.arg0 = 1;
    s.tmp_1.arg1 = 36;
    s.tmp_3 = r0 = s.ao___60808;
    r0 = (s.arg3 * 0.25);
    s.tmp_5 = r0;
    r0 = pxsim.Math_.sqrt(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 * s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.ceil(s.tmp_2);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 165; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    s.lc___60833 = (r0);
    r0 = (s.ao___60808 / s.lc___60833);
    s.ai___60844 = (r0);
    s.a___60848 = (s.af___60807);
    s.tmp_0 = dot_Vec_add__P30675_mk(s);
    s.tmp_1 = dot_Vec_rotate__P30679_mk(s);
    s.tmp_2 = dot_vec_make__P30717_mk(s);
    s.tmp_2.arg0 = s.arg3;
    s.tmp_2.arg1 = 0;
    s.callLocIdx = 166; s.pc = 15; return s.tmp_2;
  case 15:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.a___60848;
    s.callLocIdx = 167; s.pc = 14; return s.tmp_1;
  case 14:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 168; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.p1___60850 = (r0);
    s.tmp_0 = dot_vec_zero__P30742_mk(s);
    s.callLocIdx = 169; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.p2___60857 = (r0);
    s.tmp_0 = dot_vec_zero__P30742_mk(s);
    s.callLocIdx = 170; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.o___60859 = (r0);
    s.i___60861 = (0);
  case 7:
    r0 = (s.i___60861 < s.lc___60833);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    r0 = (s.a___60848 + s.ai___60844);
    s.a___60848 = (r0);
    s.tmp_0 = dot_Vec_add__P30675_mk(s);
    s.tmp_1 = dot_Vec_rotate__P30679_mk(s);
    s.tmp_2 = dot_Vec_set__P30680_mk(s);
    s.tmp_2.arg0 = s.p2___60857;
    s.tmp_2.arg1 = s.arg3;
    s.tmp_2.arg2 = 0;
    s.callLocIdx = 171; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.a___60848;
    s.callLocIdx = 172; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 173; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.tmp_0 = dot_Vec_sub__P30676_mk(s);
    s.tmp_1 = dot_Vec_setv__P30682_mk(s);
    s.tmp_1.arg0 = s.o___60859;
    s.tmp_1.arg1 = s.p2___60857;
    s.callLocIdx = 174; s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.p1___60850;
    s.callLocIdx = 175; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    s.tmp_0 = dot_draw__internal_line__P60198_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.p1___60850;
    s.tmp_0.arg3 = s.p2___60857;
    s.tmp_0.arg4 = s.arg4;
    s.tmp_0.arg5 = 0;
    s.tmp_0.arg6 = s.arg7;
    s.callLocIdx = 176; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    s.tmp_0 = dot_Vec_setv__P30682_mk(s);
    s.tmp_0.arg0 = s.p1___60850;
    s.tmp_0.arg1 = s.p2___60857;
    s.callLocIdx = 177; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    r0 = (s.i___60861 + 1);
    s.i___60861 = (r0);
    { step = 7; continue; }
  case 8:
    r0 = s.arg7;
  case 9:
    return leave(s, r0)
  default: oops()
} } }
dot_draw__internal_arc__P60234.info = {"start":10587,"length":1520,"line":300,"column":12,"endLine":340,"endColumn":13,"fileName":"draw.ts","functionName":"arc","argumentNames":["id","collidesWith","p","radius","thickness","angleFrom","angleTo","reporter"]}

function dot_draw__internal_arc__P60234_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_draw__internal_arc__P60234, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  af___60807: undefined,
  ao___60808: undefined,
  lc___60833: undefined,
  ai___60844: undefined,
  a___60848: undefined,
  p1___60850: undefined,
  p2___60857: undefined,
  o___60859: undefined,
  i___60861: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
} }





function dot_draw__internal_line__P60198(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.d___60709 = undefined;
    s.len___60714 = undefined;
    s.norm___60718 = undefined;
    s.numBoxes___60722 = undefined;
    s.actualGap___60733 = undefined;
    s.step___60758 = undefined;
    s.p___60764 = undefined;
    s.i___60774 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg6);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = dot_collision_newReporter__P4370_mk(s);
    s.callLocIdx = 152; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.arg6 = (r0);
  case 1:
  case 2:
    s.tmp_1 = Math_clamp__P127_mk(s);
    s.tmp_1.arg0 = 1;
    s.tmp_1.arg1 = globals.SCREEN_WIDTH___4379;
    s.tmp_1.arg2 = s.arg4;
    s.callLocIdx = 153; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.arg4 = (r0);
    s.tmp_0 = Math_abs__P128_mk(s);
    s.tmp_0.arg0 = s.arg5;
    s.callLocIdx = 154; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.arg5 = (r0);
    s.tmp_0 = dot_vec_sub__P30737_mk(s);
    s.tmp_0.arg0 = s.arg3;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 155; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.d___60709 = (r0);
    s.tmp_0 = dot_vec_length__P30738_mk(s);
    s.tmp_0.arg0 = s.d___60709;
    s.callLocIdx = 156; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.len___60714 = (r0);
    s.tmp_0 = dot_vec_normal__P30739_mk(s);
    s.tmp_0.arg0 = s.d___60709;
    s.callLocIdx = 157; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.norm___60718 = (r0);
    r0 = (s.len___60714 + s.arg5);
    s.tmp_1 = r0;
    r0 = (s.arg4 + s.arg5);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.round(s.tmp_0);
    s.numBoxes___60722 = (r0);
    s.tmp_1 = r0 = s.len___60714;
    r0 = (s.numBoxes___60722 * s.arg4);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.numBoxes___60722 - 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 / s.tmp_3);
    s.actualGap___60733 = (r0);
    r0 = (s.actualGap___60733 > s.arg5);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = (s.numBoxes___60722 + 1);
    s.numBoxes___60722 = (r0);
    s.tmp_1 = r0 = s.len___60714;
    r0 = (s.numBoxes___60722 * s.arg4);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.numBoxes___60722 - 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 / s.tmp_3);
    s.actualGap___60733 = (r0);
  case 3:
  case 4:
    s.tmp_0 = dot_vec_scale__P30667_mk(s);
    s.tmp_0.arg0 = s.norm___60718;
    r0 = (s.arg4 + s.actualGap___60733);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 158; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.step___60758 = (r0);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    r0 = (s.arg4 / 2);
    s.tmp_1.arg1 = r0;
    r0 = (s.arg4 / 2);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 159; s.pc = 14; return s.tmp_1;
  case 14:
    r0 = s.retval;
    s.tmp_2 = dot_vec_sub__P30737_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.tmp_2.arg1 = s.tmp_0;
    s.callLocIdx = 160; s.pc = 15; return s.tmp_2;
  case 15:
    r0 = s.retval;
    s.p___60764 = (r0);
    s.i___60774 = (0);
  case 5:
    r0 = (s.i___60774 <= s.numBoxes___60722);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_1 = dot_draw__internal_rect__P60104_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = false;
    s.tmp_1.arg2 = true;
    s.tmp_1.arg3 = s.arg1;
    r0 = s.p___60764.fields["x"];
    s.tmp_1.arg4 = r0;
    r0 = s.p___60764.fields["y"];
    s.tmp_1.arg5 = r0;
    s.tmp_1.arg6 = s.arg4;
    s.tmp_1.arg7 = s.arg4;
    s.tmp_1.arg8 = s.arg6;
    s.callLocIdx = 161; s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    s.tmp_0 = dot_Vec_add__P30675_mk(s);
    s.tmp_0.arg0 = s.p___60764;
    s.tmp_0.arg1 = s.step___60758;
    s.callLocIdx = 162; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    r0 = (s.i___60774 + 1);
    s.i___60774 = (r0);
    { step = 5; continue; }
  case 6:
    r0 = s.arg6;
    return leave(s, r0)
  default: oops()
} } }
dot_draw__internal_line__P60198.info = {"start":9189,"length":1384,"line":268,"column":12,"endLine":298,"endColumn":13,"fileName":"draw.ts","functionName":"line","argumentNames":["id","collidesWith","a","b","thickness","idealGap","reporter"]}

function dot_draw__internal_line__P60198_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_draw__internal_line__P60198, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  d___60709: undefined,
  len___60714: undefined,
  norm___60718: undefined,
  numBoxes___60722: undefined,
  actualGap___60733: undefined,
  step___60758: undefined,
  p___60764: undefined,
  i___60774: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
} }





function dot_vec_normal__P30739(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___31173 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = dot_vec_length__P30738_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 322; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.len___31173 = (r0);
    r0 = (s.len___31173 === 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0;
    { step = 3; continue; }
  case 1:
  case 2:
    s.tmp_1 = dot_vec_scale__P30667_mk(s);
    s.tmp_1.arg0 = s.arg0;
    r0 = (1 / s.len___31173);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 323; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
dot_vec_normal__P30739.info = {"start":4203,"length":157,"line":139,"column":8,"endLine":143,"endColumn":9,"fileName":"vec.ts","functionName":"normal","argumentNames":["v"]}

function dot_vec_normal__P30739_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_vec_normal__P30739, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  len___31173: undefined,
  arg0: undefined,
} }





function dot_vec_length__P30738(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_1 = dot_vec_lengthSq__P31154_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 321; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim.Math_.sqrt(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
dot_vec_length__P30738.info = {"start":4101,"length":93,"line":136,"column":8,"endLine":138,"endColumn":9,"fileName":"vec.ts","functionName":"length","argumentNames":["v"]}

function dot_vec_length__P30738_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_vec_length__P30738, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function dot_vec_lengthSq__P31154(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["x"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["x"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["y"];
    s.tmp_4 = r0;
    r0 = s.arg0.fields["y"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 * s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 + s.tmp_3);
    return leave(s, r0)
  default: oops()
} } }
dot_vec_lengthSq__P31154.info = {"start":3998,"length":94,"line":133,"column":8,"endLine":135,"endColumn":9,"fileName":"vec.ts","functionName":"lengthSq","argumentNames":["v"]}

function dot_vec_lengthSq__P31154_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_vec_lengthSq__P31154, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function dot_vec_sub__P30737(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    r0 = s.arg0.fields["x"];
    s.tmp_2 = r0;
    r0 = s.arg1.fields["x"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.tmp_1.arg1 = r0;
    r0 = s.arg0.fields["y"];
    s.tmp_4 = r0;
    r0 = s.arg1.fields["y"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 319; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
dot_vec_sub__P30737.info = {"start":2865,"length":148,"line":94,"column":8,"endLine":99,"endColumn":9,"fileName":"vec.ts","functionName":"sub","argumentNames":["a","b"]}

function dot_vec_sub__P30737_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_vec_sub__P30737, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_Vec_setv__P30682(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Vec__C30670_VT)) failedCast(r0);
    r0 = s.arg1.fields["x"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["x"] = (s.tmp_0);
    r0 = s.arg1.fields["y"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["y"] = (s.tmp_0);
    r0 = s.arg0;
    return leave(s, r0)
  default: oops()
} } }
dot_Vec_setv__P30682.info = {"start":1448,"length":114,"line":48,"column":8,"endLine":52,"endColumn":9,"fileName":"vec.ts","functionName":"setv","argumentNames":["this","v"]}

function dot_Vec_setv__P30682_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Vec_setv__P30682, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_Vec_set__P30680(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Vec__C30670_VT)) failedCast(r0);
    r0 = (s.arg0).fields["x"] = (s.arg1);
    r0 = (s.arg0).fields["y"] = (s.arg2);
    r0 = s.arg0;
    return leave(s, r0)
  default: oops()
} } }
dot_Vec_set__P30680.info = {"start":1194,"length":123,"line":38,"column":8,"endLine":42,"endColumn":9,"fileName":"vec.ts","functionName":"set","argumentNames":["this","x","y"]}

function dot_Vec_set__P30680_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Vec_set__P30680, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function dot_vec_zero__P30742(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 0;
    s.tmp_1.arg2 = 0;
    s.callLocIdx = 315; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
dot_vec_zero__P30742.info = {"start":2272,"length":73,"line":74,"column":8,"endLine":76,"endColumn":9,"fileName":"vec.ts","functionName":"zero","argumentNames":[]}

function dot_vec_zero__P30742_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_vec_zero__P30742, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function dot_draw_line__P60177(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg2 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = null;
    { step = 5; continue; }
  case 1:
  case 2:
    r0 = (s.arg4 == null);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.tmp_2 = dot_color_all__P4405_mk(s);
    s.callLocIdx = 120; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.arg4 = (r0);
  case 3:
  case 4:
    s.tmp_0 = dot_draw__internal_line__P60198_mk(s);
    s.tmp_0.arg0 = s.arg5;
    s.tmp_0.arg1 = s.arg4;
    s.tmp_0.arg2 = s.arg0;
    s.tmp_0.arg3 = s.arg1;
    s.tmp_0.arg4 = s.arg2;
    s.tmp_0.arg5 = s.arg3;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 121; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
dot_draw_line__P60177.info = {"start":1739,"length":438,"line":54,"column":8,"endLine":67,"endColumn":9,"fileName":"draw.ts","functionName":"line","argumentNames":["a","b","thickness","gap","collidesWith","id"]}

function dot_draw_line__P60177_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_draw_line__P60177, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function dot_vec_fromAngle__P31015(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.x___31017 = undefined;
    s.y___31021 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.Math_.cos(s.arg0);
    s.x___31017 = (r0);
    r0 = pxsim.Math_.sin(s.arg0);
    s.y___31021 = (r0);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.x___31017;
    s.tmp_1.arg2 = s.y___31021;
    s.callLocIdx = 316; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
dot_vec_fromAngle__P31015.info = {"start":2451,"length":157,"line":80,"column":8,"endLine":84,"endColumn":9,"fileName":"vec.ts","functionName":"fromAngle","argumentNames":["a"]}

function dot_vec_fromAngle__P31015_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_vec_fromAngle__P31015, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  x___31017: undefined,
  y___31021: undefined,
  arg0: undefined,
} }





function dot_vec_make__P30717(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(dot_Vec__C30670_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Vec_constructor__P30716_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.callLocIdx = 314; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
dot_vec_make__P30717.info = {"start":2170,"length":93,"line":71,"column":8,"endLine":73,"endColumn":9,"fileName":"vec.ts","functionName":"make","argumentNames":["x","y"]}

function dot_vec_make__P30717_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_vec_make__P30717, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_setBackgroundColor__P2884(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___11016 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1991;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1991]) return breakpoint(s, 1, 1991, r0);
  case 1:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 946; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.scene___11016 = (r0);
    s.lastBrkId = 1992;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1992]) return breakpoint(s, 3, 1992, r0);
  case 3:
    r0 = s.scene___11016.fields["background"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0).fields["color"] = (s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_setBackgroundColor__P2884.info = {"start":1231,"length":140,"line":53,"column":4,"endLine":56,"endColumn":5,"fileName":"pxt_modules/game/scenes.ts","functionName":"setBackgroundColor","argumentNames":["color"]}

function scene_setBackgroundColor__P2884_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_setBackgroundColor__P2884, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  scene___11016: undefined,
  arg0: undefined,
} }





function dot_game_start__P4448(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    globals._gameUpdate___8712 = (s.arg0);
    globals.restartAt___8702 = (0);
    s.tmp_0 = setTimeout__P423_mk(s);
    s.tmp_0.arg0 = dot_game_start_inline__P8718;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 184; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_game_start__P4448.info = {"start":780,"length":380,"line":25,"column":8,"endLine":35,"endColumn":9,"fileName":"game.ts","functionName":"start","argumentNames":["gameUpdate"]}

function dot_game_start__P4448_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_game_start__P4448, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function dot_game_start_inline__P8718(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = dot_Input_block__P8720_mk(s);
    s.tmp_0.arg0 = globals.input___4453;
    s.callLocIdx = 180; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = dot_Input_block__P8720_mk(s);
    s.tmp_0.arg0 = globals.input___4455;
    s.callLocIdx = 181; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = dot_scores__internal_init__P4461_mk(s);
    s.callLocIdx = 182; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = dot_particles__internal_init__P34738_mk(s);
    s.callLocIdx = 183; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    globals.state___4447 = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_game_start_inline__P8718.info = {"start":916,"length":229,"line":28,"column":23,"endLine":34,"endColumn":13,"fileName":"game.ts","functionName":"inline","argumentNames":[]}

function dot_game_start_inline__P8718_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_game_start_inline__P8718, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function setTimeout__P423(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 508;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[508]) return breakpoint(s, 1, 508, r0);
  case 1:
    s.tmp_0 = control_setInterval__P354_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = 1;
    s.callLocIdx = 65; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
setTimeout__P423.info = {"start":610,"length":139,"line":26,"column":0,"endLine":28,"endColumn":1,"fileName":"pxt_modules/base/scheduling.ts","functionName":"setTimeout","argumentNames":["func","delay"]}

function setTimeout__P423_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: setTimeout__P423, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function control_setInterval__P354(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.interval___11103 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 319;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[319]) return breakpoint(s, 8, 319, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg1 < 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 320;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[320]) return breakpoint(s, 9, 320, r0);
  case 9:
    r0 = 0;
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 321;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[321]) return breakpoint(s, 10, 321, r0);
  case 10:
    r0 = pxsim_numops_toBoolDecr(globals._intervals___4602);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 322;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[322]) return breakpoint(s, 11, 322, r0);
  case 11:
    r0 = pxsim_Array__mk();
    globals._intervals___4602 = (r0);
  case 5:
  case 6:
    s.lastBrkId = 323;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[323]) return breakpoint(s, 12, 323, r0);
  case 12:
    r0 = pxsim_pxtcore_mkClassInstance(control_Interval__C4603_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_Interval_constructor__P4606_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.arg2;
    s.callLocIdx = 30; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
    s.interval___11103 = (s.tmp_0);
    s.lastBrkId = 324;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[324]) return breakpoint(s, 14, 324, r0);
  case 14:
    r0 = s.interval___11103.fields["id"];
  case 7:
    return leave(s, r0)
  default: oops()
} } }
control_setInterval__P354.info = {"start":1554,"length":266,"line":54,"column":4,"endLine":59,"endColumn":5,"fileName":"pxt_modules/base/interval.ts","functionName":"setInterval","argumentNames":["func","delay","mode"]}

function control_setInterval__P354_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_setInterval__P354, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  interval___11103: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_Interval_constructor__P4606(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_Interval__C4603_VT)) failedCast(r0);
    s.lastBrkId = 300;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[300]) return breakpoint(s, 3, 300, r0);
  case 3:
    r0 = pxsim_Array__length(globals._intervals___4602);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 1;
    { step = 2; continue; }
  case 1:
    s.tmp_3 = r0 = globals._intervals___4602;
    r0 = pxsim_Array__length(globals._intervals___4602);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - 1);
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.tmp_4);
    r0 = r0.fields["id"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = (s.arg0).fields["id"] = (s.tmp_6);
    s.lastBrkId = 301;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[301]) return breakpoint(s, 4, 301, r0);
  case 4:
    r0 = (s.arg0).fields["func"] = (s.arg1);
    s.lastBrkId = 302;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[302]) return breakpoint(s, 5, 302, r0);
  case 5:
    r0 = (s.arg0).fields["delay"] = (s.arg2);
    s.lastBrkId = 303;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[303]) return breakpoint(s, 6, 303, r0);
  case 6:
    r0 = (s.arg0).fields["mode"] = (s.arg3);
    s.lastBrkId = 304;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[304]) return breakpoint(s, 7, 304, r0);
  case 7:
    r0 = pxsim_Array__push(globals._intervals___4602, s.arg0);
    s.lastBrkId = 305;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[305]) return breakpoint(s, 8, 305, r0);
  case 8:
    r0 = pxsim_pxtcore_mkAction(1, control_Interval_inline__P11146);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim.control.runInParallel(s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_Interval_constructor__P4606.info = {"start":283,"length":367,"line":15,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/base/interval.ts","functionName":"inline","argumentNames":["this","func","delay","mode"]}

function control_Interval_constructor__P4606_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_Interval_constructor__P4606, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function control_Interval_inline__P11146(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = control_Interval_work__P4604_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 25; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_Interval_inline__P11146.info = {"start":621,"length":17,"line":23,"column":34,"endLine":23,"endColumn":51,"fileName":"pxt_modules/base/interval.ts","functionName":"inline","argumentNames":[]}

function control_Interval_inline__P11146_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_Interval_inline__P11146, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function control_Interval_work__P4604(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_Interval__C4603_VT)) failedCast(r0);
    s.lastBrkId = 306;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[306]) return breakpoint(s, 13, 306, r0);
  case 13:
    r0 = s.arg0.fields["mode"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 12; continue; }
  case 1:
  case 2:
    s.lastBrkId = 307;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[307]) return breakpoint(s, 14, 307, r0);
  case 14:
    r0 = s.arg0.fields["delay"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 308;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[308]) return breakpoint(s, 15, 308, r0);
  case 15:
    s.tmp_3 = pause__P413_mk(s);
    r0 = s.arg0.fields["delay"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 26; s.pc = 16; return s.tmp_3;
  case 16:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 309;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[309]) return breakpoint(s, 17, 309, r0);
  case 17:
    r0 = s.arg0.fields["delay"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 310;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[310]) return breakpoint(s, 18, 310, r0);
  case 18:
    s.tmp_2 = if_func_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "func"), 1);
      s.callLocIdx = 27; s.pc = 19; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["func"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["func"], 1); s.callLocIdx = 27; s.pc = 19; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 27; s.pc = 19; return s.tmp_2;; }
     else { s.callLocIdx = 27; s.pc = 19; return s.tmp_2; }
    }
  case 19:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 311;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[311]) return breakpoint(s, 20, 311, r0);
  case 20:
    { step = 12; continue; }
  case 7:
    s.lastBrkId = 312;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[312]) return breakpoint(s, 21, 312, r0);
  case 21:
  case 8:
    s.lastBrkId = 313;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[313]) return breakpoint(s, 22, 313, r0);
  case 22:
    r0 = s.arg0.fields["delay"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 314;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[314]) return breakpoint(s, 23, 314, r0);
  case 23:
    s.tmp_2 = pause__P413_mk(s);
    r0 = s.arg0.fields["delay"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 28; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 315;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[315]) return breakpoint(s, 25, 315, r0);
  case 25:
    r0 = s.arg0.fields["delay"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 316;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[316]) return breakpoint(s, 26, 316, r0);
  case 26:
    s.tmp_2 = if_func_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "func"), 1);
      s.callLocIdx = 29; s.pc = 27; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["func"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["func"], 1); s.callLocIdx = 29; s.pc = 27; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 29; s.pc = 27; return s.tmp_2;; }
     else { s.callLocIdx = 29; s.pc = 27; return s.tmp_2; }
    }
  case 27:
    r0 = s.retval;
  case 9:
  case 10:
    { step = 8; continue; }
  case 11:
    s.lastBrkId = 317;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[317]) return breakpoint(s, 28, 317, r0);
  case 28:
  case 12:
    s.lastBrkId = 318;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[318]) return breakpoint(s, 29, 318, r0);
  case 29:
    r0 = pxsim_Array_.removeElement(globals._intervals___4602, s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_Interval_work__P4604.info = {"start":660,"length":823,"line":26,"column":8,"endLine":47,"endColumn":9,"fileName":"pxt_modules/base/interval.ts","functionName":"work","argumentNames":["this"]}

function control_Interval_work__P4604_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_Interval_work__P4604, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function dot_Random_constructor__P4469(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Random__C4464_VT)) failedCast(r0);
    s.tmp_0 = dot_Random_setSeed__P4474_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = 123456789;
    s.tmp_0.arg3 = 362436069;
    s.tmp_0.arg4 = 521288629;
    s.tmp_0.arg5 = 32;
    s.callLocIdx = 280; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Random_constructor__P4469.info = {"start":182,"length":76,"line":8,"column":8,"endLine":10,"endColumn":9,"fileName":"random.ts","functionName":"inline","argumentNames":["this","seed"]}

function dot_Random_constructor__P4469_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Random_constructor__P4469, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_Random_setSeed__P4474(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___9483 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Random__C4464_VT)) failedCast(r0);
    r0 = (s.arg1 != null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (s.arg1 >>> 0);
    { step = 2; continue; }
  case 1:
    r0 = pxsim.Math_.random();
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * 4294967295);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.floor(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >>> 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = (s.arg0).fields["w"] = (s.tmp_4);
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg2 >>> 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["x"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg3 >>> 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["y"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg4 >>> 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["z"] = (s.tmp_1);
    s.i___9483 = (0);
  case 3:
    r0 = (s.i___9483 < s.arg5);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_1 = dot_Random_next__P4475_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 284; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    r0 = (s.i___9483 + 1);
    s.i___9483 = (r0);
    { step = 3; continue; }
  case 4:
    r0 = s.arg0;
    return leave(s, r0)
  default: oops()
} } }
dot_Random_setSeed__P4474.info = {"start":1206,"length":459,"line":42,"column":8,"endLine":57,"endColumn":9,"fileName":"random.ts","functionName":"setSeed","argumentNames":["this","w","x","y","z","loopCount"]}

function dot_Random_setSeed__P4474_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Random_setSeed__P4474, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  i___9483: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function dot_Particle_init__P34789(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.pos___34794 = undefined;
    s.vel___34797 = undefined;
    s.color___34800 = undefined;
    s.ticks___34803 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__getAt(s.arg1, 0);
    s.pos___34794 = (r0);
    r0 = pxsim_Array__getAt(s.arg1, 1);
    s.vel___34797 = (r0);
    r0 = pxsim_Array__getAt(s.arg1, 2);
    s.color___34800 = (r0);
    r0 = pxsim_Array__getAt(s.arg1, 3);
    s.ticks___34803 = (r0);
    r0 = (s.arg0).fields["pos"] = (s.pos___34794);
    r0 = (s.arg0).fields["vel"] = (s.vel___34797);
    r0 = (s.arg0).fields["color"] = (s.color___34800);
    r0 = (s.arg0).fields["ticks"] = (s.ticks___34803);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Particle_init__P34789.info = {"start":205,"length":378,"line":7,"column":8,"endLine":18,"endColumn":9,"fileName":"particles.ts","functionName":"init","argumentNames":["particle","args"]}

function dot_Particle_init__P34789_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Particle_init__P34789, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  pos___34794: undefined,
  vel___34797: undefined,
  color___34800: undefined,
  ticks___34803: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_Particle_create__P34788(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_pxtcore_mkClassInstance(dot_Particle__C34787_VT);
    return leave(s, r0)
  default: oops()
} } }
dot_Particle_create__P34788.info = {"start":154,"length":42,"line":6,"column":8,"endLine":6,"endColumn":50,"fileName":"particles.ts","functionName":"create","argumentNames":[]}

function dot_Particle_create__P34788_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Particle_create__P34788, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function dot_Score_init__P9248(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.str___9253 = undefined;
    s.pos___9256 = undefined;
    s.vy___9259 = undefined;
    s.deathTick___9262 = undefined;
    s.color___9265 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__getAt(s.arg1, 0);
    s.str___9253 = (r0);
    r0 = pxsim_Array__getAt(s.arg1, 1);
    s.pos___9256 = (r0);
    r0 = pxsim_Array__getAt(s.arg1, 2);
    s.vy___9259 = (r0);
    r0 = pxsim_Array__getAt(s.arg1, 3);
    s.deathTick___9262 = (r0);
    r0 = pxsim_Array__getAt(s.arg1, 4);
    s.color___9265 = (r0);
    r0 = (s.arg0).fields["str"] = (s.str___9253);
    r0 = (s.arg0).fields["pos"] = (s.pos___9256);
    r0 = (s.arg0).fields["vy"] = (s.vy___9259);
    r0 = (s.arg0).fields["deathTick"] = (s.deathTick___9262);
    r0 = (s.arg0).fields["color"] = (s.color___9265);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Score_init__P9248.info = {"start":274,"length":451,"line":10,"column":8,"endLine":24,"endColumn":9,"fileName":"scores.ts","functionName":"init","argumentNames":["score","args"]}

function dot_Score_init__P9248_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Score_init__P9248, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  str___9253: undefined,
  pos___9256: undefined,
  vy___9259: undefined,
  deathTick___9262: undefined,
  color___9265: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_Score_create__P9247(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_pxtcore_mkClassInstance(dot_Score__C9246_VT);
    return leave(s, r0)
  default: oops()
} } }
dot_Score_create__P9247.info = {"start":226,"length":39,"line":9,"column":8,"endLine":9,"endColumn":47,"fileName":"scores.ts","functionName":"create","argumentNames":[]}

function dot_Score_create__P9247_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Score_create__P9247, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function dot_Pool_constructor__P4480(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Pool__C4477_VT)) failedCast(r0);
    r0 = (s.arg0).fields["factoryFn"] = (s.arg1);
    r0 = (s.arg0).fields["initFn"] = (s.arg2);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["active"] = (s.tmp_1);
    s.tmp_2 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["pool"] = (s.tmp_3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Pool_constructor__P4480.info = {"start":101,"length":115,"line":4,"column":8,"endLine":6,"endColumn":62,"fileName":"pool.ts","functionName":"inline","argumentNames":["this","factoryFn","initFn"]}

function dot_Pool_constructor__P4480_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Pool_constructor__P4480, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function dot_Input_constructor__P9056(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Input__C8999_VT)) failedCast(r0);
    r0 = (s.arg0).fields["condition"] = (s.arg1);
    r0 = (s.arg0).fields["_isPressed"] = (false);
    r0 = (s.arg0).fields["_justPressed"] = (false);
    r0 = (s.arg0).fields["_justReleased"] = (false);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Button__C8915_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Button_constructor__P8922_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = globals.A___2114;
    s.callLocIdx = 229; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = (s.arg0).fields["_A"] = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Button__C8915_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Button_constructor__P8922_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = globals.B___2115;
    s.callLocIdx = 230; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = (s.arg0).fields["_B"] = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Button__C8915_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Button_constructor__P8922_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = globals.up___2117;
    s.callLocIdx = 231; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = (s.arg0).fields["_Up"] = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Button__C8915_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Button_constructor__P8922_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = globals.down___2119;
    s.callLocIdx = 232; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    r0 = (s.arg0).fields["_Down"] = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Button__C8915_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Button_constructor__P8922_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = globals.left___2116;
    s.callLocIdx = 233; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    r0 = (s.arg0).fields["_Left"] = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(dot_Button__C8915_VT);
    s.tmp_0 = r0;
    s.tmp_1 = dot_Button_constructor__P8922_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = globals.right___2118;
    s.callLocIdx = 234; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    r0 = (s.arg0).fields["_Right"] = (s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Input_constructor__P9056.info = {"start":2181,"length":433,"line":80,"column":8,"endLine":87,"endColumn":9,"fileName":"input.ts","functionName":"inline","argumentNames":["this","condition"]}

function dot_Input_constructor__P9056_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Input_constructor__P9056, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function dot_Button_constructor__P8922(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Button__C8915_VT)) failedCast(r0);
    r0 = (s.arg0).fields["condition"] = (s.arg1);
    r0 = (s.arg0).fields["src"] = (s.arg2);
    r0 = (s.arg0).fields["_isPressed"] = (false);
    r0 = (s.arg0).fields["_justPressed"] = (false);
    r0 = (s.arg0).fields["_justReleased"] = (false);
    r0 = (s.arg0).fields["_block"] = (false);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Button_constructor__P8922.info = {"start":157,"length":81,"line":7,"column":8,"endLine":7,"endColumn":89,"fileName":"input.ts","functionName":"inline","argumentNames":["this","condition","src"]}

function dot_Button_constructor__P8922_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Button_constructor__P8922, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function image_scaledFont__P1980(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 609;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[609]) return breakpoint(s, 6, 609, r0);
  case 6:
    r0 = (s.arg1 | 0);
    s.arg1 = (r0);
    s.lastBrkId = 610;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[610]) return breakpoint(s, 7, 610, r0);
  case 7:
    r0 = (s.arg1 < 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 611;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[611]) return breakpoint(s, 8, 611, r0);
  case 8:
    r0 = s.arg0;
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 612;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[612]) return breakpoint(s, 9, 612, r0);
  case 9:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = s.arg0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 97; s.pc = 10; return s.tmp_4; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "charWidth", s.tmp_2);
    s.tmp_7 = if_charHeight_1_mk(s);
    s.tmp_7.arg0 = s.arg0;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "charHeight");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["charHeight"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["charHeight"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 98; s.pc = 11; return s.tmp_7; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 * s.arg1);
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "charHeight", s.tmp_5);
    s.tmp_9 = if_data_1_mk(s);
    s.tmp_9.arg0 = s.arg0;
    if (!s.tmp_9.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_9.arg0, "data");
    } else {
      s.tmp_9.fn = s.tmp_9.arg0.vtable.iface["data"];
      if (s.tmp_9.fn == null) { s.retval = s.tmp_9.arg0.fields["data"]; }
      else if (!s.tmp_9.fn.isGetter) { s.retval = bind(s.tmp_9); }
     else { s.callLocIdx = 99; s.pc = 12; return s.tmp_9; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "data", s.tmp_8);
    s.tmp_11 = if_multiplier_1_mk(s);
    s.tmp_11.arg0 = s.arg0;
    if (!s.tmp_11.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_11.arg0, "multiplier");
    } else {
      s.tmp_11.fn = s.tmp_11.arg0.vtable.iface["multiplier"];
      if (s.tmp_11.fn == null) { s.retval = s.tmp_11.arg0.fields["multiplier"]; }
      else if (!s.tmp_11.fn.isGetter) { s.retval = bind(s.tmp_11); }
     else { s.callLocIdx = 100; s.pc = 13; return s.tmp_11; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_10);
    if (!r0) { step = 3; continue; }
    s.tmp_12 = r0 = s.arg1;
    s.tmp_14 = if_multiplier_1_mk(s);
    s.tmp_14.arg0 = s.arg0;
    if (!s.tmp_14.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_14.arg0, "multiplier");
    } else {
      s.tmp_14.fn = s.tmp_14.arg0.vtable.iface["multiplier"];
      if (s.tmp_14.fn == null) { s.retval = s.tmp_14.arg0.fields["multiplier"]; }
      else if (!s.tmp_14.fn.isGetter) { s.retval = bind(s.tmp_14); }
     else { s.callLocIdx = 101; s.pc = 14; return s.tmp_14; }
    }
  case 14:
    r0 = s.retval;
    s.tmp_13 = r0;
    r0 = (s.tmp_12 * s.tmp_13);
    { step = 4; continue; }
  case 3:
    r0 = s.arg1;
  case 4:
    // jmp value (already in r0)
    s.tmp_15 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "multiplier", s.tmp_15);
    r0 = s.tmp_1;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
image_scaledFont__P1980.info = {"start":12096,"length":331,"line":150,"column":4,"endLine":160,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"scaledFont","argumentNames":["f","size"]}

function image_scaledFont__P1980_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: image_scaledFont__P1980, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_eventContext__P3003(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2020;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2020]) return breakpoint(s, 1, 2020, r0);
  case 1:
    s.tmp_0 = game_init__P5145_mk(s);
    s.tmp_0.arg0 = undefined;
    s.callLocIdx = 952; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2021;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2021]) return breakpoint(s, 3, 2021, r0);
  case 3:
    r0 = globals._scene___5137.fields["eventContext"];
    return leave(s, r0)
  default: oops()
} } }
game_eventContext__P3003.info = {"start":4442,"length":112,"line":136,"column":4,"endLine":139,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"eventContext","argumentNames":[]}

function game_eventContext__P3003_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_eventContext__P3003, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_init__P5145(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2022;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2022]) return breakpoint(s, 5, 2022, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals._scene___5137);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2023;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2023]) return breakpoint(s, 6, 2023, r0);
  case 6:
    r0 = pxsim_pxtcore_mkClassInstance(scene_Scene__C2844_VT);
    s.tmp_3 = r0;
    s.tmp_4 = scene_Scene_constructor__P2867_mk(s);
    s.tmp_4.arg0 = s.tmp_3;
    s.tmp_5 = control_pushEventContext__P409_mk(s);
    s.callLocIdx = 953; s.pc = 8; return s.tmp_5;
  case 8:
    r0 = s.retval;
    s.tmp_4.arg1 = r0;
    s.tmp_4.arg2 = globals._scene___5137;
    s.callLocIdx = 954; s.pc = 7; return s.tmp_4;
  case 7:
    r0 = s.retval;
    globals._scene___5137 = (s.tmp_3);
  case 3:
  case 4:
    s.lastBrkId = 2024;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2024]) return breakpoint(s, 9, 2024, r0);
  case 9:
    s.tmp_0 = scene_Scene_init__P2868_mk(s);
    s.tmp_0.arg0 = globals._scene___5137;
    s.callLocIdx = 955; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_init__P5145.info = {"start":4560,"length":194,"line":141,"column":4,"endLine":146,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"init","argumentNames":["forceNewScene"]}

function game_init__P5145_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_init__P5145, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function scene_Scene_init__P2868(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2844_VT)) failedCast(r0);
    s.lastBrkId = 1935;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1935]) return breakpoint(s, 4, 1935, r0);
  case 4:
    r0 = s.arg0.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1936;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1936]) return breakpoint(s, 5, 1936, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1937;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1937]) return breakpoint(s, 6, 1937, r0);
  case 6:
    s.tmp_1 = power_poke__P1930_mk(s);
    s.callLocIdx = 915; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 1938;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1938]) return breakpoint(s, 8, 1938, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["allSprites"] = (s.tmp_1);
    s.lastBrkId = 1939;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1939]) return breakpoint(s, 9, 1939, r0);
  case 9:
    r0 = (s.arg0).fields["spriteNextId"] = (0);
    s.lastBrkId = 1940;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1940]) return breakpoint(s, 10, 1940, r0);
  case 10:
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P11526);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 8;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 918; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 1944;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1944]) return breakpoint(s, 12, 1944, r0);
  case 12:
    s.tmp_0 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 13;
    s.tmp_0.arg2 = controller__moveSprites__P2134;
    s.callLocIdx = 919; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 1945;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1945]) return breakpoint(s, 14, 1945, r0);
  case 14:
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P11550);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 15;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 921; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 1948;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1948]) return breakpoint(s, 16, 1948, r0);
  case 16:
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P11563);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 55;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 925; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 1955;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1955]) return breakpoint(s, 18, 1955, r0);
  case 18:
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P11584);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 90;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 927; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    s.lastBrkId = 1958;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1958]) return breakpoint(s, 20, 1958, r0);
  case 20:
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P11592);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 150;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 931; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    s.lastBrkId = 1965;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1965]) return breakpoint(s, 22, 1965, r0);
  case 22:
    s.tmp_0 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 200;
    s.tmp_0.arg2 = control___screen_update__P1994;
    s.callLocIdx = 932; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    s.lastBrkId = 1966;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1966]) return breakpoint(s, 24, 1966, r0);
  case 24:
    s.tmp_0 = multiplayer_initServer__P3389_mk(s);
    s.callLocIdx = 933; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.lastBrkId = 1967;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1967]) return breakpoint(s, 26, 1967, r0);
  case 26:
    s.tmp_0 = multiplayer_initPlayerConnectionListeners__P3390_mk(s);
    s.callLocIdx = 934; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    s.lastBrkId = 1968;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1968]) return breakpoint(s, 28, 1968, r0);
  case 28:
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P11623);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_1.arg0 = globals.scene_Scene_initializers___2866;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 936; s.pc = 29; return s.tmp_1;
  case 29:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init__P2868.info = {"start":4432,"length":2572,"line":127,"column":8,"endLine":187,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"init","argumentNames":["this"]}

function scene_Scene_init__P2868_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init__P2868, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function scene_Scene_init_inline__P11526(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1941;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1941]) return breakpoint(s, 1, 1941, r0);
  case 1:
    s.tmp_0 = r0 = s.caps[0];
    r0 = s.tmp_0.fields["_millis"];
    s.tmp_2 = r0;
    r0 = s.caps[0].fields["eventContext"];
    r0 = r0.fields["deltaTimeMillis"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_millis"] = (s.tmp_1);
    s.lastBrkId = 1942;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1942]) return breakpoint(s, 2, 1942, r0);
  case 2:
    s.lastBrkId = 1943;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1943]) return breakpoint(s, 3, 1943, r0);
  case 3:
    s.tmp_0 = controller___update__P2166_mk(s);
    s.tmp_1 = control_EventContext_deltaTime__P400_mk(s);
    r0 = s.caps[0].fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 916; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 917; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P11526.info = {"start":4722,"length":217,"line":134,"column":72,"endLine":138,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P11526_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P11526, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_Scene_init_inline__P11550(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1946;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1946]) return breakpoint(s, 1, 1946, r0);
  case 1:
    s.lastBrkId = 1947;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1947]) return breakpoint(s, 2, 1947, r0);
  case 2:
    s.tmp_0 = PhysicsEngine__C2512_v4_2_mk(s);
    r0 = s.caps[0].fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = control_EventContext_deltaTime__P400_mk(s);
    r0 = s.caps[0].fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 920; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2512_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.move;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P11550.info = {"start":5234,"length":159,"line":143,"column":69,"endLine":146,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P11550_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P11550, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function scene_Scene_init_inline__P11563(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.dt___11564 = undefined;
    s.s___11572 = undefined;
    s.unnamed1330___U2 = undefined;
    s.unnamed1331___U3 = undefined;
    s.lastBrkId = 1949;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1949]) return breakpoint(s, 3, 1949, r0);
  case 3:
    s.tmp_0 = control_EventContext_deltaTime__P400_mk(s);
    r0 = s.caps[0].fields["eventContext"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 922; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.dt___11564 = (r0);
    s.lastBrkId = 1950;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1950]) return breakpoint(s, 5, 1950, r0);
  case 5:
    s.tmp_0 = scene_Camera_update__P2799_mk(s);
    r0 = s.caps[0].fields["camera"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 923; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 1951;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1951]) return breakpoint(s, 7, 1951, r0);
  case 7:
    s.s___11572 = (undefined);
    r0 = s.caps[0].fields["allSprites"];
    s.unnamed1330___U2 = (r0);
    s.unnamed1331___U3 = (0);
    s.lastBrkId = 1952;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1952]) return breakpoint(s, 8, 1952, r0);
  case 8:
  case 1:
    s.tmp_0 = r0 = s.unnamed1331___U3;
    r0 = pxsim_Array__length(s.unnamed1330___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1330___U2, s.unnamed1331___U3);
    s.s___11572 = (r0);
    s.lastBrkId = 1953;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1953]) return breakpoint(s, 9, 1953, r0);
  case 9:
    s.lastBrkId = 1954;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1954]) return breakpoint(s, 10, 1954, r0);
  case 10:
    s.tmp_2 = if___update_3_mk(s);
    s.tmp_2.arg0 = s.s___11572;
    r0 = s.caps[0].fields["camera"];
    s.tmp_2.arg1 = r0;
    s.tmp_2.arg2 = s.dt___11564;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "__update"), 3);
      s.callLocIdx = 924; s.pc = 11; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["__update"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["__update"], 3); s.callLocIdx = 924; s.pc = 11; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 924; s.pc = 11; return s.tmp_2;; }
     else { s.callLocIdx = 924; s.pc = 11; return s.tmp_2; }
    }
  case 11:
    r0 = s.retval;
    r0 = (s.unnamed1331___U3 + 1);
    s.unnamed1331___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed1330___U2 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P11563.info = {"start":5582,"length":214,"line":152,"column":79,"endLine":158,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P11563_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P11563, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  dt___11564: undefined,
  s___11572: undefined,
  unnamed1330___U2: undefined,
  unnamed1331___U3: undefined,
} }





function scene_Scene_init_inline__P11584(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1956;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1956]) return breakpoint(s, 1, 1956, r0);
  case 1:
    s.lastBrkId = 1957;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1957]) return breakpoint(s, 2, 1957, r0);
  case 2:
    s.tmp_0 = scene_Scene_render__P2873_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 926; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P11584.info = {"start":5937,"length":109,"line":163,"column":76,"endLine":166,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P11584_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P11584, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_Scene_init_inline__P11592(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1959;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1959]) return breakpoint(s, 7, 1959, r0);
  case 7:
    s.tmp_0 = r0 = globals.stats___2969;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = globals.control_EventContext_onStats___398;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1960;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1960]) return breakpoint(s, 8, 1960, r0);
  case 8:
    s.tmp_2 = lambda_2_mk(s);
    s.tmp_2.argL = globals.control_EventContext_onStats___398;
    if ((globals.control_EventContext_lastStats___397) && (globals.control_EventContext_lastStats___397).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(globals.control_EventContext_lastStats___397);
    checkResumeConsumed();
    return;
    } else { s.retval = (globals.control_EventContext_lastStats___397) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.caps[0].fields["allSprites"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__length(s.tmp_8);
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 11);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 11:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(" sprites:", s.tmp_6);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 12);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 12:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2.arg0 = r0;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.callLocIdx = 928; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 1961;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1961]) return breakpoint(s, 13, 1961, r0);
  case 13:
    r0 = pxsim_numops_toBoolDecr(globals.debug___2968);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1962;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1962]) return breakpoint(s, 14, 1962, r0);
  case 14:
    s.tmp_0 = PhysicsEngine__C2512_v3_1_mk(s);
    r0 = s.caps[0].fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2512_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.draw;
    s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 1963;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1963]) return breakpoint(s, 16, 1963, r0);
  case 16:
    s.tmp_0 = game_consoleOverlay_draw__P3128_mk(s);
    s.callLocIdx = 929; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 1964;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1964]) return breakpoint(s, 18, 1964, r0);
  case 18:
    s.tmp_0 = power_checkDeepSleep__P1931_mk(s);
    s.callLocIdx = 930; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P11592.info = {"start":6163,"length":504,"line":168,"column":80,"endLine":180,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P11592_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P11592, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
} }





function scene_Scene_init_inline__P11623(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.arg0;
    s.tmp_0.arg0 = s.caps[0];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 935; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P11623.info = {"start":6980,"length":12,"line":186,"column":39,"endLine":186,"endColumn":51,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":["f"]}

function scene_Scene_init_inline__P11623_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P11623, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function multiplayer_initPlayerConnectionListeners__P3390(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___11626 = undefined;
    s.lastBrkId = 2582;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2582]) return breakpoint(s, 3, 2582, r0);
  case 3:
    s.p___11626 = (1);
    s.lastBrkId = 2583;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2583]) return breakpoint(s, 4, 2583, r0);
  case 4:
  case 1:
    s.lastBrkId = 2584;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2584]) return breakpoint(s, 5, 2584, r0);
  case 5:
    r0 = (s.p___11626 <= 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2585;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2585]) return breakpoint(s, 6, 2585, r0);
  case 6:
    s.tmp_1 = multiplayer_registerPlayerConnectionListeners__P5594_mk(s);
    s.tmp_1.arg0 = s.p___11626;
    s.callLocIdx = 1287; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2586;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2586]) return breakpoint(s, 8, 2586, r0);
  case 8:
    r0 = (s.p___11626 + 1);
    s.p___11626 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
multiplayer_initPlayerConnectionListeners__P3390.info = {"start":1324,"length":154,"line":39,"column":4,"endLine":43,"endColumn":5,"fileName":"pxt_modules/game/multiplayer.ts","functionName":"initPlayerConnectionListeners","argumentNames":[]}

function multiplayer_initPlayerConnectionListeners__P3390_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: multiplayer_initPlayerConnectionListeners__P3390, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  p___11626: undefined,
} }





function multiplayer_registerPlayerConnectionListeners__P5594(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2587;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2587]) return breakpoint(s, 1, 2587, r0);
  case 1:
    r0 = pxsim_pxtcore_mkAction(1, multiplayer_registerPlayerConnectionListeners_inline__P11638);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_onEvent__P391_mk(s);
    s.tmp_1.arg0 = 3241;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.tmp_0;
    s.tmp_1.arg3 = 16;
    s.callLocIdx = 1289; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2588;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2588]) return breakpoint(s, 3, 2588, r0);
  case 3:
    r0 = pxsim_pxtcore_mkAction(1, multiplayer_registerPlayerConnectionListeners_inline__P11644);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_onEvent__P391_mk(s);
    s.tmp_1.arg0 = 3242;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.tmp_0;
    s.tmp_1.arg3 = 16;
    s.callLocIdx = 1291; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
multiplayer_registerPlayerConnectionListeners__P5594.info = {"start":1484,"length":415,"line":45,"column":4,"endLine":56,"endColumn":5,"fileName":"pxt_modules/game/multiplayer.ts","functionName":"registerPlayerConnectionListeners","argumentNames":["playerNumber"]}

function multiplayer_registerPlayerConnectionListeners__P5594_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: multiplayer_registerPlayerConnectionListeners__P5594, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function multiplayer_registerPlayerConnectionListeners_inline__P11638(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = multiplayer_receiveConnectionChangedEvent__P5595_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1288; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
multiplayer_registerPlayerConnectionListeners_inline__P11638.info = {"start":1656,"length":55,"line":49,"column":12,"endLine":49,"endColumn":67,"fileName":"pxt_modules/game/multiplayer.ts","functionName":"inline","argumentNames":[]}

function multiplayer_registerPlayerConnectionListeners_inline__P11638_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: multiplayer_registerPlayerConnectionListeners_inline__P11638, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function multiplayer_registerPlayerConnectionListeners_inline__P11644(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = multiplayer_receiveConnectionChangedEvent__P5595_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1290; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
multiplayer_registerPlayerConnectionListeners_inline__P11644.info = {"start":1826,"length":56,"line":54,"column":12,"endLine":54,"endColumn":68,"fileName":"pxt_modules/game/multiplayer.ts","functionName":"inline","argumentNames":[]}

function multiplayer_registerPlayerConnectionListeners_inline__P11644_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: multiplayer_registerPlayerConnectionListeners_inline__P11644, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function multiplayer_receiveConnectionChangedEvent__P5595(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.c___11649 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2589;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2589]) return breakpoint(s, 8, 2589, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 1:
    s.lastBrkId = 2590;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2590]) return breakpoint(s, 9, 2590, r0);
  case 9:
    s.c___11649 = (globals.player1___2124);
    s.lastBrkId = 2591;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2591]) return breakpoint(s, 10, 2591, r0);
  case 10:
    { step = 5; continue; }
  case 2:
    s.lastBrkId = 2592;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2592]) return breakpoint(s, 11, 2592, r0);
  case 11:
    s.c___11649 = (globals.player2___2121);
    s.lastBrkId = 2593;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2593]) return breakpoint(s, 12, 2593, r0);
  case 12:
    { step = 5; continue; }
  case 3:
    s.lastBrkId = 2594;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2594]) return breakpoint(s, 13, 2594, r0);
  case 13:
    s.c___11649 = (globals.player3___2122);
    s.lastBrkId = 2595;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2595]) return breakpoint(s, 14, 2595, r0);
  case 14:
    { step = 5; continue; }
  case 4:
    s.lastBrkId = 2596;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2596]) return breakpoint(s, 15, 2596, r0);
  case 15:
    s.c___11649 = (globals.player4___2123);
    s.lastBrkId = 2597;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2597]) return breakpoint(s, 16, 2597, r0);
  case 16:
  case 5:
    s.lastBrkId = 2598;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2598]) return breakpoint(s, 17, 2598, r0);
  case 17:
    r0 = pxsim_numops_toBoolDecr(s.c___11649);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 2599;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2599]) return breakpoint(s, 18, 2599, r0);
  case 18:
    s.tmp_0 = controller_Controller_connected__P2157_mk(s);
    s.tmp_0.arg0 = s.c___11649;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1292; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
multiplayer_receiveConnectionChangedEvent__P5595.info = {"start":1905,"length":552,"line":58,"column":4,"endLine":76,"endColumn":5,"fileName":"pxt_modules/game/multiplayer.ts","functionName":"receiveConnectionChangedEvent","argumentNames":["playerNumber","connected"]}

function multiplayer_receiveConnectionChangedEvent__P5595_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: multiplayer_receiveConnectionChangedEvent__P5595, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  c___11649: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Controller_connected__P2157(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2135_VT)) failedCast(r0);
    s.lastBrkId = 829;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[829]) return breakpoint(s, 5, 829, r0);
  case 5:
    r0 = s.arg0.fields["_connected"];
    s.tmp_1 = r0;
    r0 = (s.arg1 != s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 830;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[830]) return breakpoint(s, 6, 830, r0);
  case 6:
    r0 = (s.arg0).fields["_connected"] = (s.arg1);
    s.lastBrkId = 831;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[831]) return breakpoint(s, 7, 831, r0);
  case 7:
    r0 = s.arg0.fields["_connected"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 1;
    { step = 2; continue; }
  case 1:
    r0 = 2;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_3 = controller_Controller_id__P2142_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 173; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim.control.raiseEvent(s.tmp_2, s.tmp_1);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller_connected__P2157.info = {"start":7796,"length":261,"line":254,"column":8,"endLine":259,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"connected","argumentNames":["this","value"]}

function controller_Controller_connected__P2157_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_connected__P2157, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller__player1__P2129(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 794;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[794]) return breakpoint(s, 5, 794, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals._players___4853);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__getAt(globals._players___4853, 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 795;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[795]) return breakpoint(s, 6, 795, r0);
  case 6:
    r0 = pxsim_pxtcore_mkClassInstance(controller_Controller__C2135_VT);
    s.tmp_5 = r0;
    r0 = pxsim_Array__mk();
    s.tmp_6 = r0;
    r0 = pxsim_Array__push(s.tmp_6, globals.left___2116);
    r0 = pxsim_Array__push(s.tmp_6, globals.up___2117);
    r0 = pxsim_Array__push(s.tmp_6, globals.right___2118);
    r0 = pxsim_Array__push(s.tmp_6, globals.down___2119);
    r0 = pxsim_Array__push(s.tmp_6, globals.A___2114);
    r0 = pxsim_Array__push(s.tmp_6, globals.B___2115);
    r0 = pxsim_Array__push(s.tmp_6, globals.menu___2120);
    s.tmp_7 = controller_Controller_constructor__P2139_mk(s);
    s.tmp_7.arg0 = s.tmp_5;
    s.tmp_7.arg1 = 1;
    s.tmp_7.arg2 = s.tmp_6;
    s.callLocIdx = 159; s.pc = 7; return s.tmp_7;
  case 7:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 796;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[796]) return breakpoint(s, 8, 796, r0);
  case 8:
    r0 = pxsim_Array__getAt(globals._players___4853, 0);
    return leave(s, r0)
  default: oops()
} } }
controller__player1__P2129.info = {"start":1381,"length":258,"line":47,"column":4,"endLine":51,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"_player1","argumentNames":[]}

function controller__player1__P2129_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller__player1__P2129, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
} }





function controller_Controller_constructor__P2139(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.leftId___11705 = undefined;
    s.i___11713 = undefined;
    s.i___11731 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2135_VT)) failedCast(r0);
    s.lastBrkId = 801;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[801]) return breakpoint(s, 7, 801, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.control.allocateNotifyEvent();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_id"] = (s.tmp_1);
    s.lastBrkId = 802;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[802]) return breakpoint(s, 8, 802, r0);
  case 8:
    r0 = (s.arg0).fields["_connected"] = (false);
    s.lastBrkId = 803;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[803]) return breakpoint(s, 9, 803, r0);
  case 9:
    r0 = (s.arg0).fields["playerIndex"] = (s.arg1);
    s.lastBrkId = 804;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[804]) return breakpoint(s, 10, 804, r0);
  case 10:
    r0 = (s.arg0).fields["analog"] = (false);
    s.lastBrkId = 805;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[805]) return breakpoint(s, 11, 805, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 806;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[806]) return breakpoint(s, 12, 806, r0);
  case 12:
    r0 = (s.arg0).fields["buttons"] = (s.arg2);
    { step = 4; continue; }
  case 1:
    s.lastBrkId = 807;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[807]) return breakpoint(s, 13, 807, r0);
  case 13:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["buttons"] = (s.tmp_1);
    s.lastBrkId = 808;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[808]) return breakpoint(s, 14, 808, r0);
  case 14:
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * 7);
    s.tmp_0 = r0;
    r0 = (1 + s.tmp_0);
    s.leftId___11705 = (r0);
    s.lastBrkId = 809;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[809]) return breakpoint(s, 15, 809, r0);
  case 15:
    s.i___11713 = (0);
    s.lastBrkId = 810;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[810]) return breakpoint(s, 16, 810, r0);
  case 16:
  case 2:
    s.lastBrkId = 811;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[811]) return breakpoint(s, 17, 811, r0);
  case 17:
    r0 = (s.i___11713 < 7);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 812;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[812]) return breakpoint(s, 18, 812, r0);
  case 18:
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C2190_VT);
    s.tmp_1 = r0;
    s.tmp_2 = controller_Button_constructor__P2196_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    r0 = (s.leftId___11705 + s.i___11713);
    s.tmp_2.arg1 = r0;
    s.tmp_2.arg2 = -1;
    s.callLocIdx = 165; s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
    r0 = s.arg0.fields["buttons"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_1);
    s.lastBrkId = 813;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[813]) return breakpoint(s, 20, 813, r0);
  case 20:
    r0 = (s.i___11713 + 1);
    s.i___11713 = (r0);
    { step = 2; continue; }
  case 3:
  case 4:
    s.lastBrkId = 814;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[814]) return breakpoint(s, 21, 814, r0);
  case 21:
    s.i___11731 = (0);
    s.lastBrkId = 815;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[815]) return breakpoint(s, 22, 815, r0);
  case 22:
  case 5:
    s.lastBrkId = 816;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[816]) return breakpoint(s, 23, 816, r0);
  case 23:
    s.tmp_1 = r0 = s.i___11731;
    r0 = s.arg0.fields["buttons"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 817;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[817]) return breakpoint(s, 24, 817, r0);
  case 24:
    r0 = s.arg0.fields["buttons"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.i___11731);
    s.tmp_4 = r0;
    r0 = (s.tmp_4).fields["_owner"] = (s.arg0);
    s.lastBrkId = 818;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[818]) return breakpoint(s, 25, 818, r0);
  case 25:
    r0 = (s.i___11731 + 1);
    s.i___11731 = (r0);
    { step = 5; continue; }
  case 6:
    s.lastBrkId = 819;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[819]) return breakpoint(s, 26, 819, r0);
  case 26:
    s.tmp_0 = controller_addController__P4917_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 166; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller_constructor__P2139.info = {"start":2452,"length":696,"line":82,"column":8,"endLine":99,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["this","playerIndex","buttons"]}

function controller_Controller_constructor__P2139_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_constructor__P2139, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  leftId___11705: undefined,
  i___11713: undefined,
  i___11731: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function controller_addController__P4917(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 791;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[791]) return breakpoint(s, 3, 791, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals._players___4853);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 792;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[792]) return breakpoint(s, 4, 792, r0);
  case 4:
    r0 = pxsim_Array__mk();
    globals._players___4853 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 793;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[793]) return breakpoint(s, 5, 793, r0);
  case 5:
    s.tmp_0 = r0 = globals._players___4853;
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_1, s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_addController__P4917.info = {"start":1218,"length":157,"line":40,"column":4,"endLine":45,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"addController","argumentNames":["ctrl"]}

function controller_addController__P4917_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_addController__P4917, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function multiplayer_initServer__P3389(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2578;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2578]) return breakpoint(s, 3, 2578, r0);
  case 3:
    r0 = pxsim.multiplayer.getOrigin();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === "server");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2579;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2579]) return breakpoint(s, 4, 2579, r0);
  case 4:
    s.tmp_2 = control_EventContext_registerFrameHandler__P403_mk(s);
    s.tmp_3 = game_eventContext__P3003_mk(s);
    s.callLocIdx = 1285; s.pc = 6; return s.tmp_3;
  case 6:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 210;
    s.tmp_2.arg2 = multiplayer_initServer_inline__P11788;
    s.callLocIdx = 1286; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
multiplayer_initServer__P3389.info = {"start":1011,"length":307,"line":29,"column":4,"endLine":37,"endColumn":5,"fileName":"pxt_modules/game/multiplayer.ts","functionName":"initServer","argumentNames":[]}

function multiplayer_initServer__P3389_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: multiplayer_initServer__P3389, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function multiplayer_initServer_inline__P11788(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2580;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2580]) return breakpoint(s, 3, 2580, r0);
  case 3:
    r0 = pxsim.multiplayer.getOrigin();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === "server");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2581;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2581]) return breakpoint(s, 4, 2581, r0);
  case 4:
    r0 = pxsim.multiplayer.postImage(globals.screen___2033);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
multiplayer_initServer_inline__P11788.info = {"start":1175,"length":126,"line":31,"column":93,"endLine":35,"endColumn":13,"fileName":"pxt_modules/game/multiplayer.ts","functionName":"inline","argumentNames":[]}

function multiplayer_initServer_inline__P11788_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: multiplayer_initServer_inline__P11788, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function game_consoleOverlay_draw__P3128(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.height___11841 = undefined;
    s.top___11846 = undefined;
    s.i___11852 = undefined;
    s.t___11865 = undefined;
    s.tOff___11872 = undefined;
    s.tab___11874 = undefined;
    s.unnamed1334___U6 = undefined;
    s.unnamed1335___U7 = undefined;
    s.padding___11876 = undefined;
    s.lastBrkId = 2287;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2287]) return breakpoint(s, 14, 2287, r0);
  case 14:
    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___5437);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = scene_systemMenu_isVisible__P3109_mk(s);
    s.callLocIdx = 1138; s.pc = 15; return s.tmp_2;
  case 15:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2288;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2288]) return breakpoint(s, 16, 2288, r0);
  case 16:
    { step = 13; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2289;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2289]) return breakpoint(s, 17, 2289, r0);
  case 17:
    s.tmp_5 = if_charHeight_1_mk(s);
    s.tmp_5.arg0 = globals.consoleFont___5445;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "charHeight");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["charHeight"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["charHeight"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1139; s.pc = 18; return s.tmp_5; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 2);
    s.height___11841 = (r0);
    s.lastBrkId = 2290;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2290]) return breakpoint(s, 19, 2290, r0);
  case 19:
    r0 = pxsim_numops_toBoolDecr(globals.stats___2969);
    if (!r0) { step = 5; continue; }
    r0 = s.height___11841;
    { step = 6; continue; }
  case 5:
    r0 = 0;
  case 6:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (2 + s.tmp_0);
    s.top___11846 = (r0);
    s.lastBrkId = 2291;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2291]) return breakpoint(s, 20, 2291, r0);
  case 20:
    s.i___11852 = (0);
    s.lastBrkId = 2292;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2292]) return breakpoint(s, 21, 2292, r0);
  case 21:
  case 7:
    s.lastBrkId = 2293;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2293]) return breakpoint(s, 22, 2293, r0);
  case 22:
    s.tmp_1 = r0 = s.i___11852;
    r0 = pxsim_Array__length(globals.consoleStrings___5437);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 2294;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2294]) return breakpoint(s, 23, 2294, r0);
  case 23:
    r0 = pxsim_Array__getAt(globals.consoleStrings___5437, s.i___11852);
    s.tmp_5 = r0;
    r0 = pxsim_String_.indexOf(s.tmp_5, "\t", undefined);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >= 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 2295;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2295]) return breakpoint(s, 24, 2295, r0);
  case 24:
    s.tmp_6 = helpers_stringSplit__P122_mk(s);
    r0 = pxsim_Array__getAt(globals.consoleStrings___5437, s.i___11852);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = "\t";
    s.tmp_6.arg2 = undefined;
    s.callLocIdx = 1140; s.pc = 25; return s.tmp_6;
  case 25:
    r0 = s.retval;
    s.t___11865 = (r0);
    s.lastBrkId = 2296;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2296]) return breakpoint(s, 26, 2296, r0);
  case 26:
    s.tOff___11872 = (0);
    s.lastBrkId = 2297;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2297]) return breakpoint(s, 27, 2297, r0);
  case 27:
    s.tab___11874 = (undefined);
    s.unnamed1334___U6 = (s.t___11865);
    s.unnamed1335___U7 = (0);
    s.lastBrkId = 2298;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2298]) return breakpoint(s, 28, 2298, r0);
  case 28:
  case 8:
    s.tmp_0 = r0 = s.unnamed1335___U7;
    r0 = pxsim_Array__length(s.unnamed1334___U6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 9; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1334___U6, s.unnamed1335___U7);
    s.tab___11874 = (r0);
    s.lastBrkId = 2299;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2299]) return breakpoint(s, 29, 2299, r0);
  case 29:
    s.lastBrkId = 2300;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2300]) return breakpoint(s, 30, 2300, r0);
  case 30:
    s.tmp_2 = r0 = globals.tabSize___5439;
    s.tmp_5 = r0 = s.tOff___11872;
    r0 = pxsim_String_.length(s.tab___11874);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 % globals.tabSize___5439);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.padding___11876 = (r0);
    s.lastBrkId = 2301;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2301]) return breakpoint(s, 31, 2301, r0);
  case 31:
    s.tmp_0 = helpers_imagePrint__P1991_mk(s);
    s.tmp_0.arg0 = globals.screen___2033;
    s.tmp_0.arg1 = s.tab___11874;
    s.tmp_2 = r0 = s.tOff___11872;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = globals.consoleFont___5445;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 1141; s.pc = 33; return s.tmp_4; }
    }
  case 33:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 * s.tmp_3);
    s.tmp_1 = r0;
    r0 = (4 + s.tmp_1);
    s.tmp_0.arg2 = r0;
    s.tmp_5 = r0 = s.top___11846;
    r0 = (s.i___11852 * s.height___11841);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = globals.consoleColor___5436;
    s.tmp_0.arg5 = globals.consoleFont___5445;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1142; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.lastBrkId = 2302;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2302]) return breakpoint(s, 34, 2302, r0);
  case 34:
    s.tmp_0 = r0 = s.tOff___11872;
    r0 = pxsim_String_.length(s.tab___11874);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.padding___11876);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.tOff___11872 = (r0);
    r0 = (s.unnamed1335___U7 + 1);
    s.unnamed1335___U7 = (r0);
    { step = 8; continue; }
  case 9:
    s.unnamed1334___U6 = (undefined);
    { step = 11; continue; }
  case 10:
    s.lastBrkId = 2303;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2303]) return breakpoint(s, 35, 2303, r0);
  case 35:
    s.tmp_0 = helpers_imagePrint__P1991_mk(s);
    s.tmp_0.arg0 = globals.screen___2033;
    r0 = pxsim_Array__getAt(globals.consoleStrings___5437, s.i___11852);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 4;
    s.tmp_1 = r0 = s.top___11846;
    r0 = (s.i___11852 * s.height___11841);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = globals.consoleColor___5436;
    s.tmp_0.arg5 = globals.consoleFont___5445;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1143; s.pc = 36; return s.tmp_0;
  case 36:
    r0 = s.retval;
  case 11:
    s.lastBrkId = 2304;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2304]) return breakpoint(s, 37, 2304, r0);
  case 37:
    r0 = (s.i___11852 + 1);
    s.i___11852 = (r0);
    { step = 7; continue; }
  case 12:
  case 13:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_draw__P3128.info = {"start":1364,"length":859,"line":44,"column":4,"endLine":61,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"draw","argumentNames":[]}

function game_consoleOverlay_draw__P3128_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_draw__P3128, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  height___11841: undefined,
  top___11846: undefined,
  i___11852: undefined,
  t___11865: undefined,
  tOff___11872: undefined,
  tab___11874: undefined,
  unnamed1334___U6: undefined,
  unnamed1335___U7: undefined,
  padding___11876: undefined,
} }





function scene_systemMenu_isVisible__P3109(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2245;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2245]) return breakpoint(s, 1, 2245, r0);
  case 1:
    r0 = pxsim_numops_toBoolDecr(globals.instance___5391);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_isVisible__P3109.info = {"start":13170,"length":62,"line":395,"column":4,"endLine":397,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"isVisible","argumentNames":[]}

function scene_systemMenu_isVisible__P3109_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_isVisible__P3109, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function helpers_imagePrint__P1991(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.x0___11948 = undefined;
    s.cp___11950 = undefined;
    s.mult___11951 = undefined;
    s.dataW___11956 = undefined;
    s.dataH___11962 = undefined;
    s.byteHeight___11968 = undefined;
    s.charSize___11974 = undefined;
    s.dataSize___11978 = undefined;
    s.fontdata___11982 = undefined;
    s.lastchar___11985 = undefined;
    s.imgBuf___11992 = undefined;
    s.xOffset___12016 = undefined;
    s.yOffset___12017 = undefined;
    s.ch___12032 = undefined;
    s.l___12051 = undefined;
    s.r___12052 = undefined;
    s.off___12054 = undefined;
    s.guess___12055 = undefined;
    s.m___12074 = undefined;
    s.v___12083 = undefined;
    s.i___12139 = undefined;
    s.j___12144 = undefined;
    s.mask___12145 = undefined;
    s.c___12146 = undefined;
    s.n___12163 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 619;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[619]) return breakpoint(s, 39, 619, r0);
  case 39:
    r0 = (s.arg2 | 0);
    s.arg2 = (r0);
    s.lastBrkId = 620;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[620]) return breakpoint(s, 40, 620, r0);
  case 40:
    r0 = (s.arg3 | 0);
    s.arg3 = (r0);
    s.lastBrkId = 621;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[621]) return breakpoint(s, 41, 621, r0);
  case 41:
    r0 = pxsim_numops_toBoolDecr(s.arg5);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 622;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[622]) return breakpoint(s, 42, 622, r0);
  case 42:
    s.tmp_2 = image_getFontForText__P1978_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 105; s.pc = 43; return s.tmp_2;
  case 43:
    r0 = s.retval;
    s.arg5 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 623;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[623]) return breakpoint(s, 44, 623, r0);
  case 44:
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 624;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[624]) return breakpoint(s, 45, 624, r0);
  case 45:
    s.arg4 = (1);
  case 3:
  case 4:
    s.lastBrkId = 625;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[625]) return breakpoint(s, 46, 625, r0);
  case 46:
    s.x0___11948 = (s.arg2);
    s.lastBrkId = 626;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[626]) return breakpoint(s, 47, 626, r0);
  case 47:
    s.cp___11950 = (0);
    s.lastBrkId = 627;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[627]) return breakpoint(s, 48, 627, r0);
  case 48:
    s.tmp_1 = if_multiplier_1_mk(s);
    s.tmp_1.arg0 = s.arg5;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "multiplier");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["multiplier"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["multiplier"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 106; s.pc = 49; return s.tmp_1; }
    }
  case 49:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_2 = if_multiplier_1_mk(s);
    s.tmp_2.arg0 = s.arg5;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "multiplier");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["multiplier"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["multiplier"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 107; s.pc = 50; return s.tmp_2; }
    }
  case 50:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    r0 = 1;
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.mult___11951 = (s.tmp_3);
    s.lastBrkId = 628;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[628]) return breakpoint(s, 51, 628, r0);
  case 51:
    s.tmp_1 = if_charWidth_1_mk(s);
    s.tmp_1.arg0 = s.arg5;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "charWidth");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["charWidth"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["charWidth"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 108; s.pc = 52; return s.tmp_1; }
    }
  case 52:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.mult___11951);
    s.dataW___11956 = (r0);
    s.lastBrkId = 629;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[629]) return breakpoint(s, 53, 629, r0);
  case 53:
    s.tmp_1 = if_charHeight_1_mk(s);
    s.tmp_1.arg0 = s.arg5;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "charHeight");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["charHeight"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["charHeight"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 109; s.pc = 54; return s.tmp_1; }
    }
  case 54:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.mult___11951);
    s.dataH___11962 = (r0);
    s.lastBrkId = 630;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[630]) return breakpoint(s, 55, 630, r0);
  case 55:
    r0 = (s.dataH___11962 + 7);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 3);
    s.byteHeight___11968 = (r0);
    s.lastBrkId = 631;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[631]) return breakpoint(s, 56, 631, r0);
  case 56:
    r0 = (s.byteHeight___11968 * s.dataW___11956);
    s.charSize___11974 = (r0);
    s.lastBrkId = 632;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[632]) return breakpoint(s, 57, 632, r0);
  case 57:
    r0 = (2 + s.charSize___11974);
    s.dataSize___11978 = (r0);
    s.lastBrkId = 633;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[633]) return breakpoint(s, 58, 633, r0);
  case 58:
    s.tmp_0 = if_data_1_mk(s);
    s.tmp_0.arg0 = s.arg5;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "data");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["data"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["data"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 110; s.pc = 59; return s.tmp_0; }
    }
  case 59:
    r0 = s.retval;
    s.fontdata___11982 = (r0);
    s.lastBrkId = 634;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[634]) return breakpoint(s, 60, 634, r0);
  case 60:
    r0 = pxsim.BufferMethods.length(s.fontdata___11982);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_1, s.dataSize___11978);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    s.lastchar___11985 = (r0);
    s.lastBrkId = 635;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[635]) return breakpoint(s, 61, 635, r0);
  case 61:
    r0 = (s.mult___11951 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 636;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[636]) return breakpoint(s, 62, 636, r0);
  case 62:
    r0 = (8 + s.charSize___11974);
    s.tmp_1 = r0;
    r0 = pxsim.control.createBuffer(s.tmp_1);
    s.imgBuf___11992 = (r0);
    s.lastBrkId = 637;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[637]) return breakpoint(s, 63, 637, r0);
  case 63:
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___11992, 0, 135);
    s.lastBrkId = 638;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[638]) return breakpoint(s, 64, 638, r0);
  case 64:
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___11992, 1, 1);
    s.lastBrkId = 639;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[639]) return breakpoint(s, 65, 639, r0);
  case 65:
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___11992, 2, s.dataW___11956);
    s.lastBrkId = 640;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[640]) return breakpoint(s, 66, 640, r0);
  case 66:
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___11992, 4, s.dataH___11962);
  case 7:
  case 8:
    s.lastBrkId = 641;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[641]) return breakpoint(s, 67, 641, r0);
  case 67:
  case 9:
    s.lastBrkId = 642;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[642]) return breakpoint(s, 68, 642, r0);
  case 68:
    s.tmp_1 = r0 = s.cp___11950;
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 38; continue; }
    s.lastBrkId = 643;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[643]) return breakpoint(s, 69, 643, r0);
  case 69:
    s.xOffset___12016 = (0);
    s.lastBrkId = 644;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[644]) return breakpoint(s, 70, 644, r0);
  case 70:
    s.yOffset___12017 = (0);
    s.lastBrkId = 645;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[645]) return breakpoint(s, 71, 645, r0);
  case 71:
    s.tmp_0 = r0 = s.arg6;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    s.tmp_1 = r0 = s.cp___11950;
    r0 = pxsim_Array__length(s.arg6);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
  case 11:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 646;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[646]) return breakpoint(s, 72, 646, r0);
  case 72:
    s.tmp_4 = if_xOffset_1_mk(s);
    r0 = pxsim_Array__getAt(s.arg6, s.cp___11950);
    s.tmp_4.arg0 = r0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "xOffset");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["xOffset"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["xOffset"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 111; s.pc = 73; return s.tmp_4; }
    }
  case 73:
    r0 = s.retval;
    s.xOffset___12016 = (r0);
    s.lastBrkId = 647;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[647]) return breakpoint(s, 74, 647, r0);
  case 74:
    s.tmp_0 = if_yOffset_1_mk(s);
    r0 = pxsim_Array__getAt(s.arg6, s.cp___11950);
    s.tmp_0.arg0 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "yOffset");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["yOffset"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["yOffset"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 112; s.pc = 75; return s.tmp_0; }
    }
  case 75:
    r0 = s.retval;
    s.yOffset___12017 = (r0);
  case 12:
  case 13:
    s.lastBrkId = 648;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[648]) return breakpoint(s, 76, 648, r0);
  case 76:
    s.tmp_0 = r0 = s.cp___11950;
    r0 = (s.tmp_0 + 1);
    s.cp___11950 = (r0);
    r0 = pxsim_String_.charCodeAt(s.arg1, s.tmp_0);
    s.ch___12032 = (r0);
    s.lastBrkId = 649;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[649]) return breakpoint(s, 77, 649, r0);
  case 77:
    r0 = (s.ch___12032 == 10);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 650;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[650]) return breakpoint(s, 78, 650, r0);
  case 78:
    s.tmp_1 = r0 = s.arg3;
    s.tmp_4 = if_charHeight_1_mk(s);
    s.tmp_4.arg0 = s.arg5;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charHeight");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charHeight"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charHeight"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 113; s.pc = 79; return s.tmp_4; }
    }
  case 79:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.arg3 = (r0);
    s.lastBrkId = 651;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[651]) return breakpoint(s, 80, 651, r0);
  case 80:
    s.arg2 = (s.x0___11948);
  case 14:
  case 15:
    s.lastBrkId = 652;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[652]) return breakpoint(s, 81, 652, r0);
  case 81:
    r0 = (s.ch___12032 < 32);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 653;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[653]) return breakpoint(s, 82, 653, r0);
  case 82:
    { step = 9; continue; }
  case 16:
  case 17:
    s.lastBrkId = 654;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[654]) return breakpoint(s, 83, 654, r0);
  case 83:
    s.l___12051 = (0);
    s.lastBrkId = 655;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[655]) return breakpoint(s, 84, 655, r0);
  case 84:
    s.r___12052 = (s.lastchar___11985);
    s.lastBrkId = 656;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[656]) return breakpoint(s, 85, 656, r0);
  case 85:
    s.off___12054 = (0);
    s.lastBrkId = 657;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[657]) return breakpoint(s, 86, 657, r0);
  case 86:
    r0 = (s.ch___12032 - 32);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.dataSize___11978);
    s.guess___12055 = (r0);
    s.lastBrkId = 658;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[658]) return breakpoint(s, 87, 658, r0);
  case 87:
    r0 = pxsim.BufferMethods.getNumber(s.fontdata___11982, 4, s.guess___12055);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.ch___12032);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 659;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[659]) return breakpoint(s, 88, 659, r0);
  case 88:
    s.off___12054 = (s.guess___12055);
    { step = 25; continue; }
  case 18:
    s.lastBrkId = 660;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[660]) return breakpoint(s, 89, 660, r0);
  case 89:
  case 19:
    s.lastBrkId = 661;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[661]) return breakpoint(s, 90, 661, r0);
  case 90:
    r0 = (s.l___12051 <= s.r___12052);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 24; continue; }
    s.lastBrkId = 662;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[662]) return breakpoint(s, 91, 662, r0);
  case 91:
    s.tmp_1 = r0 = s.l___12051;
    r0 = (s.r___12052 - s.l___12051);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.m___12074 = (r0);
    s.lastBrkId = 663;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[663]) return breakpoint(s, 92, 663, r0);
  case 92:
    s.tmp_0 = r0 = s.fontdata___11982;
    r0 = (s.m___12074 * s.dataSize___11978);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.getNumber(s.tmp_0, 4, s.tmp_1);
    s.v___12083 = (r0);
    s.lastBrkId = 664;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[664]) return breakpoint(s, 93, 664, r0);
  case 93:
    r0 = (s.v___12083 == s.ch___12032);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 665;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[665]) return breakpoint(s, 94, 665, r0);
  case 94:
    r0 = (s.m___12074 * s.dataSize___11978);
    s.off___12054 = (r0);
    s.lastBrkId = 666;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[666]) return breakpoint(s, 95, 666, r0);
  case 95:
    { step = 24; continue; }
  case 20:
  case 21:
    s.lastBrkId = 667;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[667]) return breakpoint(s, 96, 667, r0);
  case 96:
    r0 = (s.v___12083 < s.ch___12032);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    s.lastBrkId = 668;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[668]) return breakpoint(s, 97, 668, r0);
  case 97:
    r0 = (s.m___12074 + 1);
    s.l___12051 = (r0);
    { step = 23; continue; }
  case 22:
    s.lastBrkId = 669;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[669]) return breakpoint(s, 98, 669, r0);
  case 98:
    r0 = (s.m___12074 - 1);
    s.r___12052 = (r0);
  case 23:
    { step = 19; continue; }
  case 24:
  case 25:
    s.lastBrkId = 670;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[670]) return breakpoint(s, 99, 670, r0);
  case 99:
    r0 = (s.mult___11951 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 26; continue; }
    s.lastBrkId = 671;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[671]) return breakpoint(s, 100, 671, r0);
  case 100:
    s.tmp_1 = r0 = s.imgBuf___11992;
    s.tmp_3 = r0 = s.fontdata___11982;
    r0 = (s.off___12054 + 2);
    s.tmp_4 = r0;
    r0 = pxsim.BufferMethods.slice(s.tmp_3, s.tmp_4, s.charSize___11974);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.write(s.tmp_1, 8, s.tmp_2);
    s.lastBrkId = 672;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[672]) return breakpoint(s, 101, 672, r0);
  case 101:
    s.tmp_0 = helpers_imageDrawIcon__P1956_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.imgBuf___11992;
    r0 = (s.arg2 + s.xOffset___12016);
    s.tmp_0.arg2 = r0;
    r0 = (s.arg3 + s.yOffset___12017);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = s.arg4;
    s.callLocIdx = 114; s.pc = 102; return s.tmp_0;
  case 102:
    r0 = s.retval;
    s.lastBrkId = 673;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[673]) return breakpoint(s, 103, 673, r0);
  case 103:
    s.tmp_0 = r0 = s.arg2;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.arg5;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 115; s.pc = 104; return s.tmp_2; }
    }
  case 104:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.arg2 = (r0);
    { step = 37; continue; }
  case 26:
    s.lastBrkId = 674;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[674]) return breakpoint(s, 105, 674, r0);
  case 105:
    r0 = (s.off___12054 + 2);
    s.off___12054 = (r0);
    s.lastBrkId = 675;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[675]) return breakpoint(s, 106, 675, r0);
  case 106:
    s.i___12139 = (0);
    s.lastBrkId = 676;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[676]) return breakpoint(s, 107, 676, r0);
  case 107:
  case 27:
    s.lastBrkId = 677;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[677]) return breakpoint(s, 108, 677, r0);
  case 108:
    r0 = (s.i___12139 < s.dataW___11956);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 36; continue; }
    s.lastBrkId = 678;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[678]) return breakpoint(s, 109, 678, r0);
  case 109:
    s.j___12144 = (0);
    s.lastBrkId = 679;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[679]) return breakpoint(s, 110, 679, r0);
  case 110:
    s.mask___12145 = (1);
    s.lastBrkId = 680;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[680]) return breakpoint(s, 111, 680, r0);
  case 111:
    s.tmp_0 = r0 = s.off___12054;
    r0 = (s.tmp_0 + 1);
    s.off___12054 = (r0);
    r0 = pxsim.BufferMethods.getByte(s.fontdata___11982, s.tmp_0);
    s.c___12146 = (r0);
    s.lastBrkId = 681;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[681]) return breakpoint(s, 112, 681, r0);
  case 112:
  case 28:
    s.lastBrkId = 682;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[682]) return breakpoint(s, 113, 682, r0);
  case 113:
    r0 = (s.j___12144 < s.dataH___11962);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 35; continue; }
    s.lastBrkId = 683;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[683]) return breakpoint(s, 114, 683, r0);
  case 114:
    r0 = (s.mask___12145 == 256);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 29; continue; }
    s.lastBrkId = 684;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[684]) return breakpoint(s, 115, 684, r0);
  case 115:
    s.tmp_2 = r0 = s.off___12054;
    r0 = (s.tmp_2 + 1);
    s.off___12054 = (r0);
    r0 = pxsim.BufferMethods.getByte(s.fontdata___11982, s.tmp_2);
    s.c___12146 = (r0);
    s.lastBrkId = 685;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[685]) return breakpoint(s, 116, 685, r0);
  case 116:
    s.mask___12145 = (1);
  case 29:
  case 30:
    s.lastBrkId = 686;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[686]) return breakpoint(s, 117, 686, r0);
  case 117:
    s.n___12163 = (0);
    s.lastBrkId = 687;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[687]) return breakpoint(s, 118, 687, r0);
  case 118:
  case 31:
    s.lastBrkId = 688;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[688]) return breakpoint(s, 119, 688, r0);
  case 119:
    r0 = (s.c___12146 & s.mask___12145);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 32; continue; }
    s.lastBrkId = 689;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[689]) return breakpoint(s, 120, 689, r0);
  case 120:
    r0 = (s.n___12163 + 1);
    s.n___12163 = (r0);
    s.lastBrkId = 690;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[690]) return breakpoint(s, 121, 690, r0);
  case 121:
    r0 = (s.mask___12145 << 1);
    s.mask___12145 = (r0);
    { step = 31; continue; }
  case 32:
    s.lastBrkId = 691;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[691]) return breakpoint(s, 122, 691, r0);
  case 122:
    r0 = pxsim_numops_toBoolDecr(s.n___12163);
    if (!r0) { step = 33; continue; }
    s.lastBrkId = 692;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[692]) return breakpoint(s, 123, 692, r0);
  case 123:
    s.tmp_0 = helpers_imageFillRect__P1957_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg2;
    r0 = (s.xOffset___12016 * s.mult___11951);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.tmp_3 = r0 = s.arg3;
    r0 = (s.j___12144 + s.yOffset___12017);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 * s.mult___11951);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.mult___11951;
    r0 = (s.mult___11951 * s.n___12163);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.arg4;
    s.callLocIdx = 116; s.pc = 124; return s.tmp_0;
  case 124:
    r0 = s.retval;
    s.lastBrkId = 693;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[693]) return breakpoint(s, 125, 693, r0);
  case 125:
    r0 = (s.j___12144 + s.n___12163);
    s.j___12144 = (r0);
    { step = 34; continue; }
  case 33:
    s.lastBrkId = 694;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[694]) return breakpoint(s, 126, 694, r0);
  case 126:
    r0 = (s.mask___12145 << 1);
    s.mask___12145 = (r0);
    s.lastBrkId = 695;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[695]) return breakpoint(s, 127, 695, r0);
  case 127:
    r0 = (s.j___12144 + 1);
    s.j___12144 = (r0);
  case 34:
    { step = 28; continue; }
  case 35:
    s.lastBrkId = 696;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[696]) return breakpoint(s, 128, 696, r0);
  case 128:
    r0 = (s.arg2 + s.mult___11951);
    s.arg2 = (r0);
    s.lastBrkId = 697;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[697]) return breakpoint(s, 129, 697, r0);
  case 129:
    r0 = (s.i___12139 + 1);
    s.i___12139 = (r0);
    { step = 27; continue; }
  case 36:
  case 37:
    { step = 9; continue; }
  case 38:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imagePrint__P1991.info = {"start":15326,"length":3300,"line":213,"column":4,"endLine":306,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"imagePrint","argumentNames":["img","text","x","y","color","font","offsets"]}

function helpers_imagePrint__P1991_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imagePrint__P1991, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  x0___11948: undefined,
  cp___11950: undefined,
  mult___11951: undefined,
  dataW___11956: undefined,
  dataH___11962: undefined,
  byteHeight___11968: undefined,
  charSize___11974: undefined,
  dataSize___11978: undefined,
  fontdata___11982: undefined,
  lastchar___11985: undefined,
  imgBuf___11992: undefined,
  xOffset___12016: undefined,
  yOffset___12017: undefined,
  ch___12032: undefined,
  l___12051: undefined,
  r___12052: undefined,
  off___12054: undefined,
  guess___12055: undefined,
  m___12074: undefined,
  v___12083: undefined,
  i___12139: undefined,
  j___12144: undefined,
  mask___12145: undefined,
  c___12146: undefined,
  n___12163: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
} }





function helpers_stringSplit__P122(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.A___12213 = undefined;
    s.lim___12215 = undefined;
    s.s___12231 = undefined;
    s.p___12234 = undefined;
    s.R___12235 = undefined;
    s.z___12249 = undefined;
    s.T___12262 = undefined;
    s.q___12263 = undefined;
    s.e___12269 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 146;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[146]) return breakpoint(s, 22, 146, r0);
  case 22:
    r0 = pxsim_Array__mk();
    s.A___12213 = (r0);
    s.lastBrkId = 147;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[147]) return breakpoint(s, 23, 147, r0);
  case 23:
    s.lim___12215 = (0);
    s.lastBrkId = 148;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[148]) return breakpoint(s, 24, 148, r0);
  case 24:
    r0 = (s.arg2 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 149;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[149]) return breakpoint(s, 25, 149, r0);
  case 25:
    r0 = (536870912 - 1);
    s.lim___12215 = (r0);
    { step = 4; continue; }
  case 1:
    s.lastBrkId = 150;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[150]) return breakpoint(s, 26, 150, r0);
  case 26:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 151;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[151]) return breakpoint(s, 27, 151, r0);
  case 27:
    s.lim___12215 = (0);
    { step = 3; continue; }
  case 2:
    s.lastBrkId = 152;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[152]) return breakpoint(s, 28, 152, r0);
  case 28:
    r0 = (s.arg2 | 0);
    s.lim___12215 = (r0);
  case 3:
  case 4:
    s.lastBrkId = 153;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[153]) return breakpoint(s, 29, 153, r0);
  case 29:
    r0 = pxsim_String_.length(s.arg0);
    s.s___12231 = (r0);
    s.lastBrkId = 154;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[154]) return breakpoint(s, 30, 154, r0);
  case 30:
    s.p___12234 = (0);
    s.lastBrkId = 155;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[155]) return breakpoint(s, 31, 155, r0);
  case 31:
    s.R___12235 = (s.arg1);
    s.lastBrkId = 156;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[156]) return breakpoint(s, 32, 156, r0);
  case 32:
    r0 = (s.lim___12215 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 157;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[157]) return breakpoint(s, 33, 157, r0);
  case 33:
    r0 = s.A___12213;
    { step = 21; continue; }
  case 5:
  case 6:
    s.lastBrkId = 158;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[158]) return breakpoint(s, 34, 158, r0);
  case 34:
    r0 = (s.arg1 === undefined);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 159;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[159]) return breakpoint(s, 35, 159, r0);
  case 35:
    r0 = pxsim_Array_.setAt(s.A___12213, 0, s.arg0);
    s.lastBrkId = 160;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[160]) return breakpoint(s, 36, 160, r0);
  case 36:
    r0 = s.A___12213;
    { step = 21; continue; }
  case 7:
  case 8:
    s.lastBrkId = 161;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[161]) return breakpoint(s, 37, 161, r0);
  case 37:
    r0 = (s.s___12231 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 162;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[162]) return breakpoint(s, 38, 162, r0);
  case 38:
    s.tmp_1 = helpers_splitMatch__P4560_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = 0;
    s.tmp_1.arg2 = s.R___12235;
    s.callLocIdx = 11; s.pc = 39; return s.tmp_1;
  case 39:
    r0 = s.retval;
    s.z___12249 = (r0);
    s.lastBrkId = 163;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[163]) return breakpoint(s, 40, 163, r0);
  case 40:
    r0 = (s.z___12249 > -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 164;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[164]) return breakpoint(s, 41, 164, r0);
  case 41:
    r0 = s.A___12213;
    { step = 21; continue; }
  case 9:
  case 10:
    s.lastBrkId = 165;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[165]) return breakpoint(s, 42, 165, r0);
  case 42:
    r0 = pxsim_Array_.setAt(s.A___12213, 0, s.arg0);
    s.lastBrkId = 166;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[166]) return breakpoint(s, 43, 166, r0);
  case 43:
    r0 = s.A___12213;
    { step = 21; continue; }
  case 11:
  case 12:
    s.lastBrkId = 167;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[167]) return breakpoint(s, 44, 167, r0);
  case 44:
    s.q___12263 = (s.p___12234);
    s.lastBrkId = 168;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[168]) return breakpoint(s, 45, 168, r0);
  case 45:
  case 13:
    s.lastBrkId = 169;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[169]) return breakpoint(s, 46, 169, r0);
  case 46:
    r0 = (s.q___12263 != s.s___12231);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 170;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[170]) return breakpoint(s, 47, 170, r0);
  case 47:
    s.tmp_1 = helpers_splitMatch__P4560_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.q___12263;
    s.tmp_1.arg2 = s.R___12235;
    s.callLocIdx = 12; s.pc = 48; return s.tmp_1;
  case 48:
    r0 = s.retval;
    s.e___12269 = (r0);
    s.lastBrkId = 171;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[171]) return breakpoint(s, 49, 171, r0);
  case 49:
    r0 = (s.e___12269 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 172;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[172]) return breakpoint(s, 50, 172, r0);
  case 50:
    r0 = (s.q___12263 + 1);
    s.q___12263 = (r0);
    { step = 19; continue; }
  case 14:
    s.lastBrkId = 173;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[173]) return breakpoint(s, 51, 173, r0);
  case 51:
    r0 = (s.e___12269 == s.p___12234);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 174;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[174]) return breakpoint(s, 52, 174, r0);
  case 52:
    r0 = (s.q___12263 + 1);
    s.q___12263 = (r0);
    { step = 18; continue; }
  case 15:
    s.lastBrkId = 175;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[175]) return breakpoint(s, 53, 175, r0);
  case 53:
    s.tmp_0 = helpers_stringSlice__P119_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.p___12234;
    s.tmp_0.arg2 = s.q___12263;
    s.callLocIdx = 13; s.pc = 54; return s.tmp_0;
  case 54:
    r0 = s.retval;
    s.T___12262 = (r0);
    s.lastBrkId = 176;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[176]) return breakpoint(s, 55, 176, r0);
  case 55:
    r0 = pxsim_Array__push(s.A___12213, s.T___12262);
    s.lastBrkId = 177;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[177]) return breakpoint(s, 56, 177, r0);
  case 56:
    r0 = pxsim_Array__length(s.A___12213);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.lim___12215);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 178;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[178]) return breakpoint(s, 57, 178, r0);
  case 57:
    r0 = s.A___12213;
    { step = 21; continue; }
  case 16:
  case 17:
    s.lastBrkId = 179;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[179]) return breakpoint(s, 58, 179, r0);
  case 58:
    s.p___12234 = (s.e___12269);
    s.lastBrkId = 180;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[180]) return breakpoint(s, 59, 180, r0);
  case 59:
    s.q___12263 = (s.p___12234);
  case 18:
  case 19:
    { step = 13; continue; }
  case 20:
    s.lastBrkId = 181;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[181]) return breakpoint(s, 60, 181, r0);
  case 60:
    s.tmp_0 = helpers_stringSlice__P119_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.p___12234;
    s.tmp_0.arg2 = s.q___12263;
    s.callLocIdx = 14; s.pc = 61; return s.tmp_0;
  case 61:
    r0 = s.retval;
    s.T___12262 = (r0);
    s.lastBrkId = 182;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[182]) return breakpoint(s, 62, 182, r0);
  case 62:
    r0 = pxsim_Array__push(s.A___12213, s.T___12262);
    s.lastBrkId = 183;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[183]) return breakpoint(s, 63, 183, r0);
  case 63:
    r0 = s.A___12213;
  case 21:
    return leave(s, r0)
  default: oops()
} } }
helpers_stringSplit__P122.info = {"start":12919,"length":1319,"line":434,"column":4,"endLine":478,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"stringSplit","argumentNames":["S","separator","limit"]}

function helpers_stringSplit__P122_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_stringSplit__P122, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  A___12213: undefined,
  lim___12215: undefined,
  s___12231: undefined,
  p___12234: undefined,
  R___12235: undefined,
  z___12249: undefined,
  T___12262: undefined,
  q___12263: undefined,
  e___12269: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_splitMatch__P4560(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.r___12349 = undefined;
    s.s___12352 = undefined;
    s.i___12362 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 184;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[184]) return breakpoint(s, 8, 184, r0);
  case 8:
    r0 = pxsim_String_.length(s.arg2);
    s.r___12349 = (r0);
    s.lastBrkId = 185;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[185]) return breakpoint(s, 9, 185, r0);
  case 9:
    r0 = pxsim_String_.length(s.arg0);
    s.s___12352 = (r0);
    s.lastBrkId = 186;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[186]) return breakpoint(s, 10, 186, r0);
  case 10:
    r0 = (s.arg1 + s.r___12349);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.s___12352);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 187;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[187]) return breakpoint(s, 11, 187, r0);
  case 11:
    r0 = -1;
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 188;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[188]) return breakpoint(s, 12, 188, r0);
  case 12:
    s.i___12362 = (0);
    s.lastBrkId = 189;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[189]) return breakpoint(s, 13, 189, r0);
  case 13:
  case 3:
    s.lastBrkId = 190;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[190]) return breakpoint(s, 14, 190, r0);
  case 14:
    r0 = (s.i___12362 < s.r___12349);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 191;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[191]) return breakpoint(s, 15, 191, r0);
  case 15:
    s.tmp_3 = r0 = s.arg0;
    r0 = (s.arg1 + s.i___12362);
    s.tmp_4 = r0;
    r0 = pxsim_String_.charAt(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_String_.charAt(s.arg2, s.i___12362);
    s.tmp_5 = r0;
    r0 = (s.tmp_2 != s.tmp_5);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 192;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[192]) return breakpoint(s, 16, 192, r0);
  case 16:
    r0 = -1;
    { step = 7; continue; }
  case 4:
  case 5:
    s.lastBrkId = 193;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[193]) return breakpoint(s, 17, 193, r0);
  case 17:
    r0 = (s.i___12362 + 1);
    s.i___12362 = (r0);
    { step = 3; continue; }
  case 6:
    s.lastBrkId = 194;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[194]) return breakpoint(s, 18, 194, r0);
  case 18:
    r0 = (s.arg1 + s.r___12349);
  case 7:
    return leave(s, r0)
  default: oops()
} } }
helpers_splitMatch__P4560.info = {"start":14244,"length":289,"line":480,"column":4,"endLine":489,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"splitMatch","argumentNames":["S","q","R"]}

function helpers_splitMatch__P4560_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_splitMatch__P4560, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  r___12349: undefined,
  s___12352: undefined,
  i___12362: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_stringSlice__P119(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___12314 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 136;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[136]) return breakpoint(s, 9, 136, r0);
  case 9:
    r0 = pxsim_String_.length(s.arg0);
    s.len___12314 = (r0);
    s.lastBrkId = 137;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[137]) return breakpoint(s, 10, 137, r0);
  case 10:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 138;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[138]) return breakpoint(s, 11, 138, r0);
  case 11:
    s.tmp_1 = Math_max__P130_mk(s);
    r0 = (s.len___12314 + s.arg1);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 10; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    s.arg1 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 139;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[139]) return breakpoint(s, 13, 139, r0);
  case 13:
    r0 = (s.arg2 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 140;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[140]) return breakpoint(s, 14, 140, r0);
  case 14:
    s.arg2 = (s.len___12314);
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 141;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[141]) return breakpoint(s, 15, 141, r0);
  case 15:
    r0 = (s.arg2 === null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 142;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[142]) return breakpoint(s, 16, 142, r0);
  case 16:
    s.arg2 = (0);
  case 4:
  case 5:
  case 6:
    s.lastBrkId = 143;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[143]) return breakpoint(s, 17, 143, r0);
  case 17:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 144;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[144]) return breakpoint(s, 18, 144, r0);
  case 18:
    r0 = (s.len___12314 + s.arg2);
    s.arg2 = (r0);
  case 7:
  case 8:
    s.lastBrkId = 145;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[145]) return breakpoint(s, 19, 145, r0);
  case 19:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    r0 = (s.arg2 - s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_String_.substr(s.tmp_0, s.tmp_1, s.tmp_2);
    return leave(s, r0)
  default: oops()
} } }
helpers_stringSlice__P119.info = {"start":11496,"length":440,"line":384,"column":4,"endLine":402,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"stringSlice","argumentNames":["s","start","end"]}

function helpers_stringSlice__P119_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_stringSlice__P119, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  len___12314: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_Scene_render__P2873(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___12446 = undefined;
    s.unnamed1332___U1 = undefined;
    s.unnamed1333___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2844_VT)) failedCast(r0);
    s.lastBrkId = 1973;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1973]) return breakpoint(s, 12, 1973, r0);
  case 12:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1974;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1974]) return breakpoint(s, 13, 1974, r0);
  case 13:
    { step = 11; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1975;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1975]) return breakpoint(s, 14, 1975, r0);
  case 14:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 4);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["flags"] = (s.tmp_3);
    s.lastBrkId = 1976;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1976]) return breakpoint(s, 15, 1976, r0);
  case 15:
    s.lastBrkId = 1977;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1977]) return breakpoint(s, 16, 1977, r0);
  case 16:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["previousScene"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1978;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1978]) return breakpoint(s, 17, 1978, r0);
  case 17:
    s.tmp_3 = scene_Scene_render__P2873_mk(s);
    r0 = s.arg0.fields["previousScene"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 938; s.pc = 18; return s.tmp_3;
  case 18:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 1979;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1979]) return breakpoint(s, 19, 1979, r0);
  case 19:
    s.tmp_0 = scene_Background_draw__P2679_mk(s);
    r0 = s.arg0.fields["background"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 939; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
  case 6:
    s.lastBrkId = 1980;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1980]) return breakpoint(s, 21, 1980, r0);
  case 21:
    s.lastBrkId = 1981;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1981]) return breakpoint(s, 22, 1981, r0);
  case 22:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1982;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1982]) return breakpoint(s, 23, 1982, r0);
  case 23:
    s.tmp_2 = helpers_arraySort__P105_mk(s);
    r0 = s.arg0.fields["allSprites"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = scene_Scene_render_inline__P12423;
    s.callLocIdx = 944; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 1984;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1984]) return breakpoint(s, 25, 1984, r0);
  case 25:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & -2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 7:
  case 8:
    s.lastBrkId = 1985;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1985]) return breakpoint(s, 26, 1985, r0);
  case 26:
    s.lastBrkId = 1986;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1986]) return breakpoint(s, 27, 1986, r0);
  case 27:
    s.s___12446 = (undefined);
    r0 = s.arg0.fields["allSprites"];
    s.unnamed1332___U1 = (r0);
    s.unnamed1333___U2 = (0);
    s.lastBrkId = 1987;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1987]) return breakpoint(s, 28, 1987, r0);
  case 28:
  case 9:
    s.tmp_0 = r0 = s.unnamed1333___U2;
    r0 = pxsim_Array__length(s.unnamed1332___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 10; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1332___U1, s.unnamed1333___U2);
    s.s___12446 = (r0);
    s.lastBrkId = 1988;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1988]) return breakpoint(s, 29, 1988, r0);
  case 29:
    s.lastBrkId = 1989;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1989]) return breakpoint(s, 30, 1989, r0);
  case 30:
    s.tmp_2 = if___draw_2_mk(s);
    s.tmp_2.arg0 = s.s___12446;
    r0 = s.arg0.fields["camera"];
    s.tmp_2.arg1 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "__draw"), 2);
      s.callLocIdx = 945; s.pc = 31; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["__draw"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["__draw"], 2); s.callLocIdx = 945; s.pc = 31; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 945; s.pc = 31; return s.tmp_2;; }
     else { s.callLocIdx = 945; s.pc = 31; return s.tmp_2; }
    }
  case 31:
    r0 = s.retval;
    r0 = (s.unnamed1333___U2 + 1);
    s.unnamed1333___U2 = (r0);
    { step = 9; continue; }
  case 10:
    s.unnamed1332___U1 = (undefined);
    s.lastBrkId = 1990;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1990]) return breakpoint(s, 32, 1990, r0);
  case 32:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & -5);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 11:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_render__P2873.info = {"start":8203,"length":917,"line":228,"column":8,"endLine":252,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"render","argumentNames":["this"]}

function scene_Scene_render__P2873_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_render__P2873, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  s___12446: undefined,
  unnamed1332___U1: undefined,
  unnamed1333___U2: undefined,
  arg0: undefined,
} }





function scene_Scene_render_inline__P12423(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1983;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1983]) return breakpoint(s, 3, 1983, r0);
  case 3:
    s.tmp_2 = if_z_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "z");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["z"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["z"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 940; s.pc = 4; return s.tmp_2; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = if_z_1_mk(s);
    s.tmp_4.arg0 = s.arg1;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "z");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["z"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["z"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 941; s.pc = 5; return s.tmp_4; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_6 = if_id_1_mk(s);
    s.tmp_6.arg0 = s.arg0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "id");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["id"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["id"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 942; s.pc = 6; return s.tmp_6; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_5 = r0;
    s.tmp_8 = if_id_1_mk(s);
    s.tmp_8.arg0 = s.arg1;
    if (!s.tmp_8.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_8.arg0, "id");
    } else {
      s.tmp_8.fn = s.tmp_8.arg0.vtable.iface["id"];
      if (s.tmp_8.fn == null) { s.retval = s.tmp_8.arg0.fields["id"]; }
      else if (!s.tmp_8.fn.isGetter) { s.retval = bind(s.tmp_8); }
     else { s.callLocIdx = 943; s.pc = 7; return s.tmp_8; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_5 - s.tmp_7);
  case 2:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = s.tmp_9;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_render_inline__P12423.info = {"start":8781,"length":52,"line":242,"column":37,"endLine":242,"endColumn":89,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":["a","b"]}

function scene_Scene_render_inline__P12423_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_render_inline__P12423, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Background_draw__P2679(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C2670_VT)) failedCast(r0);
    s.lastBrkId = 1683;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1683]) return breakpoint(s, 5, 1683, r0);
  case 5:
    r0 = s.arg0.fields["color"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.fill(globals.screen___2033, s.tmp_0);
    s.lastBrkId = 1684;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1684]) return breakpoint(s, 6, 1684, r0);
  case 6:
    r0 = s.arg0.fields["_image"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1685;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1685]) return breakpoint(s, 7, 1685, r0);
  case 7:
    r0 = s.arg0.fields["_image"];
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(globals.screen___2033, s.tmp_1, 0, 0);
  case 1:
  case 2:
    s.lastBrkId = 1686;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1686]) return breakpoint(s, 8, 1686, r0);
  case 8:
    r0 = s.arg0.fields["_layers"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1687;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1687]) return breakpoint(s, 9, 1687, r0);
  case 9:
    r0 = pxsim_pxtcore_mkAction(1, scene_Background_draw_inline__P12594);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    s.tmp_2 = helpers_arrayForEach__P109_mk(s);
    r0 = s.arg0.fields["_layers"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 801; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Background_draw__P2679.info = {"start":1166,"length":545,"line":48,"column":8,"endLine":60,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"draw","argumentNames":["this"]}

function scene_Background_draw__P2679_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_draw__P2679, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function scene_Background_draw_inline__P12594(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ox___12596 = undefined;
    s.oy___12607 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1688;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1688]) return breakpoint(s, 1, 1688, r0);
  case 1:
    r0 = s.caps[0].fields["camera"];
    r0 = r0.fields["drawOffsetX"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["distance"];
    s.tmp_3 = r0;
    r0 = (1 + s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.round(s.tmp_0);
    s.ox___12596 = (r0);
    s.lastBrkId = 1689;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1689]) return breakpoint(s, 2, 1689, r0);
  case 2:
    r0 = s.caps[0].fields["camera"];
    r0 = r0.fields["drawOffsetY"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["distance"];
    s.tmp_3 = r0;
    r0 = (1 + s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.round(s.tmp_0);
    s.oy___12607 = (r0);
    s.lastBrkId = 1690;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1690]) return breakpoint(s, 3, 1690, r0);
  case 3:
    s.tmp_0 = scene_BackgroundLayer_draw__P2688_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.ox___12596;
    s.tmp_0.arg2 = s.oy___12607;
    s.callLocIdx = 800; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Background_draw_inline__P12594.info = {"start":1373,"length":312,"line":53,"column":37,"endLine":58,"endColumn":17,"fileName":"pxt_modules/game/background.ts","functionName":"inline","argumentNames":["layer"]}

function scene_Background_draw_inline__P12594_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_draw_inline__P12594, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  ox___12596: undefined,
  oy___12607: undefined,
  arg0: undefined,
} }





function scene_BackgroundLayer_draw__P2688(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.w___12625 = undefined;
    s.h___12628 = undefined;
    s.pw___12631 = undefined;
    s.ph___12635 = undefined;
    s.rx___12644 = undefined;
    s.ry___12647 = undefined;
    s.y___12716 = undefined;
    s.py___12717 = undefined;
    s.dh___12726 = undefined;
    s.x___12734 = undefined;
    s.rxl___12735 = undefined;
    s.px___12741 = undefined;
    s.dw___12745 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_BackgroundLayer__C2680_VT)) failedCast(r0);
    s.lastBrkId = 1709;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1709]) return breakpoint(s, 24, 1709, r0);
  case 24:
    r0 = pxsim_ImageMethods.width(globals.screen___2033);
    s.w___12625 = (r0);
    s.lastBrkId = 1710;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1710]) return breakpoint(s, 25, 1710, r0);
  case 25:
    r0 = pxsim_ImageMethods.height(globals.screen___2033);
    s.h___12628 = (r0);
    s.lastBrkId = 1711;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1711]) return breakpoint(s, 26, 1711, r0);
  case 26:
    r0 = s.arg0.fields["img"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_0);
    s.pw___12631 = (r0);
    s.lastBrkId = 1712;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1712]) return breakpoint(s, 27, 1712, r0);
  case 27:
    r0 = s.arg0.fields["img"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_0);
    s.ph___12635 = (r0);
    s.lastBrkId = 1713;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1713]) return breakpoint(s, 28, 1713, r0);
  case 28:
    r0 = pxsim_numops_toBoolDecr(s.pw___12631);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.ph___12635);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1714;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1714]) return breakpoint(s, 29, 1714, r0);
  case 29:
    { step = 23; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1715;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1715]) return breakpoint(s, 30, 1715, r0);
  case 30:
    r0 = (0 - s.arg1);
    s.rx___12644 = (r0);
    s.lastBrkId = 1716;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1716]) return breakpoint(s, 31, 1716, r0);
  case 31:
    r0 = (0 - s.arg2);
    s.ry___12647 = (r0);
    s.lastBrkId = 1717;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1717]) return breakpoint(s, 32, 1717, r0);
  case 32:
    r0 = s.arg0.fields["alignX"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 5:
    s.lastBrkId = 1718;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1718]) return breakpoint(s, 33, 1718, r0);
  case 33:
    s.tmp_1 = r0 = s.rx___12644;
    r0 = (s.w___12625 + s.pw___12631);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.rx___12644 = (r0);
    s.lastBrkId = 1719;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1719]) return breakpoint(s, 34, 1719, r0);
  case 34:
    { step = 7; continue; }
  case 6:
    s.lastBrkId = 1720;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1720]) return breakpoint(s, 35, 1720, r0);
  case 35:
    s.tmp_0 = r0 = s.rx___12644;
    r0 = (s.w___12625 + s.pw___12631);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.rx___12644 = (r0);
    s.lastBrkId = 1721;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1721]) return breakpoint(s, 36, 1721, r0);
  case 36:
  case 7:
    s.lastBrkId = 1722;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1722]) return breakpoint(s, 37, 1722, r0);
  case 37:
    r0 = s.arg0.fields["alignY"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 8:
    s.lastBrkId = 1723;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1723]) return breakpoint(s, 38, 1723, r0);
  case 38:
    s.tmp_1 = r0 = s.ry___12647;
    r0 = (s.h___12628 + s.ph___12635);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.ry___12647 = (r0);
    s.lastBrkId = 1724;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1724]) return breakpoint(s, 39, 1724, r0);
  case 39:
    { step = 10; continue; }
  case 9:
    s.lastBrkId = 1725;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1725]) return breakpoint(s, 40, 1725, r0);
  case 40:
    s.tmp_0 = r0 = s.ry___12647;
    r0 = (s.h___12628 + s.ph___12635);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.ry___12647 = (r0);
    s.lastBrkId = 1726;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1726]) return breakpoint(s, 41, 1726, r0);
  case 41:
  case 10:
    s.lastBrkId = 1727;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1727]) return breakpoint(s, 42, 1727, r0);
  case 42:
    r0 = (s.rx___12644 % s.w___12625);
    s.rx___12644 = (r0);
    s.lastBrkId = 1728;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1728]) return breakpoint(s, 43, 1728, r0);
  case 43:
    r0 = (s.rx___12644 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1729;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1729]) return breakpoint(s, 44, 1729, r0);
  case 44:
    r0 = (s.rx___12644 + s.w___12625);
    s.rx___12644 = (r0);
  case 11:
  case 12:
    s.lastBrkId = 1730;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1730]) return breakpoint(s, 45, 1730, r0);
  case 45:
    r0 = (s.ry___12647 % s.h___12628);
    s.ry___12647 = (r0);
    s.lastBrkId = 1731;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1731]) return breakpoint(s, 46, 1731, r0);
  case 46:
    r0 = (s.ry___12647 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1732;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1732]) return breakpoint(s, 47, 1732, r0);
  case 47:
    r0 = (s.ry___12647 + s.h___12628);
    s.ry___12647 = (r0);
  case 13:
  case 14:
    s.lastBrkId = 1733;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1733]) return breakpoint(s, 48, 1733, r0);
  case 48:
    r0 = pxsim.Math_.floor(s.rx___12644);
    s.rx___12644 = (r0);
    s.lastBrkId = 1734;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1734]) return breakpoint(s, 49, 1734, r0);
  case 49:
    r0 = pxsim.Math_.floor(s.ry___12647);
    s.ry___12647 = (r0);
    s.lastBrkId = 1735;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1735]) return breakpoint(s, 50, 1735, r0);
  case 50:
    s.y___12716 = (0);
    s.lastBrkId = 1736;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1736]) return breakpoint(s, 51, 1736, r0);
  case 51:
    s.py___12717 = (0);
    s.lastBrkId = 1737;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1737]) return breakpoint(s, 52, 1737, r0);
  case 52:
  case 15:
    s.lastBrkId = 1738;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1738]) return breakpoint(s, 53, 1738, r0);
  case 53:
    r0 = (s.y___12716 < s.h___12628);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    s.lastBrkId = 1739;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1739]) return breakpoint(s, 54, 1739, r0);
  case 54:
    r0 = (s.y___12716 % s.ph___12635);
    s.py___12717 = (r0);
    s.lastBrkId = 1740;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1740]) return breakpoint(s, 55, 1740, r0);
  case 55:
    s.tmp_0 = Math_min__P131_mk(s);
    r0 = (s.ph___12635 - s.py___12717);
    s.tmp_0.arg0 = r0;
    r0 = (s.h___12628 - s.ry___12647);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 803; s.pc = 56; return s.tmp_0;
  case 56:
    r0 = s.retval;
    s.dh___12726 = (r0);
    s.lastBrkId = 1741;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1741]) return breakpoint(s, 57, 1741, r0);
  case 57:
    s.x___12734 = (0);
    s.lastBrkId = 1742;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1742]) return breakpoint(s, 58, 1742, r0);
  case 58:
    s.rxl___12735 = (s.rx___12644);
    s.lastBrkId = 1743;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1743]) return breakpoint(s, 59, 1743, r0);
  case 59:
  case 16:
    s.lastBrkId = 1744;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1744]) return breakpoint(s, 60, 1744, r0);
  case 60:
    r0 = (s.x___12734 < s.w___12625);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 19; continue; }
    s.lastBrkId = 1745;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1745]) return breakpoint(s, 61, 1745, r0);
  case 61:
    r0 = (s.x___12734 % s.pw___12631);
    s.px___12741 = (r0);
    s.lastBrkId = 1746;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1746]) return breakpoint(s, 62, 1746, r0);
  case 62:
    s.tmp_0 = Math_min__P131_mk(s);
    r0 = (s.pw___12631 - s.px___12741);
    s.tmp_0.arg0 = r0;
    r0 = (s.w___12625 - s.rxl___12735);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 804; s.pc = 63; return s.tmp_0;
  case 63:
    r0 = s.retval;
    s.dw___12745 = (r0);
    s.lastBrkId = 1747;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1747]) return breakpoint(s, 64, 1747, r0);
  case 64:
    r0 = s.arg0.fields["img"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.drawImage(globals.screen___2033, s.tmp_0, s.rxl___12735, s.ry___12647);
    s.lastBrkId = 1748;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1748]) return breakpoint(s, 65, 1748, r0);
  case 65:
    r0 = (s.rxl___12735 + s.dw___12745);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.w___12625);
    s.rxl___12735 = (r0);
    s.lastBrkId = 1749;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1749]) return breakpoint(s, 66, 1749, r0);
  case 66:
    r0 = s.arg0.fields["repeatX"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    r0 = s.dw___12745;
    { step = 18; continue; }
  case 17:
    r0 = s.w___12625;
  case 18:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.x___12734 + s.tmp_1);
    s.x___12734 = (r0);
    { step = 16; continue; }
  case 19:
    s.lastBrkId = 1750;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1750]) return breakpoint(s, 67, 1750, r0);
  case 67:
    r0 = (s.ry___12647 + s.dh___12726);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.h___12628);
    s.ry___12647 = (r0);
    s.lastBrkId = 1751;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1751]) return breakpoint(s, 68, 1751, r0);
  case 68:
    r0 = s.arg0.fields["repeatY"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    r0 = s.dh___12726;
    { step = 21; continue; }
  case 20:
    r0 = s.h___12628;
  case 21:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.y___12716 + s.tmp_1);
    s.y___12716 = (r0);
    { step = 15; continue; }
  case 22:
  case 23:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_BackgroundLayer_draw__P2688.info = {"start":3063,"length":1537,"line":99,"column":8,"endLine":144,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"draw","argumentNames":["this","offsetX","offsetY"]}

function scene_BackgroundLayer_draw__P2688_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_BackgroundLayer_draw__P2688, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  w___12625: undefined,
  h___12628: undefined,
  pw___12631: undefined,
  ph___12635: undefined,
  rx___12644: undefined,
  ry___12647: undefined,
  y___12716: undefined,
  py___12717: undefined,
  dh___12726: undefined,
  x___12734: undefined,
  rxl___12735: undefined,
  px___12741: undefined,
  dw___12745: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_arraySort__P105(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 38;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[38]) return breakpoint(s, 5, 38, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 1);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 39;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[39]) return breakpoint(s, 6, 39, r0);
  case 6:
    s.arg1 = (helpers_arraySort_inline__P12468);
  case 3:
  case 4:
    s.lastBrkId = 57;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[57]) return breakpoint(s, 7, 57, r0);
  case 7:
    s.tmp_0 = helpers_sortHelper__P4558_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 2; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySort__P105.info = {"start":5663,"length":859,"line":207,"column":4,"endLine":227,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySort","argumentNames":["arr","callbackfn"]}

function helpers_arraySort__P105_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySort__P105, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arraySort_inline__P12468(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.aIsUndef___12471 = undefined;
    s.bIsUndef___12475 = undefined;
    s.aIsNull___12486 = undefined;
    s.bIsNull___12490 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 40;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[40]) return breakpoint(s, 18, 40, r0);
  case 18:
    r0 = (s.arg0 === undefined);
    s.aIsUndef___12471 = (r0);
    s.lastBrkId = 41;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[41]) return breakpoint(s, 19, 41, r0);
  case 19:
    r0 = (s.arg1 === undefined);
    s.bIsUndef___12475 = (r0);
    s.lastBrkId = 42;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[42]) return breakpoint(s, 20, 42, r0);
  case 20:
    s.tmp_0 = r0 = s.aIsUndef___12471;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.bIsUndef___12475;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 43;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[43]) return breakpoint(s, 21, 43, r0);
  case 21:
    r0 = 0;
    { step = 17; continue; }
    { step = 8; continue; }
  case 3:
    s.lastBrkId = 44;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[44]) return breakpoint(s, 22, 44, r0);
  case 22:
    r0 = pxsim_numops_toBoolDecr(s.aIsUndef___12471);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 45;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[45]) return breakpoint(s, 23, 45, r0);
  case 23:
    r0 = 1;
    { step = 17; continue; }
    { step = 7; continue; }
  case 4:
    s.lastBrkId = 46;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[46]) return breakpoint(s, 24, 46, r0);
  case 24:
    r0 = pxsim_numops_toBoolDecr(s.bIsUndef___12475);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 47;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[47]) return breakpoint(s, 25, 47, r0);
  case 25:
    r0 = -1;
    { step = 17; continue; }
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 48;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[48]) return breakpoint(s, 26, 48, r0);
  case 26:
    r0 = (s.arg0 === null);
    s.aIsNull___12486 = (r0);
    s.lastBrkId = 49;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[49]) return breakpoint(s, 27, 49, r0);
  case 27:
    r0 = (s.arg1 === null);
    s.bIsNull___12490 = (r0);
    s.lastBrkId = 50;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[50]) return breakpoint(s, 28, 50, r0);
  case 28:
    s.tmp_0 = r0 = s.aIsNull___12486;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 9:
    r0 = s.bIsNull___12490;
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 51;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[51]) return breakpoint(s, 29, 51, r0);
  case 29:
    r0 = 0;
    { step = 17; continue; }
    { step = 16; continue; }
  case 11:
    s.lastBrkId = 52;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[52]) return breakpoint(s, 30, 52, r0);
  case 30:
    r0 = pxsim_numops_toBoolDecr(s.aIsNull___12486);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 53;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[53]) return breakpoint(s, 31, 53, r0);
  case 31:
    r0 = 1;
    { step = 17; continue; }
    { step = 15; continue; }
  case 12:
    s.lastBrkId = 54;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[54]) return breakpoint(s, 32, 54, r0);
  case 32:
    r0 = pxsim_numops_toBoolDecr(s.bIsNull___12490);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 55;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[55]) return breakpoint(s, 33, 55, r0);
  case 33:
    r0 = -1;
    { step = 17; continue; }
  case 13:
  case 14:
  case 15:
  case 16:
    s.lastBrkId = 56;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[56]) return breakpoint(s, 34, 56, r0);
  case 34:
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 35);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 35:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 36);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 36:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_6, s.tmp_7);
    s.tmp_5 = r0;
    r0 = pxsim_String_.compare(s.tmp_2, s.tmp_5);
  case 17:
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySort_inline__P12468.info = {"start":5826,"length":636,"line":209,"column":25,"endLine":224,"endColumn":13,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"inline","argumentNames":["a","b"]}

function helpers_arraySort_inline__P12468_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySort_inline__P12468, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  aIsUndef___12471: undefined,
  bIsUndef___12475: undefined,
  aIsNull___12486: undefined,
  bIsNull___12490: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_sortHelper__P4558(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___12525 = undefined;
    s.i___12528 = undefined;
    s.j___12534 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 24;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[24]) return breakpoint(s, 12, 24, r0);
  case 12:
    r0 = pxsim_Array__length(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 25;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[25]) return breakpoint(s, 13, 25, r0);
  case 13:
    r0 = s.arg0;
    { step = 11; continue; }
  case 3:
  case 4:
    s.lastBrkId = 26;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[26]) return breakpoint(s, 14, 26, r0);
  case 14:
    r0 = pxsim_Array__length(s.arg0);
    s.len___12525 = (r0);
    s.lastBrkId = 27;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[27]) return breakpoint(s, 15, 27, r0);
  case 15:
    s.i___12528 = (0);
    s.lastBrkId = 28;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[28]) return breakpoint(s, 16, 28, r0);
  case 16:
  case 5:
    s.lastBrkId = 29;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[29]) return breakpoint(s, 17, 29, r0);
  case 17:
    s.tmp_1 = r0 = s.i___12528;
    r0 = (s.len___12525 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 30;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[30]) return breakpoint(s, 18, 30, r0);
  case 18:
    r0 = (s.i___12528 + 1);
    s.j___12534 = (r0);
    s.lastBrkId = 31;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[31]) return breakpoint(s, 19, 31, r0);
  case 19:
  case 6:
    s.lastBrkId = 32;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[32]) return breakpoint(s, 20, 32, r0);
  case 20:
    r0 = (s.j___12534 < s.len___12525);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 33;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[33]) return breakpoint(s, 21, 33, r0);
  case 21:
    s.tmp_3 = lambda_3_mk(s);
    s.tmp_3.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___12528);
    s.tmp_3.arg0 = r0;
    r0 = pxsim_Array__getAt(s.arg0, s.j___12534);
    s.tmp_3.arg1 = r0;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 0; s.pc = 22; return s.tmp_3;
  case 22:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 34;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[34]) return breakpoint(s, 23, 34, r0);
  case 23:
    s.tmp_4 = helpers_swap__P4557_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = s.i___12528;
    s.tmp_4.arg2 = s.j___12534;
    s.callLocIdx = 1; s.pc = 24; return s.tmp_4;
  case 24:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 35;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[35]) return breakpoint(s, 25, 35, r0);
  case 25:
    r0 = (s.j___12534 + 1);
    s.j___12534 = (r0);
    { step = 6; continue; }
  case 9:
    s.lastBrkId = 36;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[36]) return breakpoint(s, 26, 36, r0);
  case 26:
    r0 = (s.i___12528 + 1);
    s.i___12528 = (r0);
    { step = 5; continue; }
  case 10:
    s.lastBrkId = 37;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[37]) return breakpoint(s, 27, 37, r0);
  case 27:
    r0 = s.arg0;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
helpers_sortHelper__P4558.info = {"start":5176,"length":481,"line":191,"column":4,"endLine":205,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"sortHelper","argumentNames":["arr","callbackfn"]}

function helpers_sortHelper__P4558_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_sortHelper__P4558, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  len___12525: undefined,
  i___12528: undefined,
  j___12534: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_swap__P4557(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.temp___12563 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 21;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[21]) return breakpoint(s, 1, 21, r0);
  case 1:
    r0 = pxsim_Array__getAt(s.arg0, s.arg1);
    s.temp___12563 = (r0);
    s.lastBrkId = 22;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[22]) return breakpoint(s, 2, 22, r0);
  case 2:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_1, s.tmp_2);
    s.lastBrkId = 23;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[23]) return breakpoint(s, 3, 23, r0);
  case 3:
    r0 = pxsim_Array_.setAt(s.arg0, s.arg2, s.temp___12563);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_swap__P4557.info = {"start":5030,"length":140,"line":185,"column":4,"endLine":189,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"swap","argumentNames":["arr","i","j"]}

function helpers_swap__P4557_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_swap__P4557, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  temp___12563: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_Camera_update__P2799(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.elapsed___12832 = undefined;
    s.percentComplete___12846 = undefined;
    s.damp___12853 = undefined;
    s.f___12862 = undefined;
    s.x___12868 = undefined;
    s.y___12875 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2782_VT)) failedCast(r0);
    s.lastBrkId = 1891;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1891]) return breakpoint(s, 9, 1891, r0);
  case 9:
    r0 = s.arg0.fields["sprite"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1892;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1892]) return breakpoint(s, 10, 1892, r0);
  case 10:
    s.tmp_1 = r0 = s.arg0;
    s.tmp_3 = Sprite_x__P2355_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 899; s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_lastUpdatedSpriteX"] = (s.tmp_2);
    s.lastBrkId = 1893;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1893]) return breakpoint(s, 12, 1893, r0);
  case 12:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Sprite_y__P2357_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 900; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_lastUpdatedSpriteY"] = (s.tmp_1);
    s.lastBrkId = 1894;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1894]) return breakpoint(s, 14, 1894, r0);
  case 14:
    s.tmp_0 = scene_Camera_offsetX__P2788_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = Sprite_x__P2355_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 901; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___2033);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >> 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 902; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 1895;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1895]) return breakpoint(s, 17, 1895, r0);
  case 17:
    s.tmp_0 = scene_Camera_offsetY__P2790_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = Sprite_y__P2357_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 903; s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___2033);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >> 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 904; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 1896;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1896]) return breakpoint(s, 20, 1896, r0);
  case 20:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = scene_Camera_offsetX__P2787_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 905; s.pc = 21; return s.tmp_2;
  case 21:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetX"] = (s.tmp_1);
    s.lastBrkId = 1897;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1897]) return breakpoint(s, 22, 1897, r0);
  case 22:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = scene_Camera_offsetY__P2789_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 906; s.pc = 23; return s.tmp_2;
  case 23:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetY"] = (s.tmp_1);
    s.lastBrkId = 1898;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1898]) return breakpoint(s, 24, 1898, r0);
  case 24:
    r0 = s.arg0.fields["shakeStartTime"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1899;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1899]) return breakpoint(s, 25, 1899, r0);
  case 25:
    r0 = pxsim.control.millis();
    s.tmp_2 = r0;
    r0 = s.arg0.fields["shakeStartTime"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.elapsed___12832 = (r0);
    s.lastBrkId = 1900;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1900]) return breakpoint(s, 26, 1900, r0);
  case 26:
    r0 = s.arg0.fields["shakeDuration"];
    s.tmp_1 = r0;
    r0 = (s.elapsed___12832 >= s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1901;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1901]) return breakpoint(s, 27, 1901, r0);
  case 27:
    r0 = (s.arg0).fields["shakeStartTime"] = (undefined);
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 1902;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1902]) return breakpoint(s, 28, 1902, r0);
  case 28:
    r0 = s.arg0.fields["shakeDuration"];
    s.tmp_0 = r0;
    r0 = (s.elapsed___12832 / s.tmp_0);
    s.percentComplete___12846 = (r0);
    s.lastBrkId = 1903;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1903]) return breakpoint(s, 29, 1903, r0);
  case 29:
    s.damp___12853 = (1);
    s.lastBrkId = 1904;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1904]) return breakpoint(s, 30, 1904, r0);
  case 30:
    r0 = (s.percentComplete___12846 >= 0.75);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1905;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1905]) return breakpoint(s, 31, 1905, r0);
  case 31:
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_1.arg0 = 0;
    r0 = (1 - s.percentComplete___12846);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 907; s.pc = 32; return s.tmp_1;
  case 32:
    r0 = s.retval;
    s.damp___12853 = (r0);
  case 4:
  case 5:
    s.lastBrkId = 1906;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1906]) return breakpoint(s, 33, 1906, r0);
  case 33:
    r0 = s.arg0.fields["shakeAmplitude"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.damp___12853);
    s.f___12862 = (r0);
    s.lastBrkId = 1907;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1907]) return breakpoint(s, 34, 1907, r0);
  case 34:
    r0 = pxsim.Math_.random();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.f___12862);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 0);
    s.x___12868 = (r0);
    s.lastBrkId = 1908;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1908]) return breakpoint(s, 35, 1908, r0);
  case 35:
    r0 = pxsim.Math_.random();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.f___12862);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 0);
    s.y___12875 = (r0);
    s.lastBrkId = 1909;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1909]) return breakpoint(s, 36, 1909, r0);
  case 36:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["drawOffsetX"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.x___12868);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetX"] = (s.tmp_1);
    s.lastBrkId = 1910;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1910]) return breakpoint(s, 37, 1910, r0);
  case 37:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["drawOffsetY"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.y___12875);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetY"] = (s.tmp_1);
  case 6:
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_update__P2799.info = {"start":2563,"length":1418,"line":83,"column":8,"endLine":116,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"update","argumentNames":["this"]}

function scene_Camera_update__P2799_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_update__P2799, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  elapsed___12832: undefined,
  percentComplete___12846: undefined,
  damp___12853: undefined,
  f___12862: undefined,
  x___12868: undefined,
  y___12875: undefined,
  arg0: undefined,
} }





function scene_Camera_offsetY__P2790(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___12894 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2782_VT)) failedCast(r0);
    s.lastBrkId = 1882;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1882]) return breakpoint(s, 5, 1882, r0);
  case 5:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 890; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.scene___12894 = (r0);
    s.lastBrkId = 1883;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1883]) return breakpoint(s, 7, 1883, r0);
  case 7:
    r0 = s.scene___12894.fields["tileMap"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = tiles_TileMap_enabled__P2748_mk(s);
    r0 = s.scene___12894.fields["tileMap"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 891; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1884;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1884]) return breakpoint(s, 9, 1884, r0);
  case 9:
    s.tmp_3 = r0 = s.arg0;
    s.tmp_6 = tiles_TileMap_offsetY__P2743_mk(s);
    r0 = s.scene___12894.fields["tileMap"];
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.arg1;
    s.callLocIdx = 892; s.pc = 10; return s.tmp_6;
  case 10:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim.Math_.floor(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_offsetY"] = (s.tmp_4);
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1885;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1885]) return breakpoint(s, 11, 1885, r0);
  case 11:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.Math_.floor(s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_offsetY"] = (s.tmp_1);
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_offsetY__P2790.info = {"start":1152,"length":291,"line":39,"column":8,"endLine":46,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetY","argumentNames":["this","v"]}

function scene_Camera_offsetY__P2790_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetY__P2790, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  scene___12894: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_enabled__P2748(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2736_VT)) failedCast(r0);
    s.lastBrkId = 1804;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1804]) return breakpoint(s, 1, 1804, r0);
  case 1:
    r0 = s.arg0.fields["_map"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_enabled__P2748.info = {"start":10177,"length":66,"line":351,"column":8,"endLine":353,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"enabled","argumentNames":["this"]}
tiles_TileMap_enabled__P2748.isGetter = true;

function tiles_TileMap_enabled__P2748_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_enabled__P2748, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function tiles_TileMap_offsetY__P2743(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2736_VT)) failedCast(r0);
    s.lastBrkId = 1800;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1800]) return breakpoint(s, 1, 1800, r0);
  case 1:
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_3 = tiles_TileMap_areaHeight__P2745_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 829; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___2033);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 - s.tmp_4);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 830; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 831; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_offsetY__P2743.info = {"start":9630,"length":123,"line":329,"column":8,"endLine":331,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"offsetY","argumentNames":["this","value"]}

function tiles_TileMap_offsetY__P2743_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_offsetY__P2743, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_areaHeight__P2745(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2736_VT)) failedCast(r0);
    s.lastBrkId = 1802;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1802]) return breakpoint(s, 3, 1802, r0);
  case 3:
    r0 = s.arg0.fields["_map"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = tiles_TileMapData_height__P2721_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 834; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 835; s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 << s.tmp_3);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_areaHeight__P2745.info = {"start":9864,"length":93,"line":337,"column":8,"endLine":339,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"areaHeight","argumentNames":["this"]}

function tiles_TileMap_areaHeight__P2745_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_areaHeight__P2745, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function tiles_TileMap_scale__P2739(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2736_VT)) failedCast(r0);
    s.lastBrkId = 1794;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1794]) return breakpoint(s, 1, 1794, r0);
  case 1:
    r0 = s.arg0.fields["_scale"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_scale__P2739.info = {"start":9205,"length":55,"line":310,"column":8,"endLine":312,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this"]}
tiles_TileMap_scale__P2739.isGetter = true;

function tiles_TileMap_scale__P2739_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_scale__P2739, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_TileMapData_height__P2721(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2718_VT)) failedCast(r0);
    s.lastBrkId = 1771;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1771]) return breakpoint(s, 1, 1771, r0);
  case 1:
    r0 = s.arg0.fields["_height"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMapData_height__P2721.info = {"start":6489,"length":65,"line":218,"column":8,"endLine":220,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"height","argumentNames":["this"]}
tiles_TileMapData_height__P2721.isGetter = true;

function tiles_TileMapData_height__P2721_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_height__P2721, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Camera_offsetY__P2789(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2782_VT)) failedCast(r0);
    s.lastBrkId = 1881;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1881]) return breakpoint(s, 1, 1881, r0);
  case 1:
    r0 = s.arg0.fields["_offsetY"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_offsetY__P2789.info = {"start":1084,"length":59,"line":36,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetY","argumentNames":["this"]}
scene_Camera_offsetY__P2789.isGetter = true;

function scene_Camera_offsetY__P2789_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetY__P2789, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Camera_offsetX__P2788(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___12954 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2782_VT)) failedCast(r0);
    s.lastBrkId = 1877;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1877]) return breakpoint(s, 5, 1877, r0);
  case 5:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 887; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.scene___12954 = (r0);
    s.lastBrkId = 1878;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1878]) return breakpoint(s, 7, 1878, r0);
  case 7:
    r0 = s.scene___12954.fields["tileMap"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = tiles_TileMap_enabled__P2748_mk(s);
    r0 = s.scene___12954.fields["tileMap"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 888; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1879;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1879]) return breakpoint(s, 9, 1879, r0);
  case 9:
    s.tmp_3 = r0 = s.arg0;
    s.tmp_6 = tiles_TileMap_offsetX__P2742_mk(s);
    r0 = s.scene___12954.fields["tileMap"];
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.arg1;
    s.callLocIdx = 889; s.pc = 10; return s.tmp_6;
  case 10:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim.Math_.floor(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_offsetX"] = (s.tmp_4);
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1880;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1880]) return breakpoint(s, 11, 1880, r0);
  case 11:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.Math_.floor(s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_offsetX"] = (s.tmp_1);
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_offsetX__P2788.info = {"start":784,"length":291,"line":28,"column":8,"endLine":35,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetX","argumentNames":["this","v"]}

function scene_Camera_offsetX__P2788_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetX__P2788, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  scene___12954: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_offsetX__P2742(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2736_VT)) failedCast(r0);
    s.lastBrkId = 1799;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1799]) return breakpoint(s, 1, 1799, r0);
  case 1:
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_3 = tiles_TileMap_areaWidth__P2744_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 826; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___2033);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 - s.tmp_4);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 827; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 828; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_offsetX__P2742.info = {"start":9499,"length":121,"line":325,"column":8,"endLine":327,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"offsetX","argumentNames":["this","value"]}

function tiles_TileMap_offsetX__P2742_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_offsetX__P2742, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_areaWidth__P2744(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2736_VT)) failedCast(r0);
    s.lastBrkId = 1801;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1801]) return breakpoint(s, 3, 1801, r0);
  case 3:
    r0 = s.arg0.fields["_map"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = tiles_TileMapData_width__P2720_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 832; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 833; s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 << s.tmp_3);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_areaWidth__P2744.info = {"start":9763,"length":91,"line":333,"column":8,"endLine":335,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"areaWidth","argumentNames":["this"]}

function tiles_TileMap_areaWidth__P2744_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_areaWidth__P2744, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function tiles_TileMapData_width__P2720(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2718_VT)) failedCast(r0);
    s.lastBrkId = 1770;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1770]) return breakpoint(s, 1, 1770, r0);
  case 1:
    r0 = s.arg0.fields["_width"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMapData_width__P2720.info = {"start":6416,"length":63,"line":214,"column":8,"endLine":216,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"width","argumentNames":["this"]}
tiles_TileMapData_width__P2720.isGetter = true;

function tiles_TileMapData_width__P2720_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_width__P2720, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Camera_offsetX__P2787(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2782_VT)) failedCast(r0);
    s.lastBrkId = 1876;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1876]) return breakpoint(s, 1, 1876, r0);
  case 1:
    r0 = s.arg0.fields["_offsetX"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_offsetX__P2787.info = {"start":716,"length":59,"line":25,"column":8,"endLine":27,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetX","argumentNames":["this"]}
scene_Camera_offsetX__P2787.isGetter = true;

function scene_Camera_offsetX__P2787_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetX__P2787, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Sprite_y__P2357(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1058;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1058]) return breakpoint(s, 1, 1058, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    s.tmp_1 = Fx_add__P157_mk(s);
    r0 = s.arg0.fields["_y"];
    s.tmp_1.arg0 = r0;
    s.tmp_2 = Fx_div__P162_mk(s);
    r0 = s.arg0.fields["_height"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 512;
    s.callLocIdx = 315; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 316; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 317; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_y__P2357.info = {"start":2893,"length":100,"line":121,"column":4,"endLine":123,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"y","argumentNames":["this"]}
Sprite_y__P2357.isGetter = true;

function Sprite_y__P2357_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_y__P2357, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Fx_toFloat__P173(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 231;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[231]) return breakpoint(s, 1, 231, r0);
  case 1:
    r0 = (s.arg0 / 256);
    return leave(s, r0)
  default: oops()
} } }
Fx_toFloat__P173.info = {"start":2470,"length":81,"line":77,"column":4,"endLine":79,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"toFloat","argumentNames":["v"]}

function Fx_toFloat__P173_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_toFloat__P173, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Fx_div__P162(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 216;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[216]) return breakpoint(s, 1, 216, r0);
  case 1:
    r0 = (s.arg0 << 8);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_div__P162.info = {"start":1145,"length":129,"line":35,"column":4,"endLine":37,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"div","argumentNames":["a","b"]}

function Fx_div__P162_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_div__P162, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_add__P157(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 211;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[211]) return breakpoint(s, 1, 211, r0);
  case 1:
    r0 = (s.arg0 + s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_add__P157.info = {"start":511,"length":118,"line":20,"column":4,"endLine":22,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"add","argumentNames":["a","b"]}

function Fx_add__P157_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_add__P157, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_x__P2355(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1056;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1056]) return breakpoint(s, 1, 1056, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    s.tmp_1 = Fx_add__P157_mk(s);
    r0 = s.arg0.fields["_x"];
    s.tmp_1.arg0 = r0;
    s.tmp_2 = Fx_div__P162_mk(s);
    r0 = s.arg0.fields["_width"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 512;
    s.callLocIdx = 310; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 311; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 312; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_x__P2355.info = {"start":2537,"length":99,"line":110,"column":4,"endLine":112,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"x","argumentNames":["this"]}
Sprite_x__P2355.isGetter = true;

function Sprite_x__P2355_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_x__P2355, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function PhysicsEngine_move__P2518(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2512_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_move__P2518.info = {"start":351,"length":20,"line":18,"column":4,"endLine":18,"endColumn":24,"fileName":"pxt_modules/game/physics.ts","functionName":"move","argumentNames":["this","dt"]}

function PhysicsEngine_move__P2518_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_move__P2518, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function PhysicsEngine_draw__P2517(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2512_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_draw__P2517.info = {"start":279,"length":10,"line":15,"column":4,"endLine":15,"endColumn":14,"fileName":"pxt_modules/game/physics.ts","functionName":"draw","argumentNames":["this"]}

function PhysicsEngine_draw__P2517_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_draw__P2517, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller___update__P2166(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.dtms___13256 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 875;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[875]) return breakpoint(s, 1, 875, r0);
  case 1:
    r0 = (s.arg0 * 1000);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 | 0);
    s.dtms___13256 = (r0);
    s.lastBrkId = 876;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[876]) return breakpoint(s, 2, 876, r0);
  case 2:
    r0 = pxsim_pxtcore_mkAction(1, controller___update_inline__P13263);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.dtms___13256);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_2 = controller_players__P2130_mk(s);
    s.callLocIdx = 201; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 203; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller___update__P2166.info = {"start":13733,"length":137,"line":414,"column":4,"endLine":417,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"__update","argumentNames":["dt"]}

function controller___update__P2166_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller___update__P2166, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  dtms___13256: undefined,
  arg0: undefined,
} }





function controller___update_inline__P13263(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = controller_Controller___update__P2164_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    s.callLocIdx = 202; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller___update_inline__P13263.info = {"start":13835,"length":27,"line":416,"column":26,"endLine":416,"endColumn":53,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["ctrl"]}

function controller___update_inline__P13263_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller___update_inline__P13263, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller___update__P2164(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2135_VT)) failedCast(r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.arg1);
    s.arg1 = (s.tmp_0);
    s.lastBrkId = 873;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[873]) return breakpoint(s, 1, 873, r0);
  case 1:
    s.tmp_1 = r0 = s.arg1;
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 0);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_1, s.tmp_2);
    s.lastBrkId = 874;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[874]) return breakpoint(s, 2, 874, r0);
  case 2:
    r0 = pxsim_pxtcore_mkAction(1, controller_Controller___update_inline__P13276);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    r0 = s.arg0.fields["buttons"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 200; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___update__P2164.info = {"start":13211,"length":124,"line":396,"column":8,"endLine":399,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"__update","argumentNames":["this","dtms"]}

function controller_Controller___update__P2164_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___update__P2164, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Controller___update_inline__P13276(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = controller_Button___update__P2204_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 199; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___update_inline__P13276.info = {"start":13298,"length":25,"line":398,"column":33,"endLine":398,"endColumn":58,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["btn"]}

function controller_Controller___update_inline__P13276_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___update_inline__P13276, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Button___update__P2204(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.delay___13292 = undefined;
    s.interval___13301 = undefined;
    s.count___13314 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2190_VT)) failedCast(r0);
    s.lastBrkId = 931;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[931]) return breakpoint(s, 12, 931, r0);
  case 12:
    r0 = s.arg0.fields["_pressed"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 932;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[932]) return breakpoint(s, 13, 932, r0);
  case 13:
    { step = 11; continue; }
  case 1:
  case 2:
    s.lastBrkId = 933;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[933]) return breakpoint(s, 14, 933, r0);
  case 14:
    s.tmp_3 = r0 = s.arg0;
    r0 = s.tmp_3.fields["_pressedElasped"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 + s.arg1);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_pressedElasped"] = (s.tmp_4);
    s.lastBrkId = 934;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[934]) return breakpoint(s, 15, 934, r0);
  case 15:
    r0 = s.arg0.fields["repeatDelay"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = globals.defaultRepeatDelay___4935;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["repeatDelay"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.delay___13292 = (s.tmp_2);
    s.lastBrkId = 935;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[935]) return breakpoint(s, 16, 935, r0);
  case 16:
    r0 = s.arg0.fields["repeatInterval"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = globals.defaultRepeatInterval___4937;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["repeatInterval"];
  case 6:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.interval___13301 = (s.tmp_2);
    s.lastBrkId = 936;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[936]) return breakpoint(s, 17, 936, r0);
  case 17:
    r0 = s.arg0.fields["_pressedElasped"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < s.delay___13292);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 937;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[937]) return breakpoint(s, 18, 937, r0);
  case 18:
    { step = 11; continue; }
  case 7:
  case 8:
    s.lastBrkId = 938;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[938]) return breakpoint(s, 19, 938, r0);
  case 19:
    r0 = s.arg0.fields["_pressedElasped"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - s.delay___13292);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.interval___13301);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / s.interval___13301);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.floor(s.tmp_2);
    s.count___13314 = (r0);
    s.lastBrkId = 939;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[939]) return breakpoint(s, 20, 939, r0);
  case 20:
    r0 = s.arg0.fields["_repeatCount"];
    s.tmp_1 = r0;
    r0 = (s.count___13314 != s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 940;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[940]) return breakpoint(s, 21, 940, r0);
  case 21:
    s.tmp_2 = controller_Button_raiseButtonRepeat__P4924_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 215; s.pc = 22; return s.tmp_2;
  case 22:
    r0 = s.retval;
    s.lastBrkId = 941;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[941]) return breakpoint(s, 23, 941, r0);
  case 23:
    r0 = (s.arg0).fields["_repeatCount"] = (s.count___13314);
  case 9:
  case 10:
  case 11:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button___update__P2204.info = {"start":7291,"length":704,"line":217,"column":8,"endLine":234,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"__update","argumentNames":["this","dtms"]}

function controller_Button___update__P2204_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button___update__P2204, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  delay___13292: undefined,
  interval___13301: undefined,
  count___13314: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_raiseButtonRepeat__P4924(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2190_VT)) failedCast(r0);
    s.lastBrkId = 912;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[912]) return breakpoint(s, 3, 912, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals._userEventsEnabled___4933);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 913;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[913]) return breakpoint(s, 4, 913, r0);
  case 4:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2054, s.tmp_0);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 914;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[914]) return breakpoint(s, 5, 914, r0);
  case 5:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2055, s.tmp_0);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_raiseButtonRepeat__P4924.info = {"start":3303,"length":211,"line":110,"column":8,"endLine":115,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"raiseButtonRepeat","argumentNames":["this"]}

function controller_Button_raiseButtonRepeat__P4924_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_raiseButtonRepeat__P4924, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_players__P2130(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 797;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[797]) return breakpoint(s, 1, 797, r0);
  case 1:
    s.tmp_0 = controller__player1__P2129_mk(s);
    s.callLocIdx = 160; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 798;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[798]) return breakpoint(s, 3, 798, r0);
  case 3:
    s.tmp_0 = helpers_arrayFilter__P110_mk(s);
    s.tmp_0.arg0 = globals._players___4853;
    s.tmp_0.arg1 = controller_players_inline__P13246;
    s.callLocIdx = 161; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
controller_players__P2130.info = {"start":1645,"length":144,"line":53,"column":4,"endLine":56,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"players","argumentNames":[]}

function controller_players__P2130_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_players__P2130, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_players_inline__P13246(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
controller_players_inline__P13246.info = {"start":1767,"length":14,"line":55,"column":31,"endLine":55,"endColumn":45,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["ctrl"]}

function controller_players_inline__P13246_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_players_inline__P13246, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function controller__moveSprites__P2134(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 799;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[799]) return breakpoint(s, 1, 799, r0);
  case 1:
    s.lastBrkId = 800;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[800]) return breakpoint(s, 2, 800, r0);
  case 2:
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_1 = controller_players__P2130_mk(s);
    s.callLocIdx = 162; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = controller__moveSprites_inline__P13045;
    s.callLocIdx = 164; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller__moveSprites__P2134.info = {"start":2005,"length":180,"line":67,"column":4,"endLine":71,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"_moveSprites","argumentNames":[]}

function controller__moveSprites__P2134_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller__moveSprites__P2134, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function controller__moveSprites_inline__P13045(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = controller_Controller___preUpdate__P2163_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 163; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller__moveSprites_inline__P13045.info = {"start":2151,"length":26,"line":70,"column":26,"endLine":70,"endColumn":52,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["ctrl"]}

function controller__moveSprites_inline__P13045_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller__moveSprites_inline__P13045, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller___preUpdate__P2163(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.deadSprites___13052 = undefined;
    s.svx___13053 = undefined;
    s.svy___13054 = undefined;
    s.svxInCricle___13089 = undefined;
    s.svyInCircle___13091 = undefined;
    s.sq___13093 = undefined;
    s.scale___13108 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2135_VT)) failedCast(r0);
    s.lastBrkId = 832;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[832]) return breakpoint(s, 18, 832, r0);
  case 18:
    s.tmp_3 = controller_Controller__controlledSprites__P2140_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 174; s.pc = 19; return s.tmp_3;
  case 19:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 833;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[833]) return breakpoint(s, 20, 833, r0);
  case 20:
    { step = 17; continue; }
  case 1:
  case 2:
    r0 = pxsim_pxtrt.mklocRef();
    s.deadSprites___13052 = (r0);
    s.lastBrkId = 834;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[834]) return breakpoint(s, 21, 834, r0);
  case 21:
    r0 = pxsim_pxtrt_stlocRef(s.deadSprites___13052, false);
    r0 = pxsim_pxtrt.mklocRef();
    s.svx___13053 = (r0);
    s.lastBrkId = 835;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[835]) return breakpoint(s, 22, 835, r0);
  case 22:
    r0 = pxsim_pxtrt_stlocRef(s.svx___13053, 0);
    r0 = pxsim_pxtrt.mklocRef();
    s.svy___13054 = (r0);
    s.lastBrkId = 836;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[836]) return breakpoint(s, 23, 836, r0);
  case 23:
    r0 = pxsim_pxtrt_stlocRef(s.svy___13054, 0);
    s.lastBrkId = 837;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[837]) return breakpoint(s, 24, 837, r0);
  case 24:
    r0 = s.arg0.fields["analog"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 838;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[838]) return breakpoint(s, 25, 838, r0);
  case 25:
    s.tmp_1 = r0 = s.svx___13053;
    s.tmp_5 = controller_Button_pressureLevel__P2202_mk(s);
    s.tmp_6 = controller_Controller_right__P2145_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 175; s.pc = 27; return s.tmp_6;
  case 27:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 176; s.pc = 26; return s.tmp_5;
  case 26:
    r0 = s.retval;
    s.tmp_4 = r0;
    s.tmp_8 = controller_Button_pressureLevel__P2202_mk(s);
    s.tmp_9 = controller_Controller_left__P2144_mk(s);
    s.tmp_9.arg0 = s.arg0;
    s.callLocIdx = 177; s.pc = 29; return s.tmp_9;
  case 29:
    r0 = s.retval;
    s.tmp_8.arg0 = r0;
    s.callLocIdx = 178; s.pc = 28; return s.tmp_8;
  case 28:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_4 - s.tmp_7);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_1, s.tmp_2);
    s.lastBrkId = 839;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[839]) return breakpoint(s, 30, 839, r0);
  case 30:
    s.tmp_0 = r0 = s.svy___13054;
    s.tmp_4 = controller_Button_pressureLevel__P2202_mk(s);
    s.tmp_5 = controller_Controller_down__P2147_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.callLocIdx = 179; s.pc = 32; return s.tmp_5;
  case 32:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 180; s.pc = 31; return s.tmp_4;
  case 31:
    r0 = s.retval;
    s.tmp_3 = r0;
    s.tmp_7 = controller_Button_pressureLevel__P2202_mk(s);
    s.tmp_8 = controller_Controller_up__P2146_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 181; s.pc = 34; return s.tmp_8;
  case 34:
    r0 = s.retval;
    s.tmp_7.arg0 = r0;
    s.callLocIdx = 182; s.pc = 33; return s.tmp_7;
  case 33:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_3 - s.tmp_6);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    { step = 12; continue; }
  case 3:
    s.lastBrkId = 840;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[840]) return breakpoint(s, 35, 840, r0);
  case 35:
    s.tmp_1 = controller_Button__C2190_v0_1_mk(s);
    s.tmp_2 = controller_Controller_right__P2145_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 183; s.pc = 37; return s.tmp_2;
  case 37:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    if (!checkSubtype(s.tmp_1.arg0, controller_Button__C2190_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.isPressed;
    s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = 256;
    { step = 5; continue; }
  case 4:
    r0 = 0;
  case 5:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_5 = controller_Button__C2190_v0_1_mk(s);
    s.tmp_6 = controller_Controller_left__P2144_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 184; s.pc = 39; return s.tmp_6;
  case 39:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    if (!checkSubtype(s.tmp_5.arg0, controller_Button__C2190_VT)) failedCast(s.tmp_5.arg0);
    s.tmp_5.fn = s.tmp_5.arg0.vtable.methods.isPressed;
    s.pc = 38; return s.tmp_5;
  case 38:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 6; continue; }
    r0 = 256;
    { step = 7; continue; }
  case 6:
    r0 = 0;
  case 7:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    s.tmp_8 = r0 = s.svx___13053;
    r0 = (s.tmp_3 - s.tmp_7);
    s.tmp_9 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_8, s.tmp_9);
    s.lastBrkId = 841;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[841]) return breakpoint(s, 40, 841, r0);
  case 40:
    s.tmp_1 = controller_Button__C2190_v0_1_mk(s);
    s.tmp_2 = controller_Controller_down__P2147_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 185; s.pc = 42; return s.tmp_2;
  case 42:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    if (!checkSubtype(s.tmp_1.arg0, controller_Button__C2190_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.isPressed;
    s.pc = 41; return s.tmp_1;
  case 41:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    r0 = 256;
    { step = 9; continue; }
  case 8:
    r0 = 0;
  case 9:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_5 = controller_Button__C2190_v0_1_mk(s);
    s.tmp_6 = controller_Controller_up__P2146_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 186; s.pc = 44; return s.tmp_6;
  case 44:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    if (!checkSubtype(s.tmp_5.arg0, controller_Button__C2190_VT)) failedCast(s.tmp_5.arg0);
    s.tmp_5.fn = s.tmp_5.arg0.vtable.methods.isPressed;
    s.pc = 43; return s.tmp_5;
  case 43:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 10; continue; }
    r0 = 256;
    { step = 11; continue; }
  case 10:
    r0 = 0;
  case 11:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    s.tmp_8 = r0 = s.svy___13054;
    r0 = (s.tmp_3 - s.tmp_7);
    s.tmp_9 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_8, s.tmp_9);
  case 12:
    r0 = pxsim_pxtrt.mklocRef();
    s.svxInCricle___13089 = (r0);
    s.lastBrkId = 842;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[842]) return breakpoint(s, 45, 842, r0);
  case 45:
    s.tmp_0 = r0 = s.svxInCricle___13089;
    r0 = pxsim_pxtrt_ldlocRef(s.svx___13053);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = pxsim_pxtrt.mklocRef();
    s.svyInCircle___13091 = (r0);
    s.lastBrkId = 843;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[843]) return breakpoint(s, 46, 843, r0);
  case 46:
    s.tmp_0 = r0 = s.svyInCircle___13091;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___13054);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 844;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[844]) return breakpoint(s, 47, 844, r0);
  case 47:
    r0 = pxsim_pxtrt_ldlocRef(s.svx___13053);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.svx___13053);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___13054);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___13054);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 * s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 + s.tmp_3);
    s.sq___13093 = (r0);
    s.lastBrkId = 845;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[845]) return breakpoint(s, 48, 845, r0);
  case 48:
    r0 = (s.sq___13093 > 65536);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 846;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[846]) return breakpoint(s, 49, 846, r0);
  case 49:
    r0 = (65536 / s.sq___13093);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.sqrt(s.tmp_1);
    s.scale___13108 = (r0);
    s.lastBrkId = 847;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[847]) return breakpoint(s, 50, 847, r0);
  case 50:
    s.tmp_0 = r0 = s.svxInCricle___13089;
    s.tmp_3 = r0 = s.scale___13108;
    r0 = pxsim_pxtrt_ldlocRef(s.svx___13053);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 * s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 848;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[848]) return breakpoint(s, 51, 848, r0);
  case 51:
    s.tmp_0 = r0 = s.svyInCircle___13091;
    s.tmp_3 = r0 = s.scale___13108;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___13054);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 * s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
  case 13:
  case 14:
    s.lastBrkId = 849;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[849]) return breakpoint(s, 52, 849, r0);
  case 52:
    r0 = pxsim_pxtcore_mkAction(5, controller_Controller___preUpdate_inline__P13126);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.deadSprites___13052);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.svx___13053);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.svy___13054);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.svxInCricle___13089);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 4, s.svyInCircle___13091);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_2 = controller_Controller__controlledSprites__P2140_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 187; s.pc = 54; return s.tmp_2;
  case 54:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 195; s.pc = 53; return s.tmp_1;
  case 53:
    r0 = s.retval;
    s.lastBrkId = 871;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[871]) return breakpoint(s, 55, 871, r0);
  case 55:
    r0 = pxsim_pxtrt_ldlocRef(s.deadSprites___13052);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 872;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[872]) return breakpoint(s, 56, 872, r0);
  case 56:
    s.tmp_1 = controller_Controller__controlledSprites__P2141_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = helpers_arrayFilter__P110_mk(s);
    s.tmp_3 = controller_Controller__controlledSprites__P2140_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 196; s.pc = 59; return s.tmp_3;
  case 59:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = controller_Controller___preUpdate_inline__P13183;
    s.callLocIdx = 197; s.pc = 58; return s.tmp_2;
  case 58:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 198; s.pc = 57; return s.tmp_1;
  case 57:
    r0 = s.retval;
  case 15:
  case 16:
  case 17:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___preUpdate__P2163.info = {"start":10666,"length":2535,"line":330,"column":8,"endLine":394,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"__preUpdate","argumentNames":["this"]}

function controller_Controller___preUpdate__P2163_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___preUpdate__P2163, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  deadSprites___13052: undefined,
  svx___13053: undefined,
  svy___13054: undefined,
  svxInCricle___13089: undefined,
  svyInCircle___13091: undefined,
  sq___13093: undefined,
  scale___13108: undefined,
  arg0: undefined,
} }





function controller_Controller___preUpdate_inline__P13126(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___13129 = undefined;
    s.vx___13130 = undefined;
    s.vy___13131 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 850;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[850]) return breakpoint(s, 22, 850, r0);
  case 22:
    s.tmp_0 = if_s_1_mk(s);
    s.tmp_1 = r0 = s.arg0;
    s.tmp_0.arg0 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "s");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["s"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["s"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 188; s.pc = 23; return s.tmp_0; }
    }
  case 23:
    r0 = s.retval;
    s.s___13129 = (r0);
    s.lastBrkId = 851;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[851]) return breakpoint(s, 24, 851, r0);
  case 24:
    s.tmp_2 = if_vx_1_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "vx");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["vx"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["vx"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 189; s.pc = 25; return s.tmp_2; }
    }
  case 25:
    r0 = s.retval;
    s.vx___13130 = (r0);
    s.lastBrkId = 852;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[852]) return breakpoint(s, 26, 852, r0);
  case 26:
    s.tmp_3 = if_vy_1_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "vy");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["vy"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["vy"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 190; s.pc = 27; return s.tmp_3; }
    }
  case 27:
    r0 = s.retval;
    s.vy___13131 = (r0);
    s.lastBrkId = 853;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[853]) return breakpoint(s, 28, 853, r0);
  case 28:
    r0 = s.s___13129.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 854;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[854]) return breakpoint(s, 29, 854, r0);
  case 29:
    r0 = pxsim_pxtrt_stlocRef(s.caps[0], true);
    s.lastBrkId = 855;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[855]) return breakpoint(s, 30, 855, r0);
  case 30:
    { step = 21; continue; }
  case 1:
  case 2:
    s.lastBrkId = 856;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[856]) return breakpoint(s, 31, 856, r0);
  case 31:
    r0 = s.arg0.fields["_inputLastFrame"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 857;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[857]) return breakpoint(s, 32, 857, r0);
  case 32:
    r0 = pxsim_numops_toBoolDecr(s.vx___13130);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 858;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[858]) return breakpoint(s, 33, 858, r0);
  case 33:
    r0 = (s.s___13129).fields["_vx"] = (0);
  case 3:
  case 4:
    s.lastBrkId = 859;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[859]) return breakpoint(s, 34, 859, r0);
  case 34:
    r0 = pxsim_numops_toBoolDecr(s.vy___13131);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 860;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[860]) return breakpoint(s, 35, 860, r0);
  case 35:
    r0 = (s.s___13129).fields["_vy"] = (0);
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 861;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[861]) return breakpoint(s, 36, 861, r0);
  case 36:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 9:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 19; continue; }
    s.lastBrkId = 862;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[862]) return breakpoint(s, 37, 862, r0);
  case 37:
    s.tmp_2 = r0 = s.vx___13130;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 11; continue; }
    r0 = s.tmp_2;
    { step = 12; continue; }
  case 11:
    r0 = s.vy___13131;
  case 12:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 863;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[863]) return breakpoint(s, 38, 863, r0);
  case 38:
    s.tmp_4 = r0 = s.s___13129;
    s.tmp_6 = Fx_imul__P161_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[3]);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.vx___13130;
    s.callLocIdx = 191; s.pc = 39; return s.tmp_6;
  case 39:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["_vx"] = (s.tmp_5);
    s.lastBrkId = 864;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[864]) return breakpoint(s, 40, 864, r0);
  case 40:
    s.tmp_0 = r0 = s.s___13129;
    s.tmp_2 = Fx_imul__P161_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[4]);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.vy___13131;
    s.callLocIdx = 192; s.pc = 41; return s.tmp_2;
  case 41:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
    { step = 18; continue; }
  case 13:
    s.lastBrkId = 865;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[865]) return breakpoint(s, 42, 865, r0);
  case 42:
    r0 = pxsim_numops_toBoolDecr(s.vx___13130);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 866;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[866]) return breakpoint(s, 43, 866, r0);
  case 43:
    s.tmp_0 = r0 = s.s___13129;
    s.tmp_2 = Fx_imul__P161_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.vx___13130;
    s.callLocIdx = 193; s.pc = 44; return s.tmp_2;
  case 44:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vx"] = (s.tmp_1);
    { step = 17; continue; }
  case 14:
    s.lastBrkId = 867;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[867]) return breakpoint(s, 45, 867, r0);
  case 45:
    r0 = pxsim_numops_toBoolDecr(s.vy___13131);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 868;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[868]) return breakpoint(s, 46, 868, r0);
  case 46:
    s.tmp_0 = r0 = s.s___13129;
    s.tmp_2 = Fx_imul__P161_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.vy___13131;
    s.callLocIdx = 194; s.pc = 47; return s.tmp_2;
  case 47:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
  case 15:
  case 16:
  case 17:
  case 18:
    s.lastBrkId = 869;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[869]) return breakpoint(s, 48, 869, r0);
  case 48:
    r0 = (s.arg0).fields["_inputLastFrame"] = (true);
    { step = 20; continue; }
  case 19:
    s.lastBrkId = 870;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[870]) return breakpoint(s, 49, 870, r0);
  case 49:
    r0 = (s.arg0).fields["_inputLastFrame"] = (false);
  case 20:
  case 21:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___preUpdate_inline__P13126.info = {"start":11849,"length":1171,"line":361,"column":44,"endLine":389,"endColumn":13,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["controlledSprite"]}

function controller_Controller___preUpdate_inline__P13126_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___preUpdate_inline__P13126, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  s___13129: undefined,
  vx___13130: undefined,
  vy___13131: undefined,
  arg0: undefined,
} }





function controller_Controller___preUpdate_inline__P13183(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["s"];
    r0 = r0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___preUpdate_inline__P13183.info = {"start":13147,"length":42,"line":393,"column":28,"endLine":393,"endColumn":70,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["s"]}

function controller_Controller___preUpdate_inline__P13183_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___preUpdate_inline__P13183, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function controller_Button_pressureLevel__P2202(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2190_VT)) failedCast(r0);
    s.lastBrkId = 918;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[918]) return breakpoint(s, 6, 918, r0);
  case 6:
    r0 = pxsim.control.deviceDalVersion();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == "sim");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 919;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[919]) return breakpoint(s, 7, 919, r0);
  case 7:
    s.tmp_3 = controller_Button__C2190_v0_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_3.arg0, controller_Button__C2190_VT)) failedCast(s.tmp_3.arg0);
    s.tmp_3.fn = s.tmp_3.arg0.vtable.methods.isPressed;
    s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 1; continue; }
    r0 = 512;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
    { step = 5; continue; }
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 920;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[920]) return breakpoint(s, 9, 920, r0);
  case 9:
    r0 = s.arg0.fields["id"];
    s.tmp_5 = r0;
    r0 = pxsim_pxtcore.pressureLevelByButtonId(s.tmp_5, -1);
    { step = 5; continue; }
  case 4:
    r0 = undefined;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
controller_Button_pressureLevel__P2202.info = {"start":6453,"length":311,"line":192,"column":8,"endLine":199,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"pressureLevel","argumentNames":["this"]}

function controller_Button_pressureLevel__P2202_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_pressureLevel__P2202, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function controller_Controller_down__P2147(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2135_VT)) failedCast(r0);
    s.lastBrkId = 826;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[826]) return breakpoint(s, 1, 826, r0);
  case 1:
    s.tmp_0 = controller_Controller_button__P4918_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 4;
    s.callLocIdx = 172; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_down__P2147.info = {"start":4131,"length":77,"line":145,"column":8,"endLine":147,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"down","argumentNames":["this"]}
controller_Controller_down__P2147.isGetter = true;

function controller_Controller_down__P2147_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_down__P2147, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller_button__P4918(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2135_VT)) failedCast(r0);
    s.lastBrkId = 827;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[827]) return breakpoint(s, 1, 827, r0);
  case 1:
    r0 = s.arg0.fields["buttons"];
    s.tmp_0 = r0;
    r0 = (s.arg1 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
controller_Controller_button__P4918.info = {"start":6666,"length":105,"line":220,"column":8,"endLine":222,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"button","argumentNames":["this","button"]}

function controller_Controller_button__P4918_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_button__P4918, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Controller_up__P2146(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2135_VT)) failedCast(r0);
    s.lastBrkId = 825;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[825]) return breakpoint(s, 1, 825, r0);
  case 1:
    s.tmp_0 = controller_Controller_button__P4918_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 2;
    s.callLocIdx = 171; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_up__P2146.info = {"start":3979,"length":73,"line":137,"column":8,"endLine":139,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"up","argumentNames":["this"]}
controller_Controller_up__P2146.isGetter = true;

function controller_Controller_up__P2146_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_up__P2146, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller_right__P2145(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2135_VT)) failedCast(r0);
    s.lastBrkId = 824;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[824]) return breakpoint(s, 1, 824, r0);
  case 1:
    s.tmp_0 = controller_Controller_button__P4918_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 3;
    s.callLocIdx = 170; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_right__P2145.info = {"start":3823,"length":79,"line":129,"column":8,"endLine":131,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"right","argumentNames":["this"]}
controller_Controller_right__P2145.isGetter = true;

function controller_Controller_right__P2145_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_right__P2145, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller_left__P2144(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2135_VT)) failedCast(r0);
    s.lastBrkId = 823;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[823]) return breakpoint(s, 1, 823, r0);
  case 1:
    s.tmp_0 = controller_Controller_button__P4918_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 1;
    s.callLocIdx = 169; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_left__P2144.info = {"start":3666,"length":77,"line":121,"column":8,"endLine":123,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"left","argumentNames":["this"]}
controller_Controller_left__P2144.isGetter = true;

function controller_Controller_left__P2144_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_left__P2144, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller__controlledSprites__P2141(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2135_VT)) failedCast(r0);
    s.lastBrkId = 821;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[821]) return breakpoint(s, 1, 821, r0);
  case 1:
    s.tmp_1 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 168; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["controlledSprites"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_2, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller__controlledSprites__P2141.info = {"start":3300,"length":134,"line":105,"column":8,"endLine":107,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"_controlledSprites","argumentNames":["this","cps"]}

function controller_Controller__controlledSprites__P2141_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller__controlledSprites__P2141, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Controller__controlledSprites__P2140(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2135_VT)) failedCast(r0);
    s.lastBrkId = 820;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[820]) return breakpoint(s, 1, 820, r0);
  case 1:
    s.tmp_1 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 167; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["controlledSprites"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller__controlledSprites__P2140.info = {"start":3158,"length":132,"line":101,"column":8,"endLine":103,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"_controlledSprites","argumentNames":["this"]}
controller_Controller__controlledSprites__P2140.isGetter = true;

function controller_Controller__controlledSprites__P2140_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller__controlledSprites__P2140, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Fx_imul__P161(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 215;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[215]) return breakpoint(s, 1, 215, r0);
  case 1:
    r0 = pxsim.Math_.imul(s.arg0, s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_imul__P161.info = {"start":1010,"length":130,"line":32,"column":4,"endLine":34,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"imul","argumentNames":["a","b"]}

function Fx_imul__P161_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_imul__P161, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function power_checkDeepSleep__P1931(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___11796 = undefined;
    s.to___11799 = undefined;
    s.lastBrkId = 560;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[560]) return breakpoint(s, 11, 560, r0);
  case 11:
    s.tmp_0 = power_init__P4762_mk(s);
    s.callLocIdx = 83; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 561;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[561]) return breakpoint(s, 13, 561, r0);
  case 13:
    s.tmp_0 = r0 = globals._poked___4760;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.p___11796 = (s.tmp_1);
    s.lastBrkId = 562;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[562]) return breakpoint(s, 14, 562, r0);
  case 14:
    s.tmp_0 = r0 = globals._timeout___4761;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = 0;
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.to___11799 = (s.tmp_1);
    s.lastBrkId = 563;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[563]) return breakpoint(s, 15, 563, r0);
  case 15:
    r0 = (s.to___11799 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = pxsim.control.millis();
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.p___11796);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.to___11799);
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_3;
    { step = 8; continue; }
  case 7:
    r0 = pxsim.control.isUSBInitialized();
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
  case 8:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 564;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[564]) return breakpoint(s, 16, 564, r0);
  case 16:
    r0 = pxsim_pxtcore.deepSleep();
  case 9:
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
power_checkDeepSleep__P1931.info = {"start":1087,"length":298,"line":36,"column":4,"endLine":46,"endColumn":5,"fileName":"pxt_modules/power/power.ts","functionName":"checkDeepSleep","argumentNames":[]}

function power_checkDeepSleep__P1931_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: power_checkDeepSleep__P1931, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  p___11796: undefined,
  to___11799: undefined,
} }





function power_init__P4762(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 565;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[565]) return breakpoint(s, 8, 565, r0);
  case 8:
    r0 = (globals._timeout___4761 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 566;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[566]) return breakpoint(s, 9, 566, r0);
  case 9:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 567;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[567]) return breakpoint(s, 10, 567, r0);
  case 10:
    r0 = pxsim_pxtcore.getConfig(212, -1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * 1000);
    globals._timeout___4761 = (r0);
    s.lastBrkId = 568;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[568]) return breakpoint(s, 11, 568, r0);
  case 11:
    r0 = (globals._timeout___4761 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = (globals._timeout___4761 < 300000);
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 569;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[569]) return breakpoint(s, 12, 569, r0);
  case 12:
    globals._timeout___4761 = (300000);
  case 5:
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
power_init__P4762.info = {"start":1610,"length":376,"line":57,"column":4,"endLine":66,"endColumn":5,"fileName":"pxt_modules/power/power.ts","functionName":"init","argumentNames":[]}

function power_init__P4762_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: power_init__P4762, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function power_poke__P1930(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 558;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[558]) return breakpoint(s, 1, 558, r0);
  case 1:
    s.tmp_0 = power_init__P4762_mk(s);
    s.callLocIdx = 82; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 559;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[559]) return breakpoint(s, 3, 559, r0);
  case 3:
    r0 = pxsim.control.millis();
    globals._poked___4760 = (r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
power_poke__P1930.info = {"start":795,"length":81,"line":26,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/power/power.ts","functionName":"poke","argumentNames":[]}

function power_poke__P1930_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: power_poke__P1930, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function control_EventContext_deltaTime__P400(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.lastBrkId = 409;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[409]) return breakpoint(s, 1, 409, r0);
  case 1:
    r0 = s.arg0.fields["deltaTimeMillis"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 1000);
    return leaveAccessor(s, r0)
  default: oops()
} } }
control_EventContext_deltaTime__P400.info = {"start":2135,"length":75,"line":71,"column":8,"endLine":73,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"deltaTime","argumentNames":["this"]}
control_EventContext_deltaTime__P400.isGetter = true;

function control_EventContext_deltaTime__P400_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_deltaTime__P400, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_Scene_constructor__P2867(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2844_VT)) failedCast(r0);
    r0 = (s.arg0).fields["previousScene"] = (s.arg2);
    s.lastBrkId = 1917;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1917]) return breakpoint(s, 1, 1917, r0);
  case 1:
    r0 = (s.arg0).fields["eventContext"] = (s.arg1);
    s.lastBrkId = 1918;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1918]) return breakpoint(s, 2, 1918, r0);
  case 2:
    r0 = (s.arg0).fields["flags"] = (0);
    s.lastBrkId = 1919;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1919]) return breakpoint(s, 3, 1919, r0);
  case 3:
    r0 = pxsim_pxtcore_mkClassInstance(ArcadePhysicsEngine__C2528_VT);
    s.tmp_0 = r0;
    s.tmp_1 = ArcadePhysicsEngine_constructor__P2529_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 500;
    s.tmp_1.arg2 = 2;
    s.tmp_1.arg3 = 4;
    s.callLocIdx = 912; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    r0 = (s.arg0).fields["physicsEngine"] = (s.tmp_0);
    s.lastBrkId = 1920;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1920]) return breakpoint(s, 5, 1920, r0);
  case 5:
    r0 = pxsim_pxtcore_mkClassInstance(scene_Camera__C2782_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_Camera_constructor__P2786_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 913; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    r0 = (s.arg0).fields["camera"] = (s.tmp_0);
    s.lastBrkId = 1921;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1921]) return breakpoint(s, 7, 1921, r0);
  case 7:
    r0 = pxsim_pxtcore_mkClassInstance(scene_Background__C2670_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_Background_constructor__P2674_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    r0 = s.arg0.fields["camera"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 914; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    r0 = (s.arg0).fields["background"] = (s.tmp_0);
    s.lastBrkId = 1922;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1922]) return breakpoint(s, 9, 1922, r0);
  case 9:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["destroyedHandlers"] = (s.tmp_1);
    s.lastBrkId = 1923;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1923]) return breakpoint(s, 10, 1923, r0);
  case 10:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["createdHandlers"] = (s.tmp_1);
    s.lastBrkId = 1924;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1924]) return breakpoint(s, 11, 1924, r0);
  case 11:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["overlapHandlers"] = (s.tmp_1);
    s.lastBrkId = 1925;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1925]) return breakpoint(s, 12, 1925, r0);
  case 12:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["overlapMap"] = (s.tmp_1);
    s.lastBrkId = 1926;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1926]) return breakpoint(s, 13, 1926, r0);
  case 13:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["tileOverlapHandlers"] = (s.tmp_1);
    s.lastBrkId = 1927;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1927]) return breakpoint(s, 14, 1927, r0);
  case 14:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["collisionHandlers"] = (s.tmp_1);
    s.lastBrkId = 1928;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1928]) return breakpoint(s, 15, 1928, r0);
  case 15:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["wallCollisionHandlers"] = (s.tmp_1);
    s.lastBrkId = 1929;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1929]) return breakpoint(s, 16, 1929, r0);
  case 16:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["gameForeverHandlers"] = (s.tmp_1);
    s.lastBrkId = 1930;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1930]) return breakpoint(s, 17, 1930, r0);
  case 17:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["spritesByKind"] = (s.tmp_1);
    s.lastBrkId = 1931;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1931]) return breakpoint(s, 18, 1931, r0);
  case 18:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["controlledSprites"] = (s.tmp_1);
    s.lastBrkId = 1932;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1932]) return breakpoint(s, 19, 1932, r0);
  case 19:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["buttonEventHandlers"] = (s.tmp_1);
    s.lastBrkId = 1933;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1933]) return breakpoint(s, 20, 1933, r0);
  case 20:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_data"] = (s.tmp_1);
    s.lastBrkId = 1934;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1934]) return breakpoint(s, 21, 1934, r0);
  case 21:
    r0 = (s.arg0).fields["_millis"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_constructor__P2867.info = {"start":3586,"length":836,"line":106,"column":8,"endLine":125,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":["this","eventContext","previousScene"]}

function scene_Scene_constructor__P2867_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_constructor__P2867, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_Camera_constructor__P2786(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2782_VT)) failedCast(r0);
    s.lastBrkId = 1872;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1872]) return breakpoint(s, 1, 1872, r0);
  case 1:
    r0 = (s.arg0).fields["_offsetX"] = (0);
    s.lastBrkId = 1873;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1873]) return breakpoint(s, 2, 1873, r0);
  case 2:
    r0 = (s.arg0).fields["_offsetY"] = (0);
    s.lastBrkId = 1874;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1874]) return breakpoint(s, 3, 1874, r0);
  case 3:
    r0 = (s.arg0).fields["drawOffsetX"] = (0);
    s.lastBrkId = 1875;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1875]) return breakpoint(s, 4, 1875, r0);
  case 4:
    r0 = (s.arg0).fields["drawOffsetY"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_constructor__P2786.info = {"start":550,"length":156,"line":17,"column":8,"endLine":23,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"inline","argumentNames":["this"]}

function scene_Camera_constructor__P2786_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_constructor__P2786, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Background_constructor__P2674(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C2670_VT)) failedCast(r0);
    s.lastBrkId = 1680;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1680]) return breakpoint(s, 1, 1680, r0);
  case 1:
    r0 = (s.arg0).fields["color"] = (0);
    s.lastBrkId = 1681;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1681]) return breakpoint(s, 2, 1681, r0);
  case 2:
    r0 = (s.arg0).fields["camera"] = (s.arg1);
    s.lastBrkId = 1682;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1682]) return breakpoint(s, 3, 1682, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_layers"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Background_constructor__P2674.info = {"start":367,"length":132,"line":20,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"inline","argumentNames":["this","camera"]}

function scene_Background_constructor__P2674_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_constructor__P2674, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_constructor__P2529(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2528_VT)) failedCast(r0);
    s.lastBrkId = 1345;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1345]) return breakpoint(s, 1, 1345, r0);
  case 1:
    s.tmp_0 = PhysicsEngine_constructor__P2513_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 532; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 1346;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1346]) return breakpoint(s, 3, 1346, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["sprites"] = (s.tmp_1);
    s.lastBrkId = 1347;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1347]) return breakpoint(s, 4, 1347, r0);
  case 4:
    r0 = pxsim_pxtcore_mkClassInstance(sprites_SpriteMap__C2447_VT);
    s.tmp_0 = r0;
    s.tmp_1 = sprites_SpriteMap_constructor__P2448_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 533; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    r0 = (s.arg0).fields["map"] = (s.tmp_0);
    s.lastBrkId = 1348;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1348]) return breakpoint(s, 6, 1348, r0);
  case 6:
    s.tmp_0 = ArcadePhysicsEngine_maxSpeed__P2531_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 534; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 1349;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1349]) return breakpoint(s, 8, 1349, r0);
  case 8:
    s.tmp_0 = ArcadePhysicsEngine_maxStep__P2535_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg3;
    s.callLocIdx = 535; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 1350;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1350]) return breakpoint(s, 10, 1350, r0);
  case 10:
    s.tmp_0 = ArcadePhysicsEngine_minStep__P2533_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 536; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_constructor__P2529.info = {"start":1601,"length":277,"line":58,"column":4,"endLine":65,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["this","maxVelocity","minSingleStep","maxSingleStep"]}

function ArcadePhysicsEngine_constructor__P2529_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_constructor__P2529, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function ArcadePhysicsEngine_maxStep__P2535(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2528_VT)) failedCast(r0);
    s.lastBrkId = 1357;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1357]) return breakpoint(s, 1, 1357, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 543; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["maxSingleStep"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxStep__P2535.info = {"start":2329,"length":67,"line":88,"column":4,"endLine":90,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxStep","argumentNames":["this","v"]}

function ArcadePhysicsEngine_maxStep__P2535_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxStep__P2535, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_maxStep__P2534(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2528_VT)) failedCast(r0);
    s.lastBrkId = 1356;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1356]) return breakpoint(s, 1, 1356, r0);
  case 1:
    s.tmp_0 = Fx_toInt__P172_mk(s);
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 542; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxStep__P2534.info = {"start":2249,"length":74,"line":84,"column":4,"endLine":86,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxStep","argumentNames":["this"]}
ArcadePhysicsEngine_maxStep__P2534.isGetter = true;

function ArcadePhysicsEngine_maxStep__P2534_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxStep__P2534, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Fx_toInt__P172(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 230;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[230]) return breakpoint(s, 1, 230, r0);
  case 1:
    r0 = (s.arg0 + 128);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 8);
    return leave(s, r0)
  default: oops()
} } }
Fx_toInt__P172.info = {"start":2379,"length":86,"line":74,"column":4,"endLine":76,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"toInt","argumentNames":["v"]}

function Fx_toInt__P172_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_toInt__P172, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_minStep__P2533(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2528_VT)) failedCast(r0);
    s.lastBrkId = 1355;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1355]) return breakpoint(s, 1, 1355, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 541; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["minSingleStep"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_minStep__P2533.info = {"start":2176,"length":67,"line":80,"column":4,"endLine":82,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"minStep","argumentNames":["this","v"]}

function ArcadePhysicsEngine_minStep__P2533_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_minStep__P2533, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_minStep__P2532(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2528_VT)) failedCast(r0);
    s.lastBrkId = 1354;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1354]) return breakpoint(s, 1, 1354, r0);
  case 1:
    s.tmp_0 = Fx_toInt__P172_mk(s);
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 540; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_minStep__P2532.info = {"start":2096,"length":74,"line":76,"column":4,"endLine":78,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"minStep","argumentNames":["this"]}
ArcadePhysicsEngine_minStep__P2532.isGetter = true;

function ArcadePhysicsEngine_minStep__P2532_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_minStep__P2532, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_maxSpeed__P2531(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2528_VT)) failedCast(r0);
    s.lastBrkId = 1352;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1352]) return breakpoint(s, 1, 1352, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 538; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["maxVelocity"] = (s.tmp_1);
    s.lastBrkId = 1353;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1353]) return breakpoint(s, 3, 1353, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx_neg__P155_mk(s);
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 539; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["maxNegativeVelocity"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxSpeed__P2531.info = {"start":1963,"length":127,"line":71,"column":4,"endLine":74,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxSpeed","argumentNames":["this","v"]}

function ArcadePhysicsEngine_maxSpeed__P2531_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxSpeed__P2531, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_neg__P155(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 209;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[209]) return breakpoint(s, 1, 209, r0);
  case 1:
    r0 = (0 - s.arg0);
    return leave(s, r0)
  default: oops()
} } }
Fx_neg__P155.info = {"start":311,"length":88,"line":14,"column":4,"endLine":16,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"neg","argumentNames":["a"]}

function Fx_neg__P155_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_neg__P155, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function ArcadePhysicsEngine_maxSpeed__P2530(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2528_VT)) failedCast(r0);
    s.lastBrkId = 1351;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1351]) return breakpoint(s, 1, 1351, r0);
  case 1:
    s.tmp_0 = Fx_toInt__P172_mk(s);
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 537; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxSpeed__P2530.info = {"start":1884,"length":73,"line":67,"column":4,"endLine":69,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxSpeed","argumentNames":["this"]}
ArcadePhysicsEngine_maxSpeed__P2530.isGetter = true;

function ArcadePhysicsEngine_maxSpeed__P2530_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxSpeed__P2530, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function PhysicsEngine_constructor__P2513(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2512_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_constructor__P2513.info = {"start":26,"length":21,"line":1,"column":4,"endLine":2,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["this"]}

function PhysicsEngine_constructor__P2513_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_constructor__P2513, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_SpriteMap_constructor__P2448(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2447_VT)) failedCast(r0);
    s.lastBrkId = 1240;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1240]) return breakpoint(s, 1, 1240, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["buckets"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_constructor__P2448.info = {"start":237,"length":56,"line":8,"column":8,"endLine":10,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"inline","argumentNames":["this"]}

function sprites_SpriteMap_constructor__P2448_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_constructor__P2448, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function control_pushEventContext__P409(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctx___13355 = undefined;
    s.n___13361 = undefined;
    s.lastBrkId = 489;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[489]) return breakpoint(s, 5, 489, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals.eventContexts___4637);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 490;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[490]) return breakpoint(s, 6, 490, r0);
  case 6:
    r0 = pxsim_Array__mk();
    globals.eventContexts___4637 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 491;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[491]) return breakpoint(s, 7, 491, r0);
  case 7:
    s.tmp_0 = control_eventContext__P408_mk(s);
    s.callLocIdx = 60; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.ctx___13355 = (r0);
    s.lastBrkId = 492;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[492]) return breakpoint(s, 9, 492, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(s.ctx___13355);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 493;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[493]) return breakpoint(s, 10, 493, r0);
  case 10:
    s.tmp_0 = control_EventContext_unregister__P402_mk(s);
    s.tmp_0.arg0 = s.ctx___13355;
    s.callLocIdx = 61; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 494;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[494]) return breakpoint(s, 12, 494, r0);
  case 12:
    r0 = pxsim_pxtcore_mkClassInstance(control_EventContext__C395_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_EventContext_constructor__P399_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 62; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
    s.n___13361 = (s.tmp_0);
    s.lastBrkId = 495;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[495]) return breakpoint(s, 14, 495, r0);
  case 14:
    r0 = pxsim_Array__push(globals.eventContexts___4637, s.n___13361);
    s.lastBrkId = 496;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[496]) return breakpoint(s, 15, 496, r0);
  case 15:
    r0 = s.n___13361;
    return leave(s, r0)
  default: oops()
} } }
control_pushEventContext__P409.info = {"start":7310,"length":340,"line":220,"column":4,"endLine":231,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"pushEventContext","argumentNames":[]}

function control_pushEventContext__P409_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_pushEventContext__P409, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  ctx___13355: undefined,
  n___13361: undefined,
} }





function control_EventContext_unregister__P402(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.h___13390 = undefined;
    s.unnamed1302___U1 = undefined;
    s.unnamed1303___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.lastBrkId = 458;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[458]) return breakpoint(s, 3, 458, r0);
  case 3:
    s.h___13390 = (undefined);
    r0 = s.arg0.fields["handlers"];
    s.unnamed1302___U1 = (r0);
    s.unnamed1303___U2 = (0);
    s.lastBrkId = 459;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[459]) return breakpoint(s, 4, 459, r0);
  case 4:
  case 1:
    s.tmp_0 = r0 = s.unnamed1303___U2;
    r0 = pxsim_Array__length(s.unnamed1302___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1302___U1, s.unnamed1303___U2);
    s.h___13390 = (r0);
    s.lastBrkId = 460;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[460]) return breakpoint(s, 5, 460, r0);
  case 5:
    s.lastBrkId = 461;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[461]) return breakpoint(s, 6, 461, r0);
  case 6:
    s.tmp_2 = control_EventHandler_unregister__P4631_mk(s);
    s.tmp_2.arg0 = s.h___13390;
    s.callLocIdx = 56; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    r0 = (s.unnamed1303___U2 + 1);
    s.unnamed1303___U2 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed1302___U1 = (undefined);
    s.lastBrkId = 462;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[462]) return breakpoint(s, 8, 462, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["frameWorker"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["frameWorker"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_unregister__P402.info = {"start":4721,"length":131,"line":141,"column":8,"endLine":145,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"unregister","argumentNames":["this"]}

function control_EventContext_unregister__P402_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_unregister__P402, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  h___13390: undefined,
  unnamed1302___U1: undefined,
  unnamed1303___U2: undefined,
  arg0: undefined,
} }





function control_EventHandler_unregister__P4631(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventHandler__C4629_VT)) failedCast(r0);
    s.lastBrkId = 400;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[400]) return breakpoint(s, 1, 400, r0);
  case 1:
    r0 = s.arg0.fields["src"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["value"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["flags"];
    s.tmp_2 = r0;
    r0 = pxsim.control.internalOnEvent(s.tmp_0, s.tmp_1, control_doNothing__P4633, s.tmp_2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_unregister__P4631.info = {"start":1136,"length":106,"line":36,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"unregister","argumentNames":["this"]}

function control_EventHandler_unregister__P4631_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_unregister__P4631, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function control_doNothing__P4633(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_doNothing__P4633.info = {"start":1254,"length":24,"line":41,"column":4,"endLine":41,"endColumn":28,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"doNothing","argumentNames":[]}

function control_doNothing__P4633_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_doNothing__P4633, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function control_EventContext_constructor__P399(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.lastBrkId = 401;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[401]) return breakpoint(s, 3, 401, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["handlers"] = (s.tmp_1);
    s.lastBrkId = 402;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[402]) return breakpoint(s, 4, 402, r0);
  case 4:
    r0 = (s.arg0).fields["framesInSample"] = (0);
    s.lastBrkId = 403;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[403]) return breakpoint(s, 5, 403, r0);
  case 5:
    r0 = (s.arg0).fields["timeInSample"] = (0);
    s.lastBrkId = 404;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[404]) return breakpoint(s, 6, 404, r0);
  case 6:
    r0 = (s.arg0).fields["deltaTimeMillis"] = (0);
    s.lastBrkId = 405;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[405]) return breakpoint(s, 7, 405, r0);
  case 7:
    r0 = (s.arg0).fields["frameWorker"] = (0);
    s.lastBrkId = 406;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[406]) return breakpoint(s, 8, 406, r0);
  case 8:
    r0 = (s.arg0).fields["idleCallbacks"] = (undefined);
    s.lastBrkId = 407;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[407]) return breakpoint(s, 9, 407, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(globals.control_EventContext_lastStats___397);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 408;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[408]) return breakpoint(s, 10, 408, r0);
  case 10:
    r0 = pxsim_String_.mkEmpty();
    globals.control_EventContext_lastStats___397 = (r0);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_constructor__P399.info = {"start":1778,"length":347,"line":59,"column":8,"endLine":69,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":["this"]}

function control_EventContext_constructor__P399_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_constructor__P399, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function controller_pauseUntilAnyButtonIsPressed__P2206(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 968;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[968]) return breakpoint(s, 1, 968, r0);
  case 1:
    setupResume(s, 2);
    pxsim.control.waitForEvent(2049, 0);
    checkResumeConsumed();
    return;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_pauseUntilAnyButtonIsPressed__P2206.info = {"start":9968,"length":96,"line":287,"column":4,"endLine":289,"endColumn":5,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"pauseUntilAnyButtonIsPressed","argumentNames":[]}

function controller_pauseUntilAnyButtonIsPressed__P2206_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_pauseUntilAnyButtonIsPressed__P2206, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function game_setWaitAnyButton__P3001(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2019;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2019]) return breakpoint(s, 1, 2019, r0);
  case 1:
    globals.__waitAnyButton___5141 = (s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_setWaitAnyButton__P3001.info = {"start":4236,"length":83,"line":127,"column":4,"endLine":129,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"setWaitAnyButton","argumentNames":["f"]}

function game_setWaitAnyButton__P3001_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_setWaitAnyButton__P3001, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Math_FastRandom_constructor__P3062(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C3060_VT)) failedCast(r0);
    s.lastBrkId = 2068;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2068]) return breakpoint(s, 3, 2068, r0);
  case 3:
    r0 = (s.arg1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2069;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2069]) return breakpoint(s, 4, 2069, r0);
  case 4:
    r0 = pxsim.Math_.randomRange(1, 65535);
    s.arg1 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 2070;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2070]) return breakpoint(s, 5, 2070, r0);
  case 5:
    r0 = (s.arg0).fields["seed"] = (s.arg1);
    s.lastBrkId = 2071;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2071]) return breakpoint(s, 6, 2071, r0);
  case 6:
    r0 = (s.arg0).fields["lfsr"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_constructor__P3062.info = {"start":1425,"length":175,"line":44,"column":8,"endLine":48,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"inline","argumentNames":["this","seed"]}

function Math_FastRandom_constructor__P3062_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_constructor__P3062, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_consoleOverlay_listener__P5472(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2277;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2277]) return breakpoint(s, 8, 2277, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___5437);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2278;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2278]) return breakpoint(s, 9, 2278, r0);
  case 9:
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2279;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2279]) return breakpoint(s, 10, 2279, r0);
  case 10:
    s.tmp_4 = helpers_arrayForEach__P109_mk(s);
    s.tmp_5 = helpers_arrayFilter__P110_mk(s);
    s.tmp_6 = helpers_stringSplit__P122_mk(s);
    s.tmp_6.arg0 = s.arg1;
    s.tmp_6.arg1 = "\n";
    s.tmp_6.arg2 = undefined;
    s.callLocIdx = 1133; s.pc = 13; return s.tmp_6;
  case 13:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = forEach_inline__P13593;
    s.callLocIdx = 1134; s.pc = 12; return s.tmp_5;
  case 12:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = game_consoleOverlay_listener_inline__P13598;
    s.callLocIdx = 1136; s.pc = 11; return s.tmp_4;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2285;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2285]) return breakpoint(s, 14, 2285, r0);
  case 14:
    r0 = pxsim_Array__length(globals.consoleStrings___5437);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > globals.consoleLines___5450);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2286;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2286]) return breakpoint(s, 15, 2286, r0);
  case 15:
    s.tmp_2 = helpers_arraySplice__P100_mk(s);
    s.tmp_2.arg0 = globals.consoleStrings___5437;
    s.tmp_2.arg1 = 0;
    r0 = pxsim_Array__length(globals.consoleStrings___5437);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - globals.consoleLines___5450);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 1137; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
  case 5:
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_listener__P5472.info = {"start":787,"length":571,"line":26,"column":4,"endLine":42,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"listener","argumentNames":["priority","text"]}

function game_consoleOverlay_listener__P5472_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_listener__P5472, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function forEach_inline__P13593(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P13593.info = {"start":985,"length":14,"line":32,"column":20,"endLine":32,"endColumn":34,"fileName":"pxt_modules/game/console.ts","functionName":"inline","argumentNames":["line"]}

function forEach_inline__P13593_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P13593, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function game_consoleOverlay_listener_inline__P13598(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.j___13600 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2280;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2280]) return breakpoint(s, 3, 2280, r0);
  case 3:
    s.j___13600 = (0);
    s.lastBrkId = 2281;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2281]) return breakpoint(s, 4, 2281, r0);
  case 4:
  case 1:
    s.lastBrkId = 2282;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2282]) return breakpoint(s, 5, 2282, r0);
  case 5:
    s.tmp_1 = r0 = s.j___13600;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2283;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2283]) return breakpoint(s, 6, 2283, r0);
  case 6:
    s.tmp_3 = r0 = globals.consoleStrings___5437;
    s.tmp_5 = helpers_stringSlice__P119_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_5.arg1 = s.j___13600;
    r0 = (s.j___13600 + globals.consoleColumns___5460);
    s.tmp_5.arg2 = r0;
    s.callLocIdx = 1135; s.pc = 7; return s.tmp_5;
  case 7:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_4);
    s.lastBrkId = 2284;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2284]) return breakpoint(s, 8, 2284, r0);
  case 8:
    r0 = (s.j___13600 + globals.consoleColumns___5460);
    s.j___13600 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_listener_inline__P13598.info = {"start":1022,"length":189,"line":33,"column":21,"endLine":37,"endColumn":13,"fileName":"pxt_modules/game/console.ts","functionName":"inline","argumentNames":["line"]}

function game_consoleOverlay_listener_inline__P13598_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_listener_inline__P13598, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  j___13600: undefined,
  arg0: undefined,
} }





function console_addListener__P383(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 390;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[390]) return breakpoint(s, 6, 390, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array_.indexOf(globals.listeners___4615, s.arg0, undefined);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > -1);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 391;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[391]) return breakpoint(s, 7, 391, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 392;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[392]) return breakpoint(s, 8, 392, r0);
  case 8:
    r0 = pxsim_Array__push(globals.listeners___4615, s.arg0);
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_addListener__P383.info = {"start":3558,"length":197,"line":121,"column":4,"endLine":124,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"addListener","argumentNames":["listener"]}

function console_addListener__P383_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_addListener__P383, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function listeners_inline__P4614(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.control.__log(s.arg0, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
listeners_inline__P4614.info = {"start":534,"length":85,"line":25,"column":8,"endLine":25,"endColumn":93,"fileName":"pxt_modules/base/console.ts","functionName":"inline","argumentNames":["priority","text"]}

function listeners_inline__P4614_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: listeners_inline__P4614, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_register__P3107(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2237;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2237]) return breakpoint(s, 4, 2237, r0);
  case 4:
    r0 = pxsim_numops_toBoolDecr(globals.instance___5391);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2238;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2238]) return breakpoint(s, 5, 2238, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2239;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2239]) return breakpoint(s, 6, 2239, r0);
  case 6:
    s.tmp_0 = controller_Button_onEvent__P2197_mk(s);
    s.tmp_0.arg0 = globals.menu___2120;
    s.tmp_0.arg1 = 2049;
    s.tmp_0.arg2 = scene_systemMenu_showSystemMenu__P3108;
    s.callLocIdx = 1120; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_register__P3107.info = {"start":12793,"length":193,"line":382,"column":4,"endLine":386,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"register","argumentNames":[]}

function scene_systemMenu_register__P3107_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_register__P3107, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_showSystemMenu__P3108(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2240;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2240]) return breakpoint(s, 4, 2240, r0);
  case 4:
    r0 = pxsim_numops_toBoolDecr(globals.instance___5391);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2241;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2241]) return breakpoint(s, 5, 2241, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2242;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2242]) return breakpoint(s, 6, 2242, r0);
  case 6:
    s.tmp_0 = game_pushScene__P3004_mk(s);
    s.callLocIdx = 1121; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2243;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2243]) return breakpoint(s, 8, 2243, r0);
  case 8:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_PauseMenu__C3096_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_PauseMenu_constructor__P3097_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = scene_systemMenu_buildOptionList__P3104;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 1122; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    globals.instance___5391 = (s.tmp_0);
    s.lastBrkId = 2244;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2244]) return breakpoint(s, 10, 2244, r0);
  case 10:
    s.tmp_0 = scene_systemMenu_PauseMenu_show__P3098_mk(s);
    s.tmp_0.arg0 = globals.instance___5391;
    s.callLocIdx = 1123; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_showSystemMenu__P3108.info = {"start":12992,"length":172,"line":388,"column":4,"endLine":393,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"showSystemMenu","argumentNames":[]}

function scene_systemMenu_showSystemMenu__P3108_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_showSystemMenu__P3108, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function scene_systemMenu_buildOptionList__P3104(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.options___15500 = undefined;
    s.lastBrkId = 2220;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2220]) return breakpoint(s, 5, 2220, r0);
  case 5:
    r0 = pxsim_Array__mk();
    s.options___15500 = (r0);
    s.lastBrkId = 2221;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2221]) return breakpoint(s, 6, 2221, r0);
  case 6:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C3088_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P3089_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.VOLUME_DOWN_ICON___3118;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P15508;
    s.tmp_1.arg3 = scene_systemMenu_volumeDown__P5397;
    s.callLocIdx = 1103; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___15500, s.tmp_0);
    s.lastBrkId = 2222;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2222]) return breakpoint(s, 8, 2222, r0);
  case 8:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C3088_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P3089_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.VOLUME_UP_ICON___3115;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P15522;
    s.tmp_1.arg3 = scene_systemMenu_volumeUp__P5396;
    s.callLocIdx = 1105; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___15500, s.tmp_0);
    s.lastBrkId = 2223;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2223]) return breakpoint(s, 10, 2223, r0);
  case 10:
    s.tmp_1 = scene_systemMenu_setScreenBrightnessSupported__P5404_mk(s);
    s.callLocIdx = 1106; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2224;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2224]) return breakpoint(s, 12, 2224, r0);
  case 12:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C3088_VT);
    s.tmp_2 = r0;
    s.tmp_3 = scene_systemMenu_MenuOption_constructor__P3089_mk(s);
    s.tmp_3.arg0 = s.tmp_2;
    s.tmp_3.arg1 = globals.BRIGHTNESS_DOWN_ICON___3116;
    s.tmp_3.arg2 = scene_systemMenu_buildOptionList_inline__P15537;
    s.tmp_3.arg3 = scene_systemMenu_brightnessDown__P5399;
    s.callLocIdx = 1108; s.pc = 13; return s.tmp_3;
  case 13:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___15500, s.tmp_2);
    s.lastBrkId = 2225;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2225]) return breakpoint(s, 14, 2225, r0);
  case 14:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C3088_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P3089_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.BRIGHTNESS_UP_ICON___3121;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P15552;
    s.tmp_1.arg3 = scene_systemMenu_brightnessUp__P5398;
    s.callLocIdx = 1110; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___15500, s.tmp_0);
  case 1:
  case 2:
    s.lastBrkId = 2226;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2226]) return breakpoint(s, 16, 2226, r0);
  case 16:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C3088_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P3089_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.STATS_ICON___3122;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P15567;
    s.tmp_1.arg3 = scene_systemMenu_toggleStats__P5401;
    s.callLocIdx = 1111; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___15500, s.tmp_0);
    s.lastBrkId = 2227;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2227]) return breakpoint(s, 18, 2227, r0);
  case 18:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C3088_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P3089_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.CONSOLE_ICON___3120;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P15576;
    s.tmp_1.arg3 = scene_systemMenu_toggleConsole__P5402;
    s.callLocIdx = 1113; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___15500, s.tmp_0);
    s.lastBrkId = 2228;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2228]) return breakpoint(s, 20, 2228, r0);
  case 20:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C3088_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P3089_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.SLEEP_ICON___3119;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P15585;
    s.tmp_1.arg3 = scene_systemMenu_sleep__P5403;
    s.callLocIdx = 1114; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___15500, s.tmp_0);
    s.lastBrkId = 2229;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2229]) return breakpoint(s, 22, 2229, r0);
  case 22:
    r0 = pxsim_numops_toBoolDecr(globals.customMenuOptions___5392);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2230;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2230]) return breakpoint(s, 23, 2230, r0);
  case 23:
    s.tmp_0 = helpers_arrayConcat__P113_mk(s);
    s.tmp_0.arg0 = s.options___15500;
    s.tmp_0.arg1 = globals.customMenuOptions___5392;
    s.callLocIdx = 1115; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.options___15500 = (r0);
  case 3:
  case 4:
    s.lastBrkId = 2231;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2231]) return breakpoint(s, 25, 2231, r0);
  case 25:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C3088_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P3089_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.CLOSE_MENU_ICON___3117;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P15598;
    s.tmp_1.arg3 = scene_systemMenu_closeMenu__P3103;
    s.callLocIdx = 1116; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___15500, s.tmp_0);
    s.lastBrkId = 2232;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2232]) return breakpoint(s, 27, 2232, r0);
  case 27:
    r0 = s.options___15500;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList__P3104.info = {"start":10499,"length":1149,"line":334,"column":4,"endLine":354,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"buildOptionList","argumentNames":[]}

function scene_systemMenu_buildOptionList__P3104_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList__P3104, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  options___15500: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P15508(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_3 = music_volume__P1622_mk(s);
    s.callLocIdx = 1102; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("VOLUME DOWN (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P15508.info = {"start":10644,"length":39,"line":337,"column":54,"endLine":337,"endColumn":93,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P15508_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P15508, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P15522(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_3 = music_volume__P1622_mk(s);
    s.callLocIdx = 1104; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("VOLUME UP (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P15522.info = {"start":10751,"length":37,"line":338,"column":52,"endLine":338,"endColumn":89,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P15522_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P15522, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P15537(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_3 = helpers_screenBrightness__P1967_mk(s);
    s.tmp_3.arg0 = globals.screen___2033;
    s.callLocIdx = 1107; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("BRIGHTNESS DOWN (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P15537.info = {"start":10910,"length":48,"line":340,"column":62,"endLine":340,"endColumn":110,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P15537_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P15537, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P15552(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_3 = helpers_screenBrightness__P1967_mk(s);
    s.tmp_3.arg0 = globals.screen___2033;
    s.callLocIdx = 1109; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("BRIGHTNESS UP (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P15552.info = {"start":11038,"length":46,"line":341,"column":60,"endLine":341,"endColumn":106,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P15552_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P15552, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P15567(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.stats___2969);
    if (!r0) { step = 1; continue; }
    r0 = "HIDE STATS";
    { step = 2; continue; }
  case 1:
    r0 = "SHOW STATS";
  case 2:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P15567.info = {"start":11160,"length":46,"line":343,"column":48,"endLine":343,"endColumn":94,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P15567_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P15567, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P15576(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_1 = game_consoleOverlay_isVisible__P3125_mk(s);
    s.callLocIdx = 1112; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = "HIDE CONSOLE";
    { step = 2; continue; }
  case 1:
    r0 = "SHOW CONSOLE";
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P15576.info = {"start":11273,"length":71,"line":344,"column":50,"endLine":344,"endColumn":121,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P15576_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P15576, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P15585(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = "SLEEP";
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P15585.info = {"start":11411,"length":13,"line":345,"column":48,"endLine":345,"endColumn":61,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P15585_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P15585, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_systemMenu_buildOptionList_inline__P15598(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = "CLOSE";
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P15598.info = {"start":11590,"length":13,"line":351,"column":53,"endLine":351,"endColumn":66,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P15598_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P15598, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_systemMenu_setScreenBrightnessSupported__P5404(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2219;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2219]) return breakpoint(s, 1, 2219, r0);
  case 1:
    r0 = 0;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_setScreenBrightnessSupported__P5404.info = {"start":10398,"length":95,"line":330,"column":4,"endLine":332,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setScreenBrightnessSupported","argumentNames":[]}

function scene_systemMenu_setScreenBrightnessSupported__P5404_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_setScreenBrightnessSupported__P5404, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_systemMenu_sleep__P5403(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2213;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2213]) return breakpoint(s, 1, 2213, r0);
  case 1:
    r0 = pxsim_pxtcore.deepSleep();
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_sleep__P5403.info = {"start":10072,"length":51,"line":316,"column":4,"endLine":318,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"sleep","argumentNames":[]}

function scene_systemMenu_sleep__P5403_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_sleep__P5403, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_systemMenu_toggleConsole__P5402(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2209;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2209]) return breakpoint(s, 3, 2209, r0);
  case 3:
    s.tmp_1 = game_consoleOverlay_isVisible__P3125_mk(s);
    s.callLocIdx = 1095; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2210;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2210]) return breakpoint(s, 5, 2210, r0);
  case 5:
    s.tmp_2 = game_consoleOverlay_setVisible__P3127_mk(s);
    s.tmp_2.arg0 = false;
    s.tmp_2.arg1 = undefined;
    s.callLocIdx = 1096; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 2211;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2211]) return breakpoint(s, 7, 2211, r0);
  case 7:
    s.tmp_0 = game_consoleOverlay_setVisible__P3127_mk(s);
    s.tmp_0.arg0 = true;
    s.tmp_0.arg1 = undefined;
    s.callLocIdx = 1097; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 2212;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2212]) return breakpoint(s, 9, 2212, r0);
  case 9:
    s.tmp_0 = console_log__P380_mk(s);
    s.tmp_0.arg0 = "console";
    s.callLocIdx = 1098; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_toggleConsole__P5402.info = {"start":9827,"length":239,"line":307,"column":4,"endLine":314,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"toggleConsole","argumentNames":[]}

function scene_systemMenu_toggleConsole__P5402_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_toggleConsole__P5402, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function game_consoleOverlay_setVisible__P3127(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2273;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2273]) return breakpoint(s, 7, 2273, r0);
  case 7:
    s.tmp_1 = r0 = s.arg0;
    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___5437);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 != s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2274;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2274]) return breakpoint(s, 8, 2274, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    { step = 2; continue; }
  case 1:
    r0 = undefined;
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    globals.consoleStrings___5437 = (s.tmp_6);
  case 3:
  case 4:
    s.lastBrkId = 2275;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2275]) return breakpoint(s, 9, 2275, r0);
  case 9:
    r0 = (s.arg1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2276;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2276]) return breakpoint(s, 10, 2276, r0);
  case 10:
    globals.consoleColor___5436 = (s.arg1);
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_setVisible__P3127.info = {"start":562,"length":219,"line":19,"column":4,"endLine":24,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"setVisible","argumentNames":["value","col"]}

function game_consoleOverlay_setVisible__P3127_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_setVisible__P3127, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function console_log__P380(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 372;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[372]) return breakpoint(s, 1, 372, r0);
  case 1:
    s.tmp_0 = console_add__P376_mk(s);
    s.tmp_0.arg0 = 1;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 40; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_log__P380.info = {"start":1450,"length":86,"line":58,"column":4,"endLine":60,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"log","argumentNames":["value"]}

function console_log__P380_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_log__P380, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function console_add__P376(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.text___15618 = undefined;
    s.i___15627 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 363;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[363]) return breakpoint(s, 6, 363, r0);
  case 6:
    r0 = (s.arg0 < globals.minPriority___375);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 364;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[364]) return breakpoint(s, 7, 364, r0);
  case 7:
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 365;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[365]) return breakpoint(s, 8, 365, r0);
  case 8:
    s.tmp_1 = console_inspect__P382_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = 20;
    s.callLocIdx = 38; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.text___15618 = (r0);
    s.lastBrkId = 366;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[366]) return breakpoint(s, 10, 366, r0);
  case 10:
    if ((s.text___15618) && (s.text___15618).vtable) {
    setupResume(s, 11);
    pxsim_String__stringConv(s.text___15618);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.text___15618) + ""; }
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, "\n");
    s.text___15618 = (r0);
    s.lastBrkId = 367;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[367]) return breakpoint(s, 12, 367, r0);
  case 12:
    s.i___15627 = (0);
    s.lastBrkId = 368;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[368]) return breakpoint(s, 13, 368, r0);
  case 13:
  case 3:
    s.lastBrkId = 369;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[369]) return breakpoint(s, 14, 369, r0);
  case 14:
    s.tmp_1 = r0 = s.i___15627;
    r0 = pxsim_Array__length(globals.listeners___4615);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 370;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[370]) return breakpoint(s, 15, 370, r0);
  case 15:
    s.tmp_3 = lambda_3_mk(s);
    r0 = pxsim_Array__getAt(globals.listeners___4615, s.i___15627);
    s.tmp_3.argL = r0;
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.text___15618;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 39; s.pc = 16; return s.tmp_3;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 371;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[371]) return breakpoint(s, 17, 371, r0);
  case 17:
    r0 = (s.i___15627 + 1);
    s.i___15627 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_add__P376.info = {"start":632,"length":317,"line":28,"column":4,"endLine":36,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"add","argumentNames":["priority","message"]}

function console_add__P376_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_add__P376, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  text___15618: undefined,
  i___15627: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function console_inspect__P382(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.asArr___15658 = undefined;
    s.asString___15676 = undefined;
    s.keys___15688 = undefined;
    s.snipped___15692 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 373;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[373]) return breakpoint(s, 18, 373, r0);
  case 18:
    r0 = pxsim_pxtcore.typeOf(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == "string");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 374;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[374]) return breakpoint(s, 19, 374, r0);
  case 19:
    r0 = s.arg0;
    { step = 17; continue; }
    { step = 16; continue; }
  case 1:
    s.lastBrkId = 375;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[375]) return breakpoint(s, 20, 375, r0);
  case 20:
    r0 = pxsim_pxtcore.typeOf(s.arg0);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == "number");
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 376;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[376]) return breakpoint(s, 21, 376, r0);
  case 21:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_4 = r0;
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 22);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 22:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_4, s.tmp_5);
    { step = 17; continue; }
    { step = 15; continue; }
  case 2:
    s.lastBrkId = 377;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[377]) return breakpoint(s, 23, 377, r0);
  case 23:
    r0 = pxsim_Array_.isArray(s.arg0);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 378;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[378]) return breakpoint(s, 24, 378, r0);
  case 24:
    s.asArr___15658 = (s.arg0);
    s.lastBrkId = 379;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[379]) return breakpoint(s, 25, 379, r0);
  case 25:
    r0 = pxsim_Array__length(s.asArr___15658);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 380;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[380]) return breakpoint(s, 26, 380, r0);
  case 26:
    s.tmp_2 = helpers_arrayJoin__P103_mk(s);
    s.tmp_2.arg0 = s.asArr___15658;
    s.tmp_2.arg1 = ",";
    s.callLocIdx = 41; s.pc = 27; return s.tmp_2;
  case 27:
    r0 = s.retval;
    { step = 17; continue; }
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 381;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[381]) return breakpoint(s, 28, 381, r0);
  case 28:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_4 = r0;
    s.tmp_7 = helpers_arrayJoin__P103_mk(s);
    s.tmp_8 = helpers_arraySlice__P115_mk(s);
    s.tmp_8.arg0 = s.asArr___15658;
    s.tmp_8.arg1 = 0;
    s.tmp_8.arg2 = s.arg1;
    s.callLocIdx = 42; s.pc = 30; return s.tmp_8;
  case 30:
    r0 = s.retval;
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = ",";
    s.callLocIdx = 43; s.pc = 29; return s.tmp_7;
  case 29:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 31);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 31:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_4, s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, "...");
    { step = 17; continue; }
  case 4:
    { step = 14; continue; }
  case 5:
    s.lastBrkId = 382;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[382]) return breakpoint(s, 32, 382, r0);
  case 32:
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 33);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 33:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_10 = r0;
    r0 = pxsim_String__concat(s.tmp_9, s.tmp_10);
    s.asString___15676 = (r0);
    s.lastBrkId = 383;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[383]) return breakpoint(s, 34, 383, r0);
  case 34:
    r0 = (s.asString___15676 != "[object Object]");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    r0 = (s.asString___15676 != "[Object]");
  case 7:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 384;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[384]) return breakpoint(s, 35, 384, r0);
  case 35:
    r0 = s.asString___15676;
    { step = 17; continue; }
  case 8:
  case 9:
    s.lastBrkId = 385;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[385]) return breakpoint(s, 36, 385, r0);
  case 36:
    r0 = pxsim_pxtrt.keysOf(s.arg0);
    s.keys___15688 = (r0);
    s.lastBrkId = 386;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[386]) return breakpoint(s, 37, 386, r0);
  case 37:
    r0 = pxsim_Array__length(s.keys___15688);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 > s.arg1);
    s.snipped___15692 = (r0);
    s.lastBrkId = 387;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[387]) return breakpoint(s, 38, 387, r0);
  case 38:
    r0 = pxsim_numops_toBoolDecr(s.snipped___15692);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 388;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[388]) return breakpoint(s, 39, 388, r0);
  case 39:
    s.tmp_0 = helpers_arraySlice__P115_mk(s);
    s.tmp_0.arg0 = s.keys___15688;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 44; s.pc = 40; return s.tmp_0;
  case 40:
    r0 = s.retval;
    s.keys___15688 = (r0);
  case 10:
  case 11:
    s.lastBrkId = 389;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[389]) return breakpoint(s, 41, 389, r0);
  case 41:
    r0 = pxsim_pxtcore_mkAction(1, console_inspect_inline__P15709);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_numops_toBoolDecr(s.snipped___15692);
    if (!r0) { step = 12; continue; }
    r0 = "\n    ...";
    { step = 13; continue; }
  case 12:
    r0 = pxsim_String_.mkEmpty();
  case 13:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_7 = helpers_arrayReduce__P112_mk(s);
    s.tmp_7.arg0 = s.keys___15688;
    s.tmp_7.arg1 = s.tmp_0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_7.arg2 = r0;
    s.callLocIdx = 45; s.pc = 42; return s.tmp_7;
  case 42:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 43);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 43:
    r0 = s.retval;
    s.tmp_5 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 44);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 44:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_8);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 45);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 45:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("{", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, "\n}");
    { step = 17; continue; }
  case 14:
  case 15:
  case 16:
    r0 = undefined;
  case 17:
    return leave(s, r0)
  default: oops()
} } }
console_inspect__P382.info = {"start":2271,"length":1190,"line":81,"column":4,"endLine":114,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"inspect","argumentNames":["obj","maxElements"]}

function console_inspect__P382_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_inspect__P382, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  asArr___15658: undefined,
  asString___15676: undefined,
  keys___15688: undefined,
  snipped___15692: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function console_inspect_inline__P15709(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 1);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat("\n    ", s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, ": ");
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.caps[0], s.arg1);
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_6);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
console_inspect_inline__P15709.info = {"start":3293,"length":61,"line":108,"column":20,"endLine":108,"endColumn":81,"fileName":"pxt_modules/base/console.ts","functionName":"inline","argumentNames":["prev","currKey"]}

function console_inspect_inline__P15709_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_inspect_inline__P15709, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arrayReduce__P112(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___15736 = undefined;
    s.i___15739 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 99;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[99]) return breakpoint(s, 3, 99, r0);
  case 3:
    r0 = pxsim_Array__length(s.arg0);
    s.len___15736 = (r0);
    s.lastBrkId = 100;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[100]) return breakpoint(s, 4, 100, r0);
  case 4:
    s.i___15739 = (0);
    s.lastBrkId = 101;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[101]) return breakpoint(s, 5, 101, r0);
  case 5:
  case 1:
    s.lastBrkId = 102;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[102]) return breakpoint(s, 6, 102, r0);
  case 6:
    r0 = (s.i___15739 < s.len___15736);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 103;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[103]) return breakpoint(s, 7, 103, r0);
  case 7:
    s.tmp_1 = lambda_4_mk(s);
    s.tmp_1.argL = s.arg1;
    s.tmp_1.arg0 = s.arg2;
    r0 = pxsim_Array__getAt(s.arg0, s.i___15739);
    s.tmp_1.arg1 = r0;
    s.tmp_1.arg2 = s.i___15739;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 8; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.arg2 = (r0);
    s.lastBrkId = 104;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[104]) return breakpoint(s, 9, 104, r0);
  case 9:
    r0 = (s.i___15739 + 1);
    s.i___15739 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 105;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[105]) return breakpoint(s, 10, 105, r0);
  case 10:
    r0 = s.arg2;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayReduce__P112.info = {"start":8316,"length":317,"line":280,"column":4,"endLine":286,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayReduce","argumentNames":["arr","callbackfn","initialValue"]}

function helpers_arrayReduce__P112_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayReduce__P112, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  len___15736: undefined,
  i___15739: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_arrayJoin__P103(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.r___15764 = undefined;
    s.len___15765 = undefined;
    s.i___15768 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 9;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[9]) return breakpoint(s, 15, 9, r0);
  case 15:
    r0 = (s.arg1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg1 === null);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 10;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[10]) return breakpoint(s, 16, 10, r0);
  case 16:
    s.arg1 = (",");
  case 3:
  case 4:
    s.lastBrkId = 11;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[11]) return breakpoint(s, 17, 11, r0);
  case 17:
    r0 = pxsim_String_.mkEmpty();
    s.r___15764 = (r0);
    s.lastBrkId = 12;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[12]) return breakpoint(s, 18, 12, r0);
  case 18:
    r0 = pxsim_Array__length(s.arg0);
    s.len___15765 = (r0);
    s.lastBrkId = 13;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[13]) return breakpoint(s, 19, 13, r0);
  case 19:
    s.i___15768 = (0);
    s.lastBrkId = 14;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[14]) return breakpoint(s, 20, 14, r0);
  case 20:
  case 5:
    s.lastBrkId = 15;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[15]) return breakpoint(s, 21, 15, r0);
  case 21:
    r0 = (s.i___15768 < s.len___15765);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 16;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[16]) return breakpoint(s, 22, 16, r0);
  case 22:
    r0 = (s.i___15768 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_1;
    { step = 7; continue; }
  case 6:
    r0 = s.arg1;
  case 7:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 17;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[17]) return breakpoint(s, 23, 17, r0);
  case 23:
    if ((s.r___15764) && (s.r___15764).vtable) {
    setupResume(s, 24);
    pxsim_String__stringConv(s.r___15764);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___15764) + ""; }
  case 24:
    r0 = s.retval;
    s.tmp_3 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 25);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 25:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.r___15764 = (r0);
  case 8:
  case 9:
    s.lastBrkId = 18;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[18]) return breakpoint(s, 26, 18, r0);
  case 26:
    r0 = pxsim_Array__getAt(s.arg0, s.i___15768);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    r0 = pxsim_Array__getAt(s.arg0, s.i___15768);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 === null);
  case 11:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    r0 = pxsim_String_.mkEmpty();
    { step = 13; continue; }
  case 12:
    r0 = pxsim_Array__getAt(s.arg0, s.i___15768);
  case 13:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    if ((s.r___15764) && (s.r___15764).vtable) {
    setupResume(s, 27);
    pxsim_String__stringConv(s.r___15764);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___15764) + ""; }
  case 27:
    r0 = s.retval;
    s.tmp_5 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 28);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 28:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_6);
    s.r___15764 = (r0);
    s.lastBrkId = 19;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[19]) return breakpoint(s, 29, 19, r0);
  case 29:
    r0 = (s.i___15768 + 1);
    s.i___15768 = (r0);
    { step = 5; continue; }
  case 14:
    s.lastBrkId = 20;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[20]) return breakpoint(s, 30, 20, r0);
  case 30:
    r0 = s.r___15764;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayJoin__P103.info = {"start":4133,"length":432,"line":157,"column":4,"endLine":170,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayJoin","argumentNames":["arr","sep"]}

function helpers_arrayJoin__P103_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayJoin__P103, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  r___15764: undefined,
  len___15765: undefined,
  i___15768: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_toggleStats__P5401(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2206;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2206]) return breakpoint(s, 5, 2206, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals.stats___2969);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    globals.stats___2969 = (r0);
    s.lastBrkId = 2207;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2207]) return breakpoint(s, 6, 2207, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(globals.stats___2969);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = globals.control_EventContext_onStats___398;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2208;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2208]) return breakpoint(s, 7, 2208, r0);
  case 7:
    s.tmp_3 = lambda_2_mk(s);
    s.tmp_3.argL = globals.control_EventContext_onStats___398;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_3.arg0 = r0;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 1094; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_toggleStats__P5401.info = {"start":9642,"length":179,"line":300,"column":4,"endLine":305,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"toggleStats","argumentNames":[]}

function scene_systemMenu_toggleStats__P5401_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_toggleStats__P5401, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_systemMenu_brightnessDown__P5399(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2203;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2203]) return breakpoint(s, 1, 2203, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_setScreenBrightness__P5400_mk(s);
    s.tmp_2 = helpers_screenBrightness__P1967_mk(s);
    s.tmp_2.arg0 = globals.screen___2033;
    s.callLocIdx = 1089; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 5);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1090; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_brightnessDown__P5399.info = {"start":9198,"length":87,"line":289,"column":4,"endLine":291,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"brightnessDown","argumentNames":[]}

function scene_systemMenu_brightnessDown__P5399_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_brightnessDown__P5399, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_setScreenBrightness__P5400(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2204;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2204]) return breakpoint(s, 1, 2204, r0);
  case 1:
    s.tmp_0 = helpers_setScreenBrightness__P1966_mk(s);
    s.tmp_0.arg0 = globals.screen___2033;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 1091; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2205;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2205]) return breakpoint(s, 3, 2205, r0);
  case 3:
    s.tmp_0 = settings_writeNumber__P2064_mk(s);
    s.tmp_0.arg0 = "#brightness";
    s.tmp_1 = helpers_screenBrightness__P1967_mk(s);
    s.tmp_1.arg0 = globals.screen___2033;
    s.callLocIdx = 1092; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1093; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_setScreenBrightness__P5400.info = {"start":9291,"length":345,"line":293,"column":4,"endLine":298,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setScreenBrightness","argumentNames":["b"]}

function scene_systemMenu_setScreenBrightness__P5400_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_setScreenBrightness__P5400, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function settings_writeNumber__P2064(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 739;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[739]) return breakpoint(s, 1, 739, r0);
  case 1:
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    s.tmp_1 = settings_writeBuffer__P2061_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = msgpack_packNumberArray__P184_mk(s);
    s.tmp_2.arg0 = s.tmp_0;
    s.callLocIdx = 132; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 133; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeNumber__P2064.info = {"start":2265,"length":122,"line":89,"column":4,"endLine":91,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeNumber","argumentNames":["key","value"]}

function settings_writeNumber__P2064_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeNumber__P2064, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function settings_writeBuffer__P2061(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 735;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[735]) return breakpoint(s, 3, 735, r0);
  case 3:
    r0 = pxsim.settings._set(s.arg0, s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 736;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[736]) return breakpoint(s, 4, 736, r0);
  case 4:
    r0 = pxsim.settings._userClean();
    s.lastBrkId = 737;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[737]) return breakpoint(s, 5, 737, r0);
  case 5:
    r0 = pxsim_pxtrt.panic(920);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeBuffer__P2061.info = {"start":1538,"length":290,"line":63,"column":4,"endLine":70,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeBuffer","argumentNames":["key","value"]}

function settings_writeBuffer__P2061_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeBuffer__P2061, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function msgpack_packNumberArray__P184(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.off___15854 = undefined;
    s.n___15856 = undefined;
    s.unnamed1294___U2 = undefined;
    s.unnamed1295___U3 = undefined;
    s.buf___15866 = undefined;
    s.n___15872 = undefined;
    s.unnamed1296___U6 = undefined;
    s.unnamed1297___U7 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 279;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[279]) return breakpoint(s, 5, 279, r0);
  case 5:
    s.off___15854 = (0);
    s.lastBrkId = 280;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[280]) return breakpoint(s, 6, 280, r0);
  case 6:
    s.n___15856 = (undefined);
    s.unnamed1294___U2 = (s.arg0);
    s.unnamed1295___U3 = (0);
    s.lastBrkId = 281;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[281]) return breakpoint(s, 7, 281, r0);
  case 7:
  case 1:
    s.tmp_0 = r0 = s.unnamed1295___U3;
    r0 = pxsim_Array__length(s.unnamed1294___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1294___U2, s.unnamed1295___U3);
    s.n___15856 = (r0);
    s.lastBrkId = 282;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[282]) return breakpoint(s, 8, 282, r0);
  case 8:
    s.lastBrkId = 283;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[283]) return breakpoint(s, 9, 283, r0);
  case 9:
    s.tmp_2 = r0 = s.off___15854;
    s.tmp_4 = msgpack_packNumberCore__P4574_mk(s);
    s.tmp_4.arg0 = null;
    s.tmp_4.arg1 = s.off___15854;
    s.tmp_4.arg2 = s.n___15856;
    s.callLocIdx = 22; s.pc = 10; return s.tmp_4;
  case 10:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.off___15854 = (r0);
    r0 = (s.unnamed1295___U3 + 1);
    s.unnamed1295___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed1294___U2 = (undefined);
    s.lastBrkId = 284;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[284]) return breakpoint(s, 11, 284, r0);
  case 11:
    r0 = pxsim.control.createBuffer(s.off___15854);
    s.buf___15866 = (r0);
    s.lastBrkId = 285;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[285]) return breakpoint(s, 12, 285, r0);
  case 12:
    s.off___15854 = (0);
    s.lastBrkId = 286;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[286]) return breakpoint(s, 13, 286, r0);
  case 13:
    s.n___15872 = (undefined);
    s.unnamed1296___U6 = (s.arg0);
    s.unnamed1297___U7 = (0);
    s.lastBrkId = 287;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[287]) return breakpoint(s, 14, 287, r0);
  case 14:
  case 3:
    s.tmp_0 = r0 = s.unnamed1297___U7;
    r0 = pxsim_Array__length(s.unnamed1296___U6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1296___U6, s.unnamed1297___U7);
    s.n___15872 = (r0);
    s.lastBrkId = 288;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[288]) return breakpoint(s, 15, 288, r0);
  case 15:
    s.lastBrkId = 289;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[289]) return breakpoint(s, 16, 289, r0);
  case 16:
    s.tmp_2 = r0 = s.off___15854;
    s.tmp_4 = msgpack_packNumberCore__P4574_mk(s);
    s.tmp_4.arg0 = s.buf___15866;
    s.tmp_4.arg1 = s.off___15854;
    s.tmp_4.arg2 = s.n___15872;
    s.callLocIdx = 23; s.pc = 17; return s.tmp_4;
  case 17:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.off___15854 = (r0);
    r0 = (s.unnamed1297___U7 + 1);
    s.unnamed1297___U7 = (r0);
    { step = 3; continue; }
  case 4:
    s.unnamed1296___U6 = (undefined);
    s.lastBrkId = 290;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[290]) return breakpoint(s, 18, 290, r0);
  case 18:
    r0 = s.buf___15866;
    return leave(s, r0)
  default: oops()
} } }
msgpack_packNumberArray__P184.info = {"start":3427,"length":330,"line":117,"column":4,"endLine":128,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"packNumberArray","argumentNames":["nums"]}

function msgpack_packNumberArray__P184_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_packNumberArray__P184, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  off___15854: undefined,
  n___15856: undefined,
  unnamed1294___U2: undefined,
  unnamed1295___U3: undefined,
  buf___15866: undefined,
  n___15872: undefined,
  unnamed1296___U6: undefined,
  unnamed1297___U7: undefined,
  arg0: undefined,
} }





function msgpack_packNumberCore__P4574(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tag___15886 = undefined;
    s.fmt___15929 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 242;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[242]) return breakpoint(s, 24, 242, r0);
  case 24:
    s.tag___15886 = (203);
    s.lastBrkId = 243;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[243]) return breakpoint(s, 25, 243, r0);
  case 25:
    s.tmp_1 = r0 = s.arg2;
    r0 = (s.arg2 << 0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 == s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_3 = r0 = s.arg2;
    r0 = (s.arg2 >>> 0);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 == s.tmp_4);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 19; continue; }
    s.lastBrkId = 244;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[244]) return breakpoint(s, 26, 244, r0);
  case 26:
    r0 = (-31 <= s.arg2);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBool(s.tmp_6);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_6;
    { step = 4; continue; }
  case 3:
    r0 = (s.arg2 <= 127);
  case 4:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 245;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[245]) return breakpoint(s, 27, 245, r0);
  case 27:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 246;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[246]) return breakpoint(s, 28, 246, r0);
  case 28:
    r0 = pxsim.BufferMethods.setByte(s.arg0, s.arg1, s.arg2);
  case 5:
  case 6:
    s.lastBrkId = 247;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[247]) return breakpoint(s, 29, 247, r0);
  case 29:
    r0 = 1;
    { step = 23; continue; }
    { step = 18; continue; }
  case 7:
    s.lastBrkId = 248;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[248]) return breakpoint(s, 30, 248, r0);
  case 30:
    r0 = (0 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 249;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[249]) return breakpoint(s, 31, 249, r0);
  case 31:
    r0 = (s.arg2 <= 255);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 250;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[250]) return breakpoint(s, 32, 250, r0);
  case 32:
    s.tag___15886 = (204);
    { step = 11; continue; }
  case 8:
    s.lastBrkId = 251;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[251]) return breakpoint(s, 33, 251, r0);
  case 33:
    r0 = (s.arg2 <= 65535);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 252;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[252]) return breakpoint(s, 34, 252, r0);
  case 34:
    s.tag___15886 = (205);
    { step = 10; continue; }
  case 9:
    s.lastBrkId = 253;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[253]) return breakpoint(s, 35, 253, r0);
  case 35:
    s.tag___15886 = (206);
  case 10:
  case 11:
    { step = 17; continue; }
  case 12:
    s.lastBrkId = 254;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[254]) return breakpoint(s, 36, 254, r0);
  case 36:
    r0 = (-127 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 255;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[255]) return breakpoint(s, 37, 255, r0);
  case 37:
    s.tag___15886 = (208);
    { step = 16; continue; }
  case 13:
    s.lastBrkId = 256;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[256]) return breakpoint(s, 38, 256, r0);
  case 38:
    r0 = (-32767 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 257;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[257]) return breakpoint(s, 39, 257, r0);
  case 39:
    s.tag___15886 = (209);
    { step = 15; continue; }
  case 14:
    s.lastBrkId = 258;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[258]) return breakpoint(s, 40, 258, r0);
  case 40:
    s.tag___15886 = (210);
  case 15:
  case 16:
  case 17:
  case 18:
  case 19:
  case 20:
    s.lastBrkId = 259;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[259]) return breakpoint(s, 41, 259, r0);
  case 41:
    s.tmp_0 = msgpack_tagFormat__P4573_mk(s);
    s.tmp_0.arg0 = s.tag___15886;
    s.callLocIdx = 18; s.pc = 42; return s.tmp_0;
  case 42:
    r0 = s.retval;
    s.fmt___15929 = (r0);
    s.lastBrkId = 260;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[260]) return breakpoint(s, 43, 260, r0);
  case 43:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 21; continue; }
    s.lastBrkId = 261;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[261]) return breakpoint(s, 44, 261, r0);
  case 44:
    r0 = pxsim.BufferMethods.setByte(s.arg0, s.arg1, s.tag___15886);
    s.lastBrkId = 262;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[262]) return breakpoint(s, 45, 262, r0);
  case 45:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.fmt___15929;
    r0 = (s.arg1 + 1);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, s.tmp_1, s.tmp_2, s.arg2);
  case 21:
  case 22:
    s.lastBrkId = 263;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[263]) return breakpoint(s, 46, 263, r0);
  case 46:
    s.tmp_1 = pins_sizeOf__P175_mk(s);
    s.tmp_1.arg0 = s.fmt___15929;
    s.callLocIdx = 19; s.pc = 47; return s.tmp_1;
  case 47:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
  case 23:
    return leave(s, r0)
  default: oops()
} } }
msgpack_packNumberCore__P4574.info = {"start":1632,"length":951,"line":56,"column":4,"endLine":86,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"packNumberCore","argumentNames":["buf","offset","num"]}

function msgpack_packNumberCore__P4574_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_packNumberCore__P4574, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tag___15886: undefined,
  fmt___15929: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function msgpack_tagFormat__P4573(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 233;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[233]) return breakpoint(s, 10, 233, r0);
  case 10:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(203, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(204, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(205, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(206, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(208, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(209, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(210, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 1:
    s.lastBrkId = 234;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[234]) return breakpoint(s, 11, 234, r0);
  case 11:
    r0 = 16;
    { step = 9; continue; }
  case 2:
    s.lastBrkId = 235;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[235]) return breakpoint(s, 12, 235, r0);
  case 12:
    r0 = 7;
    { step = 9; continue; }
  case 3:
    s.lastBrkId = 236;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[236]) return breakpoint(s, 13, 236, r0);
  case 13:
    r0 = 9;
    { step = 9; continue; }
  case 4:
    s.lastBrkId = 237;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[237]) return breakpoint(s, 14, 237, r0);
  case 14:
    r0 = 12;
    { step = 9; continue; }
  case 5:
    s.lastBrkId = 238;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[238]) return breakpoint(s, 15, 238, r0);
  case 15:
    r0 = 6;
    { step = 9; continue; }
  case 6:
    s.lastBrkId = 239;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[239]) return breakpoint(s, 16, 239, r0);
  case 16:
    r0 = 8;
    { step = 9; continue; }
  case 7:
    s.lastBrkId = 240;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[240]) return breakpoint(s, 17, 240, r0);
  case 17:
    r0 = 10;
    { step = 9; continue; }
  case 8:
    s.lastBrkId = 241;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[241]) return breakpoint(s, 18, 241, r0);
  case 18:
    r0 = null;
    { step = 9; continue; }
    r0 = undefined;
  case 9:
    return leave(s, r0)
  default: oops()
} } }
msgpack_tagFormat__P4573.info = {"start":1145,"length":481,"line":42,"column":4,"endLine":54,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"tagFormat","argumentNames":["tag"]}

function msgpack_tagFormat__P4573_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_tagFormat__P4573, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function pins_sizeOf__P175(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 232;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[232]) return breakpoint(s, 1, 232, r0);
  case 1:
    s.tmp_0 = Buffer_sizeOfNumberFormat__P215_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 17; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
pins_sizeOf__P175.info = {"start":42,"length":101,"line":2,"column":4,"endLine":4,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"sizeOf","argumentNames":["format"]}

function pins_sizeOf__P175_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pins_sizeOf__P175, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Buffer_sizeOfNumberFormat__P215(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 291;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[291]) return breakpoint(s, 19, 291, r0);
  case 19:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(6, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(7, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(8, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(9, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq(10, s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = pxsim_pxtcore.switch_eq(12, s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = pxsim_pxtcore.switch_eq(11, s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = pxsim_pxtcore.switch_eq(15, s.tmp_0);
    if (r0) { step = 13; continue; }
    r0 = pxsim_pxtcore.switch_eq(13, s.tmp_0);
    if (r0) { step = 14; continue; }
    r0 = pxsim_pxtcore.switch_eq(16, s.tmp_0);
    if (r0) { step = 15; continue; }
    r0 = pxsim_pxtcore.switch_eq(14, s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 1:
  case 2:
  case 3:
  case 4:
    s.lastBrkId = 292;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[292]) return breakpoint(s, 20, 292, r0);
  case 20:
    r0 = 1;
    { step = 18; continue; }
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 293;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[293]) return breakpoint(s, 21, 293, r0);
  case 21:
    r0 = 2;
    { step = 18; continue; }
  case 9:
  case 10:
  case 11:
  case 12:
  case 13:
  case 14:
    s.lastBrkId = 294;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[294]) return breakpoint(s, 22, 294, r0);
  case 22:
    r0 = 4;
    { step = 18; continue; }
  case 15:
  case 16:
    s.lastBrkId = 295;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[295]) return breakpoint(s, 23, 295, r0);
  case 23:
    r0 = 8;
    { step = 18; continue; }
  case 17:
    s.lastBrkId = 296;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[296]) return breakpoint(s, 24, 296, r0);
  case 24:
    r0 = 0;
  case 18:
    return leave(s, r0)
  default: oops()
} } }
Buffer_sizeOfNumberFormat__P215.info = {"start":14912,"length":856,"line":508,"column":4,"endLine":532,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"sizeOfNumberFormat","argumentNames":["format"]}

function Buffer_sizeOfNumberFormat__P215_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Buffer_sizeOfNumberFormat__P215, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function helpers_setScreenBrightness__P1966(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 595;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[595]) return breakpoint(s, 1, 595, r0);
  case 1:
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 10;
    s.tmp_0.arg1 = 100;
    r0 = (s.arg1 | 0);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 95; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.arg1 = (r0);
    s.lastBrkId = 596;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[596]) return breakpoint(s, 3, 596, r0);
  case 3:
    globals.brightness___1952 = (s.arg1);
    s.lastBrkId = 597;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[597]) return breakpoint(s, 4, 597, r0);
  case 4:
    r0 = pxsim_pxtcore.setScreenBrightness(globals.brightness___1952);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_setScreenBrightness__P1966.info = {"start":8945,"length":210,"line":282,"column":4,"endLine":286,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"setScreenBrightness","argumentNames":["img","b"]}

function helpers_setScreenBrightness__P1966_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_setScreenBrightness__P1966, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_brightnessUp__P5398(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2202;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2202]) return breakpoint(s, 1, 2202, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_setScreenBrightness__P5400_mk(s);
    s.tmp_2 = helpers_screenBrightness__P1967_mk(s);
    s.tmp_2.arg0 = globals.screen___2033;
    s.callLocIdx = 1087; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 5);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1088; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_brightnessUp__P5398.info = {"start":9107,"length":85,"line":285,"column":4,"endLine":287,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"brightnessUp","argumentNames":[]}

function scene_systemMenu_brightnessUp__P5398_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_brightnessUp__P5398, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_volumeDown__P5397(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.v___16202 = undefined;
    s.remainder___16205 = undefined;
    s.newVolume___16208 = undefined;
    s.lastBrkId = 2198;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2198]) return breakpoint(s, 3, 2198, r0);
  case 3:
    s.tmp_0 = music_volume__P1622_mk(s);
    s.callLocIdx = 1085; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.v___16202 = (r0);
    s.lastBrkId = 2199;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2199]) return breakpoint(s, 5, 2199, r0);
  case 5:
    r0 = (s.v___16202 % 32);
    s.remainder___16205 = (r0);
    s.lastBrkId = 2200;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2200]) return breakpoint(s, 6, 2200, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.remainder___16205);
    if (!r0) { step = 1; continue; }
    r0 = s.remainder___16205;
    { step = 2; continue; }
  case 1:
    r0 = 32;
  case 2:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.v___16202 - s.tmp_0);
    s.newVolume___16208 = (r0);
    s.lastBrkId = 2201;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2201]) return breakpoint(s, 7, 2201, r0);
  case 7:
    s.tmp_0 = scene_systemMenu_setVolume__P5395_mk(s);
    s.tmp_0.arg0 = s.newVolume___16208;
    s.callLocIdx = 1086; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_volumeDown__P5397.info = {"start":8914,"length":187,"line":278,"column":4,"endLine":283,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"volumeDown","argumentNames":[]}

function scene_systemMenu_volumeDown__P5397_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_volumeDown__P5397, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  v___16202: undefined,
  remainder___16205: undefined,
  newVolume___16208: undefined,
} }





function scene_systemMenu_setVolume__P5395(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2191;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2191]) return breakpoint(s, 1, 2191, r0);
  case 1:
    s.tmp_0 = music_setVolume__P1621_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1080; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2192;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2192]) return breakpoint(s, 3, 2192, r0);
  case 3:
    s.tmp_0 = music_playTone__P1623_mk(s);
    s.tmp_0.arg0 = 440;
    s.tmp_0.arg1 = 500;
    s.callLocIdx = 1081; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 2193;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2193]) return breakpoint(s, 5, 2193, r0);
  case 5:
    s.tmp_0 = settings_writeNumber__P2064_mk(s);
    s.tmp_0.arg0 = "#volume";
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 1082; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_setVolume__P5395.info = {"start":8565,"length":166,"line":265,"column":4,"endLine":269,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setVolume","argumentNames":["newVolume"]}

function scene_systemMenu_setVolume__P5395_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_setVolume__P5395, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function music_playTone__P1623(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.id___16043 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtrt.mklocRef();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.arg1);
    s.arg1 = (s.tmp_0);
    s.lastBrkId = 521;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[521]) return breakpoint(s, 5, 521, r0);
  case 5:
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 == 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 522;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[522]) return breakpoint(s, 6, 522, r0);
  case 6:
    r0 = pxsim_pxtrt_stlocRef(s.arg1, 86400000);
  case 1:
  case 2:
    s.lastBrkId = 523;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[523]) return breakpoint(s, 7, 523, r0);
  case 7:
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 2000);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 524;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[524]) return breakpoint(s, 8, 524, r0);
  case 8:
    s.tmp_2 = music_playNoteCore__P4673_mk(s);
    s.tmp_2.arg0 = 0;
    s.tmp_2.arg1 = s.arg0;
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 72; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 525;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[525]) return breakpoint(s, 10, 525, r0);
  case 10:
    s.tmp_0 = pause__P413_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 73; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 526;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[526]) return breakpoint(s, 12, 526, r0);
  case 12:
    r0 = (globals.playToneID___4675 + 1);
    s.tmp_0 = r0;
    globals.playToneID___4675 = (r0);
    s.id___16043 = (s.tmp_0);
    s.lastBrkId = 527;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[527]) return breakpoint(s, 13, 527, r0);
  case 13:
    r0 = pxsim_pxtcore_mkAction(3, music_playTone_inline__P16049);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.id___16043);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.arg0);
    r0 = pxsim.control.runInParallel(s.tmp_0);
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_playTone__P1623.info = {"start":2612,"length":831,"line":84,"column":4,"endLine":109,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"playTone","argumentNames":["frequency","ms"]}

function music_playTone__P1623_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_playTone__P1623, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  id___16043: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function music_playTone_inline__P16049(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.pos___16050 = undefined;
    s.now___16060 = undefined;
    s.d___16063 = undefined;
    s.t___16067 = undefined;
    s.lastBrkId = 528;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[528]) return breakpoint(s, 7, 528, r0);
  case 7:
    r0 = pxsim.control.millis();
    s.pos___16050 = (r0);
    s.lastBrkId = 529;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[529]) return breakpoint(s, 8, 529, r0);
  case 8:
  case 1:
    s.lastBrkId = 530;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[530]) return breakpoint(s, 9, 530, r0);
  case 9:
    r0 = (s.caps[0] == globals.playToneID___4675);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 531;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[531]) return breakpoint(s, 10, 531, r0);
  case 10:
    r0 = pxsim.control.millis();
    s.now___16060 = (r0);
    s.lastBrkId = 532;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[532]) return breakpoint(s, 11, 532, r0);
  case 11:
    r0 = (s.pos___16050 - s.now___16060);
    s.d___16063 = (r0);
    s.lastBrkId = 533;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[533]) return breakpoint(s, 12, 533, r0);
  case 12:
    s.tmp_0 = Math_min__P131_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 500;
    s.callLocIdx = 74; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.t___16067 = (r0);
    s.lastBrkId = 534;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[534]) return breakpoint(s, 14, 534, r0);
  case 14:
    s.tmp_0 = r0 = s.caps[1];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.t___16067);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.lastBrkId = 535;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[535]) return breakpoint(s, 15, 535, r0);
  case 15:
    r0 = (s.pos___16050 + s.t___16067);
    s.pos___16050 = (r0);
    s.lastBrkId = 536;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[536]) return breakpoint(s, 16, 536, r0);
  case 16:
    s.tmp_0 = music_playNoteCore__P4673_mk(s);
    r0 = (s.d___16063 - 1);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.caps[2];
    s.tmp_0.arg2 = s.t___16067;
    s.callLocIdx = 75; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 537;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[537]) return breakpoint(s, 18, 537, r0);
  case 18:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 538;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[538]) return breakpoint(s, 19, 538, r0);
  case 19:
    s.tmp_2 = pause__P413_mk(s);
    r0 = (s.d___16063 + s.t___16067);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 76; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    { step = 5; continue; }
  case 4:
    s.lastBrkId = 539;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[539]) return breakpoint(s, 21, 539, r0);
  case 21:
    s.tmp_0 = pause__P413_mk(s);
    r0 = (s.d___16063 + s.t___16067);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 100);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 77; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
  case 5:
    { step = 1; continue; }
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_playTone_inline__P16049.info = {"start":2911,"length":515,"line":93,"column":34,"endLine":107,"endColumn":13,"fileName":"pxt_modules/mixer/melody.ts","functionName":"inline","argumentNames":[]}

function music_playTone_inline__P16049_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_playTone_inline__P16049, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  pos___16050: undefined,
  now___16060: undefined,
  d___16063: undefined,
  t___16067: undefined,
} }





function music_playNoteCore__P4673(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.buf___16097 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 518;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[518]) return breakpoint(s, 1, 518, r0);
  case 1:
    r0 = pxsim.control.createBuffer(12);
    s.buf___16097 = (r0);
    s.lastBrkId = 519;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[519]) return breakpoint(s, 2, 519, r0);
  case 2:
    s.tmp_0 = music_addNote__P1637_mk(s);
    s.tmp_0.arg0 = s.buf___16097;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = 255;
    s.tmp_0.arg4 = 255;
    s.tmp_0.arg5 = 3;
    s.tmp_0.arg6 = s.arg1;
    s.tmp_1 = music_volume__P1622_mk(s);
    s.callLocIdx = 70; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg7 = r0;
    s.tmp_0.arg8 = s.arg1;
    s.callLocIdx = 71; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.lastBrkId = 520;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[520]) return breakpoint(s, 5, 520, r0);
  case 5:
    r0 = pxsim.music.queuePlayInstructions(s.arg0, s.buf___16097);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_playNoteCore__P4673.info = {"start":1877,"length":240,"line":66,"column":4,"endLine":70,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"playNoteCore","argumentNames":["when","frequency","ms"]}

function music_playNoteCore__P4673_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_playNoteCore__P4673, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  buf___16097: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function music_addNote__P1637(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.arg8 = (s.lambdaArgs[8]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 543;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[543]) return breakpoint(s, 3, 543, r0);
  case 3:
    r0 = (s.arg2 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 544;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[544]) return breakpoint(s, 4, 544, r0);
  case 4:
    r0 = pxsim.BufferMethods.setNumber(s.arg0, 2, s.arg1, s.arg5);
    s.lastBrkId = 545;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[545]) return breakpoint(s, 5, 545, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 1);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 2, s.tmp_1, 0);
    s.lastBrkId = 546;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[546]) return breakpoint(s, 6, 546, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 2);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.arg6);
    s.lastBrkId = 547;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[547]) return breakpoint(s, 7, 547, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 4);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.arg2);
    s.lastBrkId = 548;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[548]) return breakpoint(s, 8, 548, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 6);
    s.tmp_1 = r0;
    r0 = (s.arg3 * s.arg7);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 6);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.tmp_2);
    s.lastBrkId = 549;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[549]) return breakpoint(s, 9, 549, r0);
  case 9:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 8);
    s.tmp_1 = r0;
    r0 = (s.arg4 * s.arg7);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 6);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.tmp_2);
    s.lastBrkId = 550;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[550]) return breakpoint(s, 10, 550, r0);
  case 10:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 10);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.arg8);
    s.lastBrkId = 551;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[551]) return breakpoint(s, 11, 551, r0);
  case 11:
    r0 = (s.arg1 + 12);
    s.arg1 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 552;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[552]) return breakpoint(s, 12, 552, r0);
  case 12:
    r0 = pxsim.BufferMethods.setNumber(s.arg0, 2, s.arg1, 0);
    s.lastBrkId = 553;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[553]) return breakpoint(s, 13, 553, r0);
  case 13:
    r0 = s.arg1;
    return leave(s, r0)
  default: oops()
} } }
music_addNote__P1637.info = {"start":10288,"length":911,"line":323,"column":4,"endLine":336,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"addNote","argumentNames":["sndInstr","sndInstrPtr","ms","beg","end","soundWave","hz","volume","endHz"]}

function music_addNote__P1637_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_addNote__P1637, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
  arg8: undefined,
} }





function music_setVolume__P1621(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 514;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[514]) return breakpoint(s, 3, 514, r0);
  case 3:
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_0.arg1 = 255;
    r0 = (s.arg0 | 0);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 67; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    globals.globalVolume___4668 = (r0);
    s.lastBrkId = 515;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[515]) return breakpoint(s, 5, 515, r0);
  case 5:
    r0 = (globals.globalVolume___4668 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 1;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_2 = music_enableAmp__P4671_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    s.callLocIdx = 68; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_setVolume__P1621.info = {"start":1533,"length":153,"line":51,"column":4,"endLine":54,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"setVolume","argumentNames":["volume"]}

function music_setVolume__P1621_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_setVolume__P1621, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function music_enableAmp__P4671(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 510;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[510]) return breakpoint(s, 1, 510, r0);
  case 1:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_enableAmp__P4671.info = {"start":944,"length":64,"line":29,"column":4,"endLine":31,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"enableAmp","argumentNames":["en"]}

function music_enableAmp__P4671_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_enableAmp__P4671, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_systemMenu_volumeUp__P5396(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.v___16011 = undefined;
    s.remainder___16014 = undefined;
    s.newVolume___16017 = undefined;
    s.lastBrkId = 2194;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2194]) return breakpoint(s, 1, 2194, r0);
  case 1:
    s.tmp_0 = music_volume__P1622_mk(s);
    s.callLocIdx = 1083; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.v___16011 = (r0);
    s.lastBrkId = 2195;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2195]) return breakpoint(s, 3, 2195, r0);
  case 3:
    r0 = (s.v___16011 % 32);
    s.remainder___16014 = (r0);
    s.lastBrkId = 2196;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2196]) return breakpoint(s, 4, 2196, r0);
  case 4:
    r0 = (s.v___16011 + 32);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.remainder___16014);
    s.newVolume___16017 = (r0);
    s.lastBrkId = 2197;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2197]) return breakpoint(s, 5, 2197, r0);
  case 5:
    s.tmp_0 = scene_systemMenu_setVolume__P5395_mk(s);
    s.tmp_0.arg0 = s.newVolume___16017;
    s.callLocIdx = 1084; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_volumeUp__P5396.info = {"start":8737,"length":171,"line":271,"column":4,"endLine":276,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"volumeUp","argumentNames":[]}

function scene_systemMenu_volumeUp__P5396_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_volumeUp__P5396, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  v___16011: undefined,
  remainder___16014: undefined,
  newVolume___16017: undefined,
} }





function game_consoleOverlay_isVisible__P3125(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2272;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2272]) return breakpoint(s, 1, 2272, r0);
  case 1:
    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___5437);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_isVisible__P3125.info = {"start":422,"length":68,"line":11,"column":4,"endLine":13,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"isVisible","argumentNames":[]}

function game_consoleOverlay_isVisible__P3125_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_isVisible__P3125, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_closeMenu__P3103(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2214;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2214]) return breakpoint(s, 3, 2214, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.instance___5391);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2215;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2215]) return breakpoint(s, 4, 2215, r0);
  case 4:
    s.tmp_0 = scene_systemMenu_PauseMenu_dispose__P3102_mk(s);
    s.tmp_0.arg0 = globals.instance___5391;
    s.callLocIdx = 1099; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2216;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2216]) return breakpoint(s, 6, 2216, r0);
  case 6:
    globals.instance___5391 = (undefined);
    s.lastBrkId = 2217;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2217]) return breakpoint(s, 7, 2217, r0);
  case 7:
    s.tmp_0 = controller__setUserEventsEnabled__P2207_mk(s);
    s.tmp_0.arg0 = true;
    s.callLocIdx = 1100; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 2218;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2218]) return breakpoint(s, 9, 2218, r0);
  case 9:
    s.tmp_0 = game_popScene__P3005_mk(s);
    s.callLocIdx = 1101; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_closeMenu__P3103.info = {"start":10129,"length":216,"line":320,"column":4,"endLine":327,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"closeMenu","argumentNames":[]}

function scene_systemMenu_closeMenu__P3103_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_closeMenu__P3103, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_PauseMenu_dispose__P3102(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C3096_VT)) failedCast(r0);
    s.lastBrkId = 2181;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2181]) return breakpoint(s, 3, 2181, r0);
  case 3:
    r0 = s.arg0.fields["options"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2182;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2182]) return breakpoint(s, 4, 2182, r0);
  case 4:
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = scene_systemMenu_PauseMenu_dispose_inline__P14426;
    s.callLocIdx = 1076; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2183;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2183]) return breakpoint(s, 6, 2183, r0);
  case 6:
    r0 = (s.arg0).fields["options"] = (undefined);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_dispose__P3102.info = {"start":7732,"length":165,"line":243,"column":8,"endLine":248,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"dispose","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_dispose__P3102_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_dispose__P3102, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function scene_systemMenu_PauseMenu_dispose_inline__P14426(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = scene_systemMenu_MenuOption_dispose__P3095_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1075; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_dispose_inline__P14426.info = {"start":7813,"length":16,"line":245,"column":37,"endLine":245,"endColumn":53,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":["o"]}

function scene_systemMenu_PauseMenu_dispose_inline__P14426_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_dispose_inline__P14426, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_dispose__P3095(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C3088_VT)) failedCast(r0);
    s.lastBrkId = 2095;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2095]) return breakpoint(s, 3, 2095, r0);
  case 3:
    r0 = s.arg0.fields["card"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2096;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2096]) return breakpoint(s, 4, 2096, r0);
  case 4:
    s.tmp_1 = Sprite_destroy__P2429_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = undefined;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 995; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2097;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2097]) return breakpoint(s, 6, 2097, r0);
  case 6:
    s.tmp_0 = Sprite_destroy__P2429_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = undefined;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 996; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2098;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2098]) return breakpoint(s, 8, 2098, r0);
  case 8:
    r0 = (s.arg0).fields["card"] = (undefined);
    s.lastBrkId = 2099;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2099]) return breakpoint(s, 9, 2099, r0);
  case 9:
    r0 = (s.arg0).fields["icon"] = (undefined);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_dispose__P3095.info = {"start":1812,"length":216,"line":77,"column":8,"endLine":84,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"dispose","argumentNames":["this"]}

function scene_systemMenu_MenuOption_dispose__P3095_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_dispose__P3095, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Sprite_destroy__P2429(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1199;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1199]) return breakpoint(s, 6, 1199, r0);
  case 6:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1200;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1200]) return breakpoint(s, 7, 1200, r0);
  case 7:
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1201;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1201]) return breakpoint(s, 8, 1201, r0);
  case 8:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 2);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["flags"] = (s.tmp_3);
    s.lastBrkId = 1202;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1202]) return breakpoint(s, 9, 1202, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1203;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1203]) return breakpoint(s, 10, 1203, r0);
  case 10:
    s.tmp_0 = effects_ParticleEffect_destroy__P3266_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = undefined;
    s.callLocIdx = 439; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1204;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1204]) return breakpoint(s, 12, 1204, r0);
  case 12:
    s.tmp_0 = Sprite__destroyCore__P2430_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 440; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_destroy__P2429.info = {"start":26493,"length":293,"line":859,"column":4,"endLine":868,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"destroy","argumentNames":["this","effect","duration"]}

function Sprite_destroy__P2429_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_destroy__P2429, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function effects_ParticleEffect_destroy__P3266(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ParticleEffect__C3263_VT)) failedCast(r0);
    s.lastBrkId = 2537;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2537]) return breakpoint(s, 3, 2537, r0);
  case 3:
    s.tmp_0 = Sprite_setFlag__P2420_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 7168;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 1260; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 2538;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2538]) return breakpoint(s, 5, 2538, r0);
  case 5:
    s.tmp_0 = effects_ParticleEffect_start__P3265_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg3;
    s.tmp_0.arg3 = null;
    r0 = s.arg1.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 512);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 1261; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 2539;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2539]) return breakpoint(s, 7, 2539, r0);
  case 7:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    r0 = s.arg2;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["defaultLifespan"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 2);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg1).fields["lifespan"] = (s.tmp_1);
    s.lastBrkId = 2540;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2540]) return breakpoint(s, 8, 2540, r0);
  case 8:
    s.tmp_0 = effects_ImageEffect_applyTo__P3293_mk(s);
    s.tmp_0.arg0 = globals.dissolve___3296;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1262; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ParticleEffect_destroy__P3266.info = {"start":1736,"length":368,"line":41,"column":8,"endLine":46,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"destroy","argumentNames":["this","anchor","duration","particlesPerSecond"]}

function effects_ParticleEffect_destroy__P3266_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ParticleEffect_destroy__P3266, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function dissolve_inline__P14571(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___14574 = undefined;
    s.x___14585 = undefined;
    s.y___14591 = undefined;
    s.w___14597 = undefined;
    s.h___14601 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 5);
    s.i___14574 = (r0);
  case 1:
    r0 = (s.i___14574 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = Math_FastRandom_randomRange__P3064_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = 0;
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 52; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.x___14585 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P3064_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 53; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.y___14591 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P3064_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 3;
    s.callLocIdx = 54; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.w___14597 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P3064_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 3;
    s.callLocIdx = 55; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.h___14601 = (r0);
    s.tmp_0 = helpers_imageDrawRect__P1960_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.x___14585;
    s.tmp_0.arg2 = s.y___14591;
    s.tmp_0.arg3 = s.w___14597;
    s.tmp_0.arg4 = s.h___14601;
    s.tmp_0.arg5 = 0;
    s.callLocIdx = 56; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = (s.i___14574 - 1);
    s.i___14574 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dissolve_inline__P14571.info = {"start":2199,"length":360,"line":60,"column":49,"endLine":69,"endColumn":5,"fileName":"pxt_modules/game/effects.ts","functionName":"inline","argumentNames":["input","r"]}

function dissolve_inline__P14571_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dissolve_inline__P14571, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  i___14574: undefined,
  x___14585: undefined,
  y___14591: undefined,
  w___14597: undefined,
  h___14601: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Math_FastRandom_randomRange__P3064(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C3060_VT)) failedCast(r0);
    s.lastBrkId = 2073;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2073]) return breakpoint(s, 3, 2073, r0);
  case 3:
    r0 = (s.arg2 > s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = Math_FastRandom_next__P3063_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 977; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.arg2 - s.arg1);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 % s.tmp_3);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = (s.arg1 + s.tmp_5);
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_randomRange__P3064.info = {"start":2079,"length":131,"line":62,"column":8,"endLine":64,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"randomRange","argumentNames":["this","min","max"]}

function Math_FastRandom_randomRange__P3064_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_randomRange__P3064, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Math_FastRandom_next__P3063(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C3060_VT)) failedCast(r0);
    s.lastBrkId = 2072;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2072]) return breakpoint(s, 1, 2072, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["lfsr"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["lfsr"];
    s.tmp_7 = r0;
    r0 = (s.tmp_7 & 1);
    s.tmp_6 = r0;
    r0 = (0 - s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 46080);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 ^ s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lfsr"] = (s.tmp_1);
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_next__P3063.info = {"start":1713,"length":107,"line":53,"column":8,"endLine":55,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"next","argumentNames":["this"]}

function Math_FastRandom_next__P3063_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_next__P3063, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
} }





function effects_ImageEffect_constructor__P3292(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ImageEffect__C3291_VT)) failedCast(r0);
    s.lastBrkId = 2547;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2547]) return breakpoint(s, 1, 2547, r0);
  case 1:
    r0 = (s.arg0).fields["effect"] = (s.arg2);
    s.lastBrkId = 2548;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2548]) return breakpoint(s, 2, 2548, r0);
  case 2:
    r0 = pxsim_pxtcore_mkClassInstance(Math_FastRandom__C3060_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Math_FastRandom_constructor__P3062_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 1270; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = (s.arg0).fields["fastRandom"] = (s.tmp_0);
    s.lastBrkId = 2549;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2549]) return breakpoint(s, 4, 2549, r0);
  case 4:
    r0 = (s.arg0).fields["preferredDelay"] = (s.arg1);
    s.lastBrkId = 2550;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2550]) return breakpoint(s, 5, 2550, r0);
  case 5:
    r0 = (s.arg0).fields["times"] = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ImageEffect_constructor__P3292.info = {"start":410,"length":290,"line":10,"column":8,"endLine":15,"endColumn":9,"fileName":"pxt_modules/game/effects.ts","functionName":"inline","argumentNames":["this","defaultRate","effectFactory"]}

function effects_ImageEffect_constructor__P3292_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ImageEffect_constructor__P3292, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function effects_ImageEffect_applyTo__P3293(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.clonedImage___14675 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ImageEffect__C3291_VT)) failedCast(r0);
    s.lastBrkId = 2551;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2551]) return breakpoint(s, 6, 2551, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_4 = Sprite_image__P2391_mk(s);
    s.tmp_4.arg0 = s.arg1;
    s.callLocIdx = 1271; s.pc = 7; return s.tmp_4;
  case 7:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2552;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2552]) return breakpoint(s, 8, 2552, r0);
  case 8:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2553;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2553]) return breakpoint(s, 9, 2553, r0);
  case 9:
    s.tmp_7 = Sprite_image__P2391_mk(s);
    s.tmp_7.arg0 = s.arg1;
    s.callLocIdx = 1272; s.pc = 10; return s.tmp_7;
  case 10:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_ImageMethods.clone(s.tmp_6);
    s.clonedImage___14675 = (r0);
    s.lastBrkId = 2554;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2554]) return breakpoint(s, 11, 2554, r0);
  case 11:
    s.tmp_0 = effects_ImageEffect_change__P3294_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.clonedImage___14675;
    s.callLocIdx = 1273; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 2555;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2555]) return breakpoint(s, 13, 2555, r0);
  case 13:
    s.tmp_0 = Sprite_setImage__P2392_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.clonedImage___14675;
    s.callLocIdx = 1274; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ImageEffect_applyTo__P3293.info = {"start":823,"length":218,"line":21,"column":8,"endLine":26,"endColumn":9,"fileName":"pxt_modules/game/effects.ts","functionName":"applyTo","argumentNames":["this","sprite"]}

function effects_ImageEffect_applyTo__P3293_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ImageEffect_applyTo__P3293, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  clonedImage___14675: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function effects_ImageEffect_change__P3294(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ImageEffect__C3291_VT)) failedCast(r0);
    s.lastBrkId = 2556;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2556]) return breakpoint(s, 1, 2556, r0);
  case 1:
    s.tmp_0 = if_effect_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    r0 = s.arg0.fields["fastRandom"];
    s.tmp_0.arg2 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "effect"), 3);
      s.callLocIdx = 1275; s.pc = 2; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["effect"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["effect"], 3); s.callLocIdx = 1275; s.pc = 2; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 1275; s.pc = 2; return s.tmp_0;; }
     else { s.callLocIdx = 1275; s.pc = 2; return s.tmp_0; }
    }
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ImageEffect_change__P3294.info = {"start":1151,"length":81,"line":32,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/game/effects.ts","functionName":"change","argumentNames":["this","input"]}

function effects_ImageEffect_change__P3294_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ImageEffect_change__P3294, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_setImage__P2392(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1099;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1099]) return breakpoint(s, 6, 1099, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_image"];
    s.tmp_2 = r0;
    r0 = (s.arg1 === s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1100;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1100]) return breakpoint(s, 7, 1100, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1101;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1101]) return breakpoint(s, 8, 1101, r0);
  case 8:
    r0 = (s.arg0).fields["_image"] = (s.arg1);
    s.lastBrkId = 1102;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1102]) return breakpoint(s, 9, 1102, r0);
  case 9:
    s.tmp_0 = Sprite__C2342_v5_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, Sprite__C2342_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.recalcSize;
    s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setImage__P2392.info = {"start":9299,"length":131,"line":332,"column":4,"endLine":336,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setImage","argumentNames":["this","img"]}

function Sprite_setImage__P2392_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setImage__P2392, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_recalcSize__P4945(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1111;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1111]) return breakpoint(s, 1, 1111, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    s.tmp_6 = Sprite_sx__P2371_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 351; s.pc = 3; return s.tmp_6;
  case 3:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_3 * s.tmp_5);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 352; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_width"] = (s.tmp_1);
    s.lastBrkId = 1112;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1112]) return breakpoint(s, 4, 1112, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_4);
    s.tmp_3 = r0;
    s.tmp_6 = Sprite_sy__P2373_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 353; s.pc = 6; return s.tmp_6;
  case 6:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_3 * s.tmp_5);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 354; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_height"] = (s.tmp_1);
    s.lastBrkId = 1113;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1113]) return breakpoint(s, 7, 1113, r0);
  case 7:
    s.tmp_0 = Sprite_resetHitbox__P2394_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 355; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_recalcSize__P4945.info = {"start":9982,"length":178,"line":363,"column":4,"endLine":367,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"recalcSize","argumentNames":["this"]}

function Sprite_recalcSize__P4945_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_recalcSize__P4945, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function Sprite_resetHitbox__P2394(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1104;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1104]) return breakpoint(s, 1, 1104, r0);
  case 1:
    r0 = (s.arg0).fields["_hitbox"] = (null);
    s.lastBrkId = 1105;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1105]) return breakpoint(s, 2, 1105, r0);
  case 2:
    s.tmp_0 = Sprite__C2342_v4_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, Sprite__C2342_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.setHitbox;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_resetHitbox__P2394.info = {"start":9580,"length":76,"line":342,"column":4,"endLine":345,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"resetHitbox","argumentNames":["this"]}

function Sprite_resetHitbox__P2394_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_resetHitbox__P2394, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_setHitbox__P2395(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1106;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1106]) return breakpoint(s, 3, 1106, r0);
  case 3:
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1107;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1107]) return breakpoint(s, 4, 1107, r0);
  case 4:
    s.tmp_1 = game_Hitbox_updateIfInvalid__P2223_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 349; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 1108;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1108]) return breakpoint(s, 6, 1108, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = game_calculateHitBox__P2225_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 350; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_hitbox"] = (s.tmp_1);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setHitbox__P2395.info = {"start":9662,"length":173,"line":347,"column":4,"endLine":353,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setHitbox","argumentNames":["this"]}

function Sprite_setHitbox__P2395_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setHitbox__P2395, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function game_calculateHitBox__P2225(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___14740 = undefined;
    s.minX___14743 = undefined;
    s.minY___14747 = undefined;
    s.maxX___14751 = undefined;
    s.maxY___14753 = undefined;
    s.c___14755 = undefined;
    s.fxc___14756 = undefined;
    s.r___14763 = undefined;
    s.fxr___14764 = undefined;
    s.width___14828 = undefined;
    s.height___14836 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1021;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1021]) return breakpoint(s, 12, 1021, r0);
  case 12:
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = game_Hitbox_isValid__P2221_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 283; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1022;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1022]) return breakpoint(s, 14, 1022, r0);
  case 14:
    r0 = s.arg0.fields["_hitbox"];
    { step = 11; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1023;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1023]) return breakpoint(s, 15, 1023, r0);
  case 15:
    s.tmp_3 = Sprite_image__P2391_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 284; s.pc = 16; return s.tmp_3;
  case 16:
    r0 = s.retval;
    s.i___14740 = (r0);
    s.lastBrkId = 1024;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1024]) return breakpoint(s, 17, 1024, r0);
  case 17:
    s.tmp_0 = Fx8__P149_mk(s);
    r0 = pxsim_ImageMethods.width(s.i___14740);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 285; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.minX___14743 = (r0);
    s.lastBrkId = 1025;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1025]) return breakpoint(s, 19, 1025, r0);
  case 19:
    s.tmp_0 = Fx8__P149_mk(s);
    r0 = pxsim_ImageMethods.height(s.i___14740);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 286; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.minY___14747 = (r0);
    s.lastBrkId = 1026;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1026]) return breakpoint(s, 21, 1026, r0);
  case 21:
    s.maxX___14751 = (0);
    s.lastBrkId = 1027;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1027]) return breakpoint(s, 22, 1027, r0);
  case 22:
    s.maxY___14753 = (0);
    s.lastBrkId = 1028;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1028]) return breakpoint(s, 23, 1028, r0);
  case 23:
    s.c___14755 = (0);
    s.lastBrkId = 1029;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1029]) return breakpoint(s, 24, 1029, r0);
  case 24:
    s.fxc___14756 = (0);
    s.lastBrkId = 1030;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1030]) return breakpoint(s, 25, 1030, r0);
  case 25:
  case 5:
    s.lastBrkId = 1031;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1031]) return breakpoint(s, 26, 1031, r0);
  case 26:
    s.tmp_1 = r0 = s.c___14755;
    r0 = pxsim_ImageMethods.width(s.i___14740);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 1032;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1032]) return breakpoint(s, 27, 1032, r0);
  case 27:
    s.r___14763 = (0);
    s.lastBrkId = 1033;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1033]) return breakpoint(s, 28, 1033, r0);
  case 28:
    s.fxr___14764 = (0);
    s.lastBrkId = 1034;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1034]) return breakpoint(s, 29, 1034, r0);
  case 29:
  case 6:
    s.lastBrkId = 1035;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1035]) return breakpoint(s, 30, 1035, r0);
  case 30:
    s.tmp_1 = r0 = s.r___14763;
    r0 = pxsim_ImageMethods.height(s.i___14740);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1036;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1036]) return breakpoint(s, 31, 1036, r0);
  case 31:
    r0 = pxsim_ImageMethods.getPixel(s.i___14740, s.c___14755, s.r___14763);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1037;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1037]) return breakpoint(s, 32, 1037, r0);
  case 32:
    s.tmp_4 = Fx_min__P166_mk(s);
    s.tmp_4.arg0 = s.minX___14743;
    s.tmp_4.arg1 = s.fxc___14756;
    s.callLocIdx = 287; s.pc = 33; return s.tmp_4;
  case 33:
    r0 = s.retval;
    s.minX___14743 = (r0);
    s.lastBrkId = 1038;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1038]) return breakpoint(s, 34, 1038, r0);
  case 34:
    s.tmp_0 = Fx_min__P166_mk(s);
    s.tmp_0.arg0 = s.minY___14747;
    s.tmp_0.arg1 = s.fxr___14764;
    s.callLocIdx = 288; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    s.minY___14747 = (r0);
    s.lastBrkId = 1039;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1039]) return breakpoint(s, 36, 1039, r0);
  case 36:
    s.tmp_0 = Fx_max__P167_mk(s);
    s.tmp_0.arg0 = s.maxX___14751;
    s.tmp_0.arg1 = s.fxc___14756;
    s.callLocIdx = 289; s.pc = 37; return s.tmp_0;
  case 37:
    r0 = s.retval;
    s.maxX___14751 = (r0);
    s.lastBrkId = 1040;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1040]) return breakpoint(s, 38, 1040, r0);
  case 38:
    s.tmp_0 = Fx_max__P167_mk(s);
    s.tmp_0.arg0 = s.maxY___14753;
    s.tmp_0.arg1 = s.fxr___14764;
    s.callLocIdx = 290; s.pc = 39; return s.tmp_0;
  case 39:
    r0 = s.retval;
    s.maxY___14753 = (r0);
  case 7:
  case 8:
    s.lastBrkId = 1041;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1041]) return breakpoint(s, 40, 1041, r0);
  case 40:
    r0 = (s.r___14763 + 1);
    s.r___14763 = (r0);
    s.tmp_1 = Fx_add__P157_mk(s);
    s.tmp_1.arg0 = s.fxr___14764;
    s.tmp_1.arg1 = 256;
    s.callLocIdx = 291; s.pc = 41; return s.tmp_1;
  case 41:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.fxr___14764 = (r0);
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 9:
    s.lastBrkId = 1042;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1042]) return breakpoint(s, 42, 1042, r0);
  case 42:
    r0 = (s.c___14755 + 1);
    s.c___14755 = (r0);
    s.tmp_1 = Fx_add__P157_mk(s);
    s.tmp_1.arg0 = s.fxc___14756;
    s.tmp_1.arg1 = 256;
    s.callLocIdx = 292; s.pc = 43; return s.tmp_1;
  case 43:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.fxc___14756 = (r0);
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 10:
    s.lastBrkId = 1043;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1043]) return breakpoint(s, 44, 1043, r0);
  case 44:
    s.tmp_0 = Fx_mul__P160_mk(s);
    s.tmp_0.arg0 = s.minX___14743;
    r0 = s.arg0.fields["_sx"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 293; s.pc = 45; return s.tmp_0;
  case 45:
    r0 = s.retval;
    s.minX___14743 = (r0);
    s.lastBrkId = 1044;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1044]) return breakpoint(s, 46, 1044, r0);
  case 46:
    s.tmp_0 = Fx_mul__P160_mk(s);
    s.tmp_0.arg0 = s.minY___14747;
    r0 = s.arg0.fields["_sy"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 294; s.pc = 47; return s.tmp_0;
  case 47:
    r0 = s.retval;
    s.minY___14747 = (r0);
    s.lastBrkId = 1045;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1045]) return breakpoint(s, 48, 1045, r0);
  case 48:
    s.tmp_0 = Fx_mul__P160_mk(s);
    s.tmp_0.arg0 = s.maxX___14751;
    r0 = s.arg0.fields["_sx"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 295; s.pc = 49; return s.tmp_0;
  case 49:
    r0 = s.retval;
    s.maxX___14751 = (r0);
    s.lastBrkId = 1046;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1046]) return breakpoint(s, 50, 1046, r0);
  case 50:
    s.tmp_0 = Fx_mul__P160_mk(s);
    s.tmp_0.arg0 = s.maxY___14753;
    r0 = s.arg0.fields["_sy"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 296; s.pc = 51; return s.tmp_0;
  case 51:
    r0 = s.retval;
    s.maxY___14753 = (r0);
    s.lastBrkId = 1047;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1047]) return breakpoint(s, 52, 1047, r0);
  case 52:
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_1 = Fx_sub__P159_mk(s);
    s.tmp_1.arg0 = s.maxX___14751;
    s.tmp_1.arg1 = s.minX___14743;
    s.callLocIdx = 297; s.pc = 54; return s.tmp_1;
  case 54:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_sx"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 298; s.pc = 53; return s.tmp_0;
  case 53:
    r0 = s.retval;
    s.width___14828 = (r0);
    s.lastBrkId = 1048;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1048]) return breakpoint(s, 55, 1048, r0);
  case 55:
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_1 = Fx_sub__P159_mk(s);
    s.tmp_1.arg0 = s.maxY___14753;
    s.tmp_1.arg1 = s.minY___14747;
    s.callLocIdx = 299; s.pc = 57; return s.tmp_1;
  case 57:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_sy"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 300; s.pc = 56; return s.tmp_0;
  case 56:
    r0 = s.retval;
    s.height___14836 = (r0);
    s.lastBrkId = 1049;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1049]) return breakpoint(s, 58, 1049, r0);
  case 58:
    r0 = pxsim_pxtcore_mkClassInstance(game_Hitbox__C2209_VT);
    s.tmp_0 = r0;
    s.tmp_1 = game_Hitbox_constructor__P2216_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.width___14828;
    s.tmp_1.arg3 = s.height___14836;
    s.tmp_2 = Fx_floor__P168_mk(s);
    s.tmp_2.arg0 = s.minX___14743;
    s.callLocIdx = 301; s.pc = 60; return s.tmp_2;
  case 60:
    r0 = s.retval;
    s.tmp_1.arg4 = r0;
    s.tmp_3 = Fx_floor__P168_mk(s);
    s.tmp_3.arg0 = s.minY___14747;
    s.callLocIdx = 302; s.pc = 61; return s.tmp_3;
  case 61:
    r0 = s.retval;
    s.tmp_1.arg5 = r0;
    s.callLocIdx = 303; s.pc = 59; return s.tmp_1;
  case 59:
    r0 = s.retval;
    r0 = s.tmp_0;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
game_calculateHitBox__P2225.info = {"start":3223,"length":1086,"line":103,"column":4,"endLine":132,"endColumn":5,"fileName":"pxt_modules/game/hitbox.ts","functionName":"calculateHitBox","argumentNames":["s"]}

function game_calculateHitBox__P2225_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_calculateHitBox__P2225, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  i___14740: undefined,
  minX___14743: undefined,
  minY___14747: undefined,
  maxX___14751: undefined,
  maxY___14753: undefined,
  c___14755: undefined,
  fxc___14756: undefined,
  r___14763: undefined,
  fxr___14764: undefined,
  width___14828: undefined,
  height___14836: undefined,
  arg0: undefined,
} }





function game_Hitbox_isValid__P2221(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C2209_VT)) failedCast(r0);
    s.lastBrkId = 980;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[980]) return breakpoint(s, 1, 980, r0);
  case 1:
    r0 = s.arg0.fields["hash"];
    s.tmp_0 = r0;
    s.tmp_2 = Sprite_calcDimensionalHash__P2393_mk(s);
    r0 = s.arg0.fields["parent"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 236; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 === s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
game_Hitbox_isValid__P2221.info = {"start":935,"length":89,"line":40,"column":8,"endLine":42,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"isValid","argumentNames":["this"]}

function game_Hitbox_isValid__P2221_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_isValid__P2221, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Sprite_calcDimensionalHash__P2393(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1103;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1103]) return breakpoint(s, 1, 1103, r0);
  case 1:
    r0 = s.arg0.fields["_image"];
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.revision(s.tmp_2);
    s.tmp_1 = r0;
    s.tmp_4 = Fx_toIntShifted__P156_mk(s);
    r0 = s.arg0.fields["_width"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 8;
    s.callLocIdx = 347; s.pc = 2; return s.tmp_4;
  case 2:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 + s.tmp_3);
    s.tmp_0 = r0;
    s.tmp_6 = Fx_toIntShifted__P156_mk(s);
    r0 = s.arg0.fields["_height"];
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 16;
    s.callLocIdx = 348; s.pc = 3; return s.tmp_6;
  case 3:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_0 + s.tmp_5);
    return leave(s, r0)
  default: oops()
} } }
Sprite_calcDimensionalHash__P2393.info = {"start":9436,"length":138,"line":338,"column":4,"endLine":340,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"calcDimensionalHash","argumentNames":["this"]}

function Sprite_calcDimensionalHash__P2393_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_calcDimensionalHash__P2393, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function Fx_toIntShifted__P156(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 210;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[210]) return breakpoint(s, 1, 210, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 8);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 >> s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
Fx_toIntShifted__P156.info = {"start":404,"length":102,"line":17,"column":4,"endLine":19,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"toIntShifted","argumentNames":["a","n"]}

function Fx_toIntShifted__P156_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_toIntShifted__P156, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_Hitbox_constructor__P2216(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C2209_VT)) failedCast(r0);
    s.lastBrkId = 970;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[970]) return breakpoint(s, 1, 970, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Sprite_calcDimensionalHash__P2393_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 227; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["hash"] = (s.tmp_1);
    s.lastBrkId = 971;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[971]) return breakpoint(s, 3, 971, r0);
  case 3:
    r0 = (s.arg0).fields["parent"] = (s.arg1);
    s.lastBrkId = 972;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[972]) return breakpoint(s, 4, 972, r0);
  case 4:
    r0 = (s.arg0).fields["width"] = (s.arg2);
    s.lastBrkId = 973;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[973]) return breakpoint(s, 5, 973, r0);
  case 5:
    r0 = (s.arg0).fields["height"] = (s.arg3);
    s.lastBrkId = 974;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[974]) return breakpoint(s, 6, 974, r0);
  case 6:
    r0 = (s.arg0).fields["ox"] = (s.arg4);
    s.lastBrkId = 975;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[975]) return breakpoint(s, 7, 975, r0);
  case 7:
    r0 = (s.arg0).fields["oy"] = (s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Hitbox_constructor__P2216.info = {"start":173,"length":288,"line":9,"column":8,"endLine":16,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"inline","argumentNames":["this","parent","width","height","ox","oy"]}

function game_Hitbox_constructor__P2216_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_constructor__P2216, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function Fx_floor__P168(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 228;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[228]) return breakpoint(s, 1, 228, r0);
  case 1:
    r0 = (s.arg0 & -256);
    return leave(s, r0)
  default: oops()
} } }
Fx_floor__P168.info = {"start":1919,"length":103,"line":62,"column":4,"endLine":64,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"floor","argumentNames":["v"]}

function Fx_floor__P168_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_floor__P168, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Fx_max__P167(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 225;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[225]) return breakpoint(s, 4, 225, r0);
  case 4:
    r0 = (s.arg0 > s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 226;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[226]) return breakpoint(s, 5, 226, r0);
  case 5:
    r0 = s.arg0;
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 227;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[227]) return breakpoint(s, 6, 227, r0);
  case 6:
    r0 = s.arg1;
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Fx_max__P167.info = {"start":1797,"length":117,"line":56,"column":4,"endLine":61,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"max","argumentNames":["a","b"]}

function Fx_max__P167_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_max__P167, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_min__P166(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 222;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[222]) return breakpoint(s, 4, 222, r0);
  case 4:
    r0 = (s.arg0 < s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 223;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[223]) return breakpoint(s, 5, 223, r0);
  case 5:
    r0 = s.arg0;
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 224;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[224]) return breakpoint(s, 6, 224, r0);
  case 6:
    r0 = s.arg1;
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Fx_min__P166.info = {"start":1675,"length":117,"line":50,"column":4,"endLine":55,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"min","argumentNames":["a","b"]}

function Fx_min__P166_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_min__P166, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_mul__P160(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 214;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[214]) return breakpoint(s, 1, 214, r0);
  case 1:
    r0 = pxsim.Math_.imul(s.arg0, s.arg1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 8);
    return leave(s, r0)
  default: oops()
} } }
Fx_mul__P160.info = {"start":872,"length":133,"line":29,"column":4,"endLine":31,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"mul","argumentNames":["a","b"]}

function Fx_mul__P160_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_mul__P160, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_sub__P159(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 213;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[213]) return breakpoint(s, 1, 213, r0);
  case 1:
    r0 = (s.arg0 - s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_sub__P159.info = {"start":749,"length":118,"line":26,"column":4,"endLine":28,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"sub","argumentNames":["a","b"]}

function Fx_sub__P159_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_sub__P159, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function game_Hitbox_updateIfInvalid__P2223(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.newHitBox___14937 = undefined;
    s.oMinX___14942 = undefined;
    s.oMinY___14945 = undefined;
    s.oMaxX___14948 = undefined;
    s.oMaxY___14954 = undefined;
    s.nMinX___14960 = undefined;
    s.nMinY___14963 = undefined;
    s.nMaxX___14966 = undefined;
    s.nMaxY___14972 = undefined;
    s.xDiff___14978 = undefined;
    s.yDiff___14989 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C2209_VT)) failedCast(r0);
    s.lastBrkId = 982;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[982]) return breakpoint(s, 8, 982, r0);
  case 8:
    s.tmp_1 = game_Hitbox_isValid__P2221_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 241; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 983;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[983]) return breakpoint(s, 10, 983, r0);
  case 10:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 984;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[984]) return breakpoint(s, 11, 984, r0);
  case 11:
    s.tmp_2 = game_calculateHitBox__P2225_mk(s);
    r0 = s.arg0.fields["parent"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 242; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    s.newHitBox___14937 = (r0);
    s.lastBrkId = 985;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[985]) return breakpoint(s, 13, 985, r0);
  case 13:
    r0 = s.arg0.fields["ox"];
    s.oMinX___14942 = (r0);
    s.lastBrkId = 986;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[986]) return breakpoint(s, 14, 986, r0);
  case 14:
    r0 = s.arg0.fields["oy"];
    s.oMinY___14945 = (r0);
    s.lastBrkId = 987;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[987]) return breakpoint(s, 15, 987, r0);
  case 15:
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_0.arg0 = s.oMinX___14942;
    r0 = s.arg0.fields["width"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 243; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.oMaxX___14948 = (r0);
    s.lastBrkId = 988;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[988]) return breakpoint(s, 17, 988, r0);
  case 17:
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_0.arg0 = s.oMinY___14945;
    r0 = s.arg0.fields["height"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 244; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.oMaxY___14954 = (r0);
    s.lastBrkId = 989;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[989]) return breakpoint(s, 19, 989, r0);
  case 19:
    r0 = s.newHitBox___14937.fields["ox"];
    s.nMinX___14960 = (r0);
    s.lastBrkId = 990;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[990]) return breakpoint(s, 20, 990, r0);
  case 20:
    r0 = s.newHitBox___14937.fields["oy"];
    s.nMinY___14963 = (r0);
    s.lastBrkId = 991;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[991]) return breakpoint(s, 21, 991, r0);
  case 21:
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_0.arg0 = s.nMinX___14960;
    r0 = s.newHitBox___14937.fields["width"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 245; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.nMaxX___14966 = (r0);
    s.lastBrkId = 992;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[992]) return breakpoint(s, 23, 992, r0);
  case 23:
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_0.arg0 = s.nMinY___14963;
    r0 = s.newHitBox___14937.fields["height"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 246; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.nMaxY___14972 = (r0);
    s.lastBrkId = 993;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[993]) return breakpoint(s, 25, 993, r0);
  case 25:
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_1 = Fx_abs__P165_mk(s);
    s.tmp_2 = Fx_sub__P159_mk(s);
    s.tmp_2.arg0 = s.oMinX___14942;
    s.tmp_2.arg1 = s.nMinX___14960;
    s.callLocIdx = 247; s.pc = 28; return s.tmp_2;
  case 28:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 248; s.pc = 27; return s.tmp_1;
  case 27:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = Fx_abs__P165_mk(s);
    s.tmp_4 = Fx_sub__P159_mk(s);
    s.tmp_4.arg0 = s.oMaxX___14948;
    s.tmp_4.arg1 = s.nMaxX___14966;
    s.callLocIdx = 249; s.pc = 30; return s.tmp_4;
  case 30:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 250; s.pc = 29; return s.tmp_3;
  case 29:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 251; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.xDiff___14978 = (r0);
    s.lastBrkId = 994;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[994]) return breakpoint(s, 31, 994, r0);
  case 31:
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_1 = Fx_abs__P165_mk(s);
    s.tmp_2 = Fx_sub__P159_mk(s);
    s.tmp_2.arg0 = s.oMinY___14945;
    s.tmp_2.arg1 = s.nMinY___14963;
    s.callLocIdx = 252; s.pc = 34; return s.tmp_2;
  case 34:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 253; s.pc = 33; return s.tmp_1;
  case 33:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_3 = Fx_abs__P165_mk(s);
    s.tmp_4 = Fx_sub__P159_mk(s);
    s.tmp_4.arg0 = s.oMaxY___14954;
    s.tmp_4.arg1 = s.nMaxY___14972;
    s.callLocIdx = 254; s.pc = 36; return s.tmp_4;
  case 36:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 255; s.pc = 35; return s.tmp_3;
  case 35:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 256; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.yDiff___14989 = (r0);
    s.lastBrkId = 995;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[995]) return breakpoint(s, 37, 995, r0);
  case 37:
    r0 = (s.xDiff___14978 > 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 996;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[996]) return breakpoint(s, 38, 996, r0);
  case 38:
    r0 = (s.arg0).fields["ox"] = (s.nMinX___14960);
    s.lastBrkId = 997;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[997]) return breakpoint(s, 39, 997, r0);
  case 39:
    r0 = s.newHitBox___14937.fields["width"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["width"] = (s.tmp_0);
  case 3:
  case 4:
    s.lastBrkId = 998;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[998]) return breakpoint(s, 40, 998, r0);
  case 40:
    r0 = (s.yDiff___14989 > 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 999;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[999]) return breakpoint(s, 41, 999, r0);
  case 41:
    r0 = (s.arg0).fields["oy"] = (s.nMinY___14963);
    s.lastBrkId = 1000;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1000]) return breakpoint(s, 42, 1000, r0);
  case 42:
    r0 = s.newHitBox___14937.fields["height"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["height"] = (s.tmp_0);
  case 5:
  case 6:
    s.lastBrkId = 1001;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1001]) return breakpoint(s, 43, 1001, r0);
  case 43:
    r0 = s.newHitBox___14937.fields["hash"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["hash"] = (s.tmp_0);
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Hitbox_updateIfInvalid__P2223.info = {"start":1188,"length":1317,"line":48,"column":8,"endLine":85,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"updateIfInvalid","argumentNames":["this"]}

function game_Hitbox_updateIfInvalid__P2223_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_updateIfInvalid__P2223, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  newHitBox___14937: undefined,
  oMinX___14942: undefined,
  oMinY___14945: undefined,
  oMaxX___14948: undefined,
  oMaxY___14954: undefined,
  nMinX___14960: undefined,
  nMinY___14963: undefined,
  nMaxX___14966: undefined,
  nMaxY___14972: undefined,
  xDiff___14978: undefined,
  yDiff___14989: undefined,
  arg0: undefined,
} }





function Fx_abs__P165(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 219;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[219]) return breakpoint(s, 4, 219, r0);
  case 4:
    r0 = (s.arg0 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 220;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[220]) return breakpoint(s, 5, 220, r0);
  case 5:
    r0 = (0 - s.arg0);
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 221;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[221]) return breakpoint(s, 6, 221, r0);
  case 6:
    r0 = s.arg0;
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Fx_abs__P165.info = {"start":1506,"length":164,"line":44,"column":4,"endLine":49,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"abs","argumentNames":["a"]}

function Fx_abs__P165_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_abs__P165, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_sy__P2373(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1073;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1073]) return breakpoint(s, 1, 1073, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_sy"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 335; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_sy__P2373.info = {"start":5719,"length":61,"line":209,"column":4,"endLine":211,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"sy","argumentNames":["this"]}
Sprite_sy__P2373.isGetter = true;

function Sprite_sy__P2373_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_sy__P2373, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_sx__P2371(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1072;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1072]) return breakpoint(s, 1, 1072, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_sx"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 334; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_sx__P2371.info = {"start":5287,"length":61,"line":196,"column":4,"endLine":198,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"sx","argumentNames":["this"]}
Sprite_sx__P2371.isGetter = true;

function Sprite_sx__P2371_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_sx__P2371, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_image__P2391(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1098;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1098]) return breakpoint(s, 1, 1098, r0);
  case 1:
    r0 = s.arg0.fields["_image"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_image__P2391.info = {"start":9023,"length":54,"line":322,"column":4,"endLine":324,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"image","argumentNames":["this"]}
Sprite_image__P2391.isGetter = true;

function Sprite_image__P2391_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_image__P2391, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function effects_ParticleEffect_start__P3265(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.src___15058 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ParticleEffect__C3263_VT)) failedCast(r0);
    s.lastBrkId = 2531;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2531]) return breakpoint(s, 10, 2531, r0);
  case 10:
    r0 = s.arg0.fields["sourceFactory"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2532;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2532]) return breakpoint(s, 11, 2532, r0);
  case 11:
    { step = 9; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2533;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2533]) return breakpoint(s, 12, 2533, r0);
  case 12:
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    if (!r0) { step = 3; continue; }
    r0 = s.arg3;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["defaultRate"];
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_4 = if_sourceFactory_3_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = s.arg1;
    s.tmp_4.arg2 = s.tmp_3;
    if (!s.tmp_4.arg0.vtable.iface) {
      setupLambda(s.tmp_4, pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "sourceFactory"), 3);
      s.callLocIdx = 1258; s.pc = 13; return s.tmp_4;
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["sourceFactory"];
      if (s.tmp_4.fn == null) { setupLambda(s.tmp_4, s.tmp_4.arg0.fields["sourceFactory"], 3); s.callLocIdx = 1258; s.pc = 13; return s.tmp_4; }
      else if (s.tmp_4.fn.isGetter) { s.tmp_4.stage2Call = true; s.callLocIdx = 1258; s.pc = 13; return s.tmp_4;; }
     else { s.callLocIdx = 1258; s.pc = 13; return s.tmp_4; }
    }
  case 13:
    r0 = s.retval;
    s.src___15058 = (r0);
    s.lastBrkId = 2534;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2534]) return breakpoint(s, 14, 2534, r0);
  case 14:
    s.tmp_0 = particles_ParticleSource_setRelativeToCamera__P3163_mk(s);
    s.tmp_0.arg0 = s.src___15058;
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1259; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 2535;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2535]) return breakpoint(s, 16, 2535, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2536;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2536]) return breakpoint(s, 17, 2536, r0);
  case 17:
    r0 = (s.arg2 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.arg2;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["defaultLifespan"];
  case 6:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.src___15058).fields["lifespan"] = (s.tmp_1);
  case 7:
  case 8:
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ParticleEffect_start__P3265.info = {"start":967,"length":452,"line":26,"column":8,"endLine":32,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"start","argumentNames":["this","anchor","duration","particlesPerSecond","relativeToCamera"]}

function effects_ParticleEffect_start__P3265_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ParticleEffect_start__P3265, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  src___15058: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function particles_ParticleSource_setRelativeToCamera__P3163(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3152_VT)) failedCast(r0);
    s.lastBrkId = 2388;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2388]) return breakpoint(s, 3, 2388, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2389;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2389]) return breakpoint(s, 4, 2389, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["pFlags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["pFlags"] = (s.tmp_1);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 2390;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2390]) return breakpoint(s, 5, 2390, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["pFlags"];
    s.tmp_4 = r0;
    r0 = (~ s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 4);
    s.tmp_2 = r0;
    r0 = (~ s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["pFlags"] = (s.tmp_1);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setRelativeToCamera__P3163.info = {"start":6439,"length":173,"line":211,"column":8,"endLine":214,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setRelativeToCamera","argumentNames":["this","on"]}

function particles_ParticleSource_setRelativeToCamera__P3163_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setRelativeToCamera__P3163, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_setFlag__P2420(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1163;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1163]) return breakpoint(s, 3, 1163, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1164;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1164]) return breakpoint(s, 4, 1164, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 1165;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1165]) return breakpoint(s, 5, 1165, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["flags"];
    s.tmp_4 = r0;
    r0 = (~ s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | s.arg1);
    s.tmp_2 = r0;
    r0 = (~ s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setFlag__P2420.info = {"start":20205,"length":130,"line":676,"column":4,"endLine":679,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setFlag","argumentNames":["this","flag","on"]}

function Sprite_setFlag__P2420_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setFlag__P2420, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite__destroyCore__P2430(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___14476 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1205;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1205]) return breakpoint(s, 7, 1205, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
    s.lastBrkId = 1206;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1206]) return breakpoint(s, 8, 1206, r0);
  case 8:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 441; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.scene___14476 = (r0);
    s.lastBrkId = 1207;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1207]) return breakpoint(s, 10, 1207, r0);
  case 10:
    r0 = s.scene___14476.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.arg0);
    s.lastBrkId = 1208;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1208]) return breakpoint(s, 11, 1208, r0);
  case 11:
    s.tmp_2 = Sprite_kind__P2408_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 442; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.scene___14476.fields["spritesByKind"];
    s.tmp_3 = r0;
    s.tmp_5 = Sprite_kind__P2408_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.callLocIdx = 443; s.pc = 13; return s.tmp_5;
  case 13:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.tmp_3, s.tmp_4);
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1209;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1209]) return breakpoint(s, 14, 1209, r0);
  case 14:
    s.tmp_7 = sprites_SpriteSet_remove__P2471_mk(s);
    r0 = s.scene___14476.fields["spritesByKind"];
    s.tmp_8 = r0;
    s.tmp_10 = Sprite_kind__P2408_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 444; s.pc = 16; return s.tmp_10;
  case 16:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.tmp_8, s.tmp_9);
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = s.arg0;
    s.callLocIdx = 445; s.pc = 15; return s.tmp_7;
  case 15:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 1210;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1210]) return breakpoint(s, 17, 1210, r0);
  case 17:
    s.tmp_0 = PhysicsEngine__C2512_v1_2_mk(s);
    r0 = s.scene___14476.fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2512_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.removeSprite;
    s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 1211;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1211]) return breakpoint(s, 19, 1211, r0);
  case 19:
    r0 = s.arg0.fields["destroyHandler"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1212;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1212]) return breakpoint(s, 20, 1212, r0);
  case 20:
    s.tmp_1 = if_destroyHandler_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "destroyHandler"), 1);
      s.callLocIdx = 446; s.pc = 21; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["destroyHandler"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["destroyHandler"], 1); s.callLocIdx = 446; s.pc = 21; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 446; s.pc = 21; return s.tmp_1;; }
     else { s.callLocIdx = 446; s.pc = 21; return s.tmp_1; }
    }
  case 21:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 1213;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1213]) return breakpoint(s, 22, 1213, r0);
  case 22:
    r0 = pxsim_pxtcore_mkAction(1, forEach_inline__P14505);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtcore_mkAction(1, Sprite__destroyCore_inline__P14512);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    s.tmp_2 = helpers_arrayForEach__P109_mk(s);
    s.tmp_3 = helpers_arrayFilter__P110_mk(s);
    r0 = s.scene___14476.fields["destroyedHandlers"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 448; s.pc = 24; return s.tmp_3;
  case 24:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 450; s.pc = 23; return s.tmp_2;
  case 23:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite__destroyCore__P2430.info = {"start":26792,"length":522,"line":870,"column":4,"endLine":882,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"_destroyCore","argumentNames":["this"]}

function Sprite__destroyCore__P2430_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite__destroyCore__P2430, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  scene___14476: undefined,
  arg0: undefined,
} }





function forEach_inline__P14505(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_0 = r0;
    s.tmp_2 = Sprite_kind__P2408_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 447; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 == s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P14505.info = {"start":27237,"length":26,"line":880,"column":20,"endLine":880,"endColumn":46,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P14505_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P14505, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Sprite__destroyCore_inline__P14512(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_2_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 2);
      s.callLocIdx = 449; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 2); s.callLocIdx = 449; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 449; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 449; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite__destroyCore_inline__P14512.info = {"start":27286,"length":20,"line":881,"column":21,"endLine":881,"endColumn":41,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function Sprite__destroyCore_inline__P14512_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite__destroyCore_inline__P14512, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function PhysicsEngine_removeSprite__P2515(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2512_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_removeSprite__P2515.info = {"start":159,"length":32,"line":10,"column":4,"endLine":10,"endColumn":36,"fileName":"pxt_modules/game/physics.ts","functionName":"removeSprite","argumentNames":["this","sprite"]}

function PhysicsEngine_removeSprite__P2515_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_removeSprite__P2515, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_remove__P2471(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___14521 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2464_VT)) failedCast(r0);
    s.lastBrkId = 1322;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1322]) return breakpoint(s, 4, 1322, r0);
  case 4:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_0, s.arg1, undefined);
    s.i___14521 = (r0);
    s.lastBrkId = 1323;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1323]) return breakpoint(s, 5, 1323, r0);
  case 5:
    r0 = (s.i___14521 > -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1324;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1324]) return breakpoint(s, 6, 1324, r0);
  case 6:
    s.tmp_1 = helpers_arraySplice__P100_mk(s);
    r0 = s.arg0.fields["_sprites"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.i___14521;
    s.tmp_1.arg2 = 1;
    s.callLocIdx = 524; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 1325;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1325]) return breakpoint(s, 8, 1325, r0);
  case 8:
    r0 = true;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1326;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1326]) return breakpoint(s, 9, 1326, r0);
  case 9:
    r0 = false;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_remove__P2471.info = {"start":1827,"length":235,"line":66,"column":8,"endLine":73,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"remove","argumentNames":["this","sprite"]}

function sprites_SpriteSet_remove__P2471_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_remove__P2471, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  i___14521: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_kind__P2408(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1127;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1127]) return breakpoint(s, 1, 1127, r0);
  case 1:
    r0 = s.arg0.fields["_kind"];
    return leave(s, r0)
  default: oops()
} } }
Sprite_kind__P2408.info = {"start":12573,"length":41,"line":453,"column":4,"endLine":455,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"kind","argumentNames":["this"]}

function Sprite_kind__P2408_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_kind__P2408, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function game_popScene__P3005(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.oldScene___14241 = undefined;
    s.lastBrkId = 2034;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2034]) return breakpoint(s, 11, 2034, r0);
  case 11:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 962; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.oldScene___14241 = (r0);
    s.lastBrkId = 2035;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2035]) return breakpoint(s, 13, 2035, r0);
  case 13:
    s.tmp_0 = r0 = globals._sceneStack___5138;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(globals._sceneStack___5138);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2036;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2036]) return breakpoint(s, 14, 2036, r0);
  case 14:
    r0 = pxsim_Array_.pop(globals._sceneStack___5138);
    globals._scene___5137 = (r0);
    s.lastBrkId = 2037;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2037]) return breakpoint(s, 15, 2037, r0);
  case 15:
    s.tmp_0 = control_popEventContext__P410_mk(s);
    s.callLocIdx = 963; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 2038;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2038]) return breakpoint(s, 17, 2038, r0);
  case 17:
    r0 = pxsim_numops_toBoolDecr(globals._scene___5137);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2039;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2039]) return breakpoint(s, 18, 2039, r0);
  case 18:
    s.tmp_0 = control_popEventContext__P410_mk(s);
    s.callLocIdx = 964; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.lastBrkId = 2040;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2040]) return breakpoint(s, 20, 2040, r0);
  case 20:
    globals._scene___5137 = (undefined);
  case 4:
  case 5:
  case 6:
    s.lastBrkId = 2041;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2041]) return breakpoint(s, 21, 2041, r0);
  case 21:
    r0 = pxsim_numops_toBoolDecr(globals._scene___5137);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2042;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2042]) return breakpoint(s, 22, 2042, r0);
  case 22:
    s.tmp_0 = particles_enableAll__P3184_mk(s);
    s.callLocIdx = 965; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 2043;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2043]) return breakpoint(s, 24, 2043, r0);
  case 24:
    r0 = pxsim_numops_toBoolDecr(globals._scenePopHandlers___5140);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 2044;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2044]) return breakpoint(s, 25, 2044, r0);
  case 25:
    r0 = pxsim_pxtcore_mkAction(1, game_popScene_inline__P14262);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.oldScene___14241);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_1.arg0 = globals._scenePopHandlers___5140;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 967; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
  case 9:
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_popScene__P3005.info = {"start":5133,"length":548,"line":161,"column":4,"endLine":179,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"popScene","argumentNames":[]}

function game_popScene__P3005_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_popScene__P3005, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  oldScene___14241: undefined,
} }





function game_popScene_inline__P14262(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.arg0;
    s.tmp_0.arg0 = s.caps[0];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 966; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_popScene_inline__P14262.info = {"start":5645,"length":18,"line":177,"column":38,"endLine":177,"endColumn":56,"fileName":"pxt_modules/game/game.ts","functionName":"inline","argumentNames":["cb"]}

function game_popScene_inline__P14262_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_popScene_inline__P14262, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_enableAll__P3184(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___14266 = undefined;
    s.lastBrkId = 2442;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2442]) return breakpoint(s, 3, 2442, r0);
  case 3:
    s.tmp_0 = particles_particleSources__P5488_mk(s);
    s.callLocIdx = 1204; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.sources___14266 = (r0);
    s.lastBrkId = 2443;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2443]) return breakpoint(s, 5, 2443, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.sources___14266);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2444;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2444]) return breakpoint(s, 6, 2444, r0);
  case 6:
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_0.arg0 = s.sources___14266;
    s.tmp_0.arg1 = particles_enableAll_inline__P14272;
    s.callLocIdx = 1206; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2445;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2445]) return breakpoint(s, 8, 2445, r0);
  case 8:
    s.tmp_0 = particles_pruneParticles__P5484_mk(s);
    s.callLocIdx = 1207; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_enableAll__P3184.info = {"start":12649,"length":193,"line":413,"column":4,"endLine":419,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"enableAll","argumentNames":[]}

function particles_enableAll__P3184_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_enableAll__P3184, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___14266: undefined,
} }





function particles_enableAll_inline__P14272(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource_enabled__P3165_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1205; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = true;
    return leave(s, r0)
  default: oops()
} } }
particles_enableAll_inline__P14272.info = {"start":12773,"length":21,"line":416,"column":28,"endLine":416,"endColumn":49,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function particles_enableAll_inline__P14272_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_enableAll_inline__P14272, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_particleSources__P5488(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___14386 = undefined;
    s.lastBrkId = 2446;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2446]) return breakpoint(s, 1, 2446, r0);
  case 1:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 1208; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["particleSources"];
    s.sources___14386 = (r0);
    s.lastBrkId = 2447;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2447]) return breakpoint(s, 3, 2447, r0);
  case 3:
    r0 = s.sources___14386;
    return leave(s, r0)
  default: oops()
} } }
particles_particleSources__P5488.info = {"start":12848,"length":119,"line":421,"column":4,"endLine":424,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"particleSources","argumentNames":[]}

function particles_particleSources__P5488_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_particleSources__P5488, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___14386: undefined,
} }





function particles_pruneParticles__P5484(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___14277 = undefined;
    s.lastBrkId = 2430;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2430]) return breakpoint(s, 3, 2430, r0);
  case 3:
    s.tmp_0 = particles_particleSources__P5488_mk(s);
    s.callLocIdx = 1191; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.sources___14277 = (r0);
    s.lastBrkId = 2431;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2431]) return breakpoint(s, 5, 2431, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.sources___14277);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2432;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2432]) return breakpoint(s, 6, 2432, r0);
  case 6:
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_1 = helpers_arraySlice__P115_mk(s);
    s.tmp_1.arg0 = s.sources___14277;
    s.tmp_1.arg1 = 0;
    r0 = pxsim_Array__length(s.sources___14277);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 1192; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = particles_pruneParticles_inline__P14286;
    s.callLocIdx = 1194; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_pruneParticles__P5484.info = {"start":9864,"length":156,"line":327,"column":4,"endLine":330,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"pruneParticles","argumentNames":[]}

function particles_pruneParticles__P5484_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_pruneParticles__P5484, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  sources___14277: undefined,
} }





function particles_pruneParticles_inline__P14286(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource__prune__P3160_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1193; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_pruneParticles_inline__P14286.info = {"start":9997,"length":15,"line":329,"column":62,"endLine":329,"endColumn":77,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function particles_pruneParticles_inline__P14286_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_pruneParticles_inline__P14286, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_ParticleSource__prune__P3160(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___14316 = undefined;
    s.sources___14324 = undefined;
    s.current___14338 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3152_VT)) failedCast(r0);
    s.lastBrkId = 2369;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2369]) return breakpoint(s, 21, 2369, r0);
  case 21:
  case 1:
    s.lastBrkId = 2370;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2370]) return breakpoint(s, 22, 2370, r0);
  case 22:
    r0 = s.arg0.fields["head"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = s.arg0.fields["head"];
    r0 = r0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2371;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2371]) return breakpoint(s, 23, 2371, r0);
  case 23:
    r0 = s.arg0.fields["head"];
    r0 = r0.fields["next"];
    s.tmp_3 = r0;
    r0 = (s.arg0).fields["head"] = (s.tmp_3);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 2372;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2372]) return breakpoint(s, 24, 2372, r0);
  case 24:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["head"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 6:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 2373;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2373]) return breakpoint(s, 25, 2373, r0);
  case 25:
    s.tmp_5 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 1166; s.pc = 26; return s.tmp_5;
  case 26:
    r0 = s.retval;
    s.scene___14316 = (r0);
    s.lastBrkId = 2374;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2374]) return breakpoint(s, 27, 2374, r0);
  case 27:
    r0 = pxsim_numops_toBoolDecr(s.scene___14316);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2375;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2375]) return breakpoint(s, 28, 2375, r0);
  case 28:
    r0 = s.scene___14316.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.arg0);
  case 7:
  case 8:
    s.lastBrkId = 2376;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2376]) return breakpoint(s, 29, 2376, r0);
  case 29:
    s.tmp_0 = particles_particleSources__P5488_mk(s);
    s.callLocIdx = 1167; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    s.sources___14324 = (r0);
    s.lastBrkId = 2377;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2377]) return breakpoint(s, 31, 2377, r0);
  case 31:
    s.tmp_0 = r0 = s.sources___14324;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 9:
    r0 = pxsim_Array__length(s.sources___14324);
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 2378;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2378]) return breakpoint(s, 32, 2378, r0);
  case 32:
    r0 = pxsim_Array_.removeElement(s.sources___14324, s.arg0);
  case 11:
  case 12:
    s.lastBrkId = 2379;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2379]) return breakpoint(s, 33, 2379, r0);
  case 33:
    r0 = s.arg0.fields["anchor"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 == undefined);
  case 13:
  case 14:
    s.lastBrkId = 2380;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2380]) return breakpoint(s, 34, 2380, r0);
  case 34:
    r0 = s.arg0.fields["head"];
    s.current___14338 = (r0);
    s.lastBrkId = 2381;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2381]) return breakpoint(s, 35, 2381, r0);
  case 35:
  case 15:
    s.lastBrkId = 2382;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2382]) return breakpoint(s, 36, 2382, r0);
  case 36:
    s.tmp_0 = r0 = s.current___14338;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 16:
    r0 = s.current___14338.fields["next"];
  case 17:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 2383;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2383]) return breakpoint(s, 37, 2383, r0);
  case 37:
    r0 = s.current___14338.fields["next"];
    r0 = r0.fields["lifespan"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 <= 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 2384;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2384]) return breakpoint(s, 38, 2384, r0);
  case 38:
    r0 = s.current___14338.fields["next"];
    r0 = r0.fields["next"];
    s.tmp_4 = r0;
    r0 = (s.current___14338).fields["next"] = (s.tmp_4);
    { step = 19; continue; }
  case 18:
    s.lastBrkId = 2385;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2385]) return breakpoint(s, 39, 2385, r0);
  case 39:
    r0 = s.current___14338.fields["next"];
    s.current___14338 = (r0);
  case 19:
    { step = 15; continue; }
  case 20:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource__prune__P3160.info = {"start":5104,"length":830,"line":166,"column":8,"endLine":189,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"_prune","argumentNames":["this"]}

function particles_ParticleSource__prune__P3160_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource__prune__P3160, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  scene___14316: undefined,
  sources___14324: undefined,
  current___14338: undefined,
  arg0: undefined,
} }





function particles_ParticleSource_enabled__P3165(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3152_VT)) failedCast(r0);
    s.lastBrkId = 2392;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2392]) return breakpoint(s, 5, 2392, r0);
  case 5:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = particles_ParticleSource_enabled__P3164_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 1170; s.pc = 6; return s.tmp_3;
  case 6:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 !== s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2393;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2393]) return breakpoint(s, 7, 2393, r0);
  case 7:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["pFlags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 1);
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 ^ 1);
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = (s.arg0).fields["pFlags"] = (s.tmp_6);
    s.lastBrkId = 2394;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2394]) return breakpoint(s, 8, 2394, r0);
  case 8:
    r0 = (s.arg0).fields["timer"] = (0);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_enabled__P3165.info = {"start":6816,"length":214,"line":223,"column":8,"endLine":228,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"enabled","argumentNames":["this","v"]}

function particles_ParticleSource_enabled__P3165_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_enabled__P3165, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_enabled__P3164(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3152_VT)) failedCast(r0);
    s.lastBrkId = 2391;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2391]) return breakpoint(s, 1, 2391, r0);
  case 1:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 1);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
particles_ParticleSource_enabled__P3164.info = {"start":6622,"length":76,"line":216,"column":8,"endLine":218,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"enabled","argumentNames":["this"]}
particles_ParticleSource_enabled__P3164.isGetter = true;

function particles_ParticleSource_enabled__P3164_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_enabled__P3164, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function control_popEventContext__P410(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctx___14393 = undefined;
    s.context___14401 = undefined;
    s.lastBrkId = 497;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[497]) return breakpoint(s, 8, 497, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(globals.eventContexts___4637);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 498;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[498]) return breakpoint(s, 9, 498, r0);
  case 9:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 499;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[499]) return breakpoint(s, 10, 499, r0);
  case 10:
    r0 = pxsim_Array_.pop(globals.eventContexts___4637);
    s.ctx___14393 = (r0);
    s.lastBrkId = 500;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[500]) return breakpoint(s, 11, 500, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.ctx___14393);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 501;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[501]) return breakpoint(s, 12, 501, r0);
  case 12:
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 502;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[502]) return breakpoint(s, 13, 502, r0);
  case 13:
    s.tmp_2 = control_EventContext_unregister__P402_mk(s);
    s.tmp_2.arg0 = s.ctx___14393;
    s.callLocIdx = 63; s.pc = 14; return s.tmp_2;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 503;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[503]) return breakpoint(s, 15, 503, r0);
  case 15:
    s.tmp_0 = r0 = globals.eventContexts___4637;
    r0 = pxsim_Array__length(globals.eventContexts___4637);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    s.context___14401 = (r0);
    s.lastBrkId = 504;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[504]) return breakpoint(s, 16, 504, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(s.context___14401);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 505;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[505]) return breakpoint(s, 17, 505, r0);
  case 17:
    s.tmp_0 = control_EventContext_register__P401_mk(s);
    s.tmp_0.arg0 = s.context___14401;
    s.callLocIdx = 64; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 506;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[506]) return breakpoint(s, 19, 506, r0);
  case 19:
    globals.eventContexts___4637 = (undefined);
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_popEventContext__P410.info = {"start":7755,"length":413,"line":236,"column":4,"endLine":250,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"popEventContext","argumentNames":[]}

function control_popEventContext__P410_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_popEventContext__P410, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  ctx___14393: undefined,
  context___14401: undefined,
} }





function control_EventContext_register__P401(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.h___14414 = undefined;
    s.unnamed1300___U1 = undefined;
    s.unnamed1301___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.lastBrkId = 453;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[453]) return breakpoint(s, 3, 453, r0);
  case 3:
    s.h___14414 = (undefined);
    r0 = s.arg0.fields["handlers"];
    s.unnamed1300___U1 = (r0);
    s.unnamed1301___U2 = (0);
    s.lastBrkId = 454;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[454]) return breakpoint(s, 4, 454, r0);
  case 4:
  case 1:
    s.tmp_0 = r0 = s.unnamed1301___U2;
    r0 = pxsim_Array__length(s.unnamed1300___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1300___U1, s.unnamed1301___U2);
    s.h___14414 = (r0);
    s.lastBrkId = 455;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[455]) return breakpoint(s, 5, 455, r0);
  case 5:
    s.lastBrkId = 456;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[456]) return breakpoint(s, 6, 456, r0);
  case 6:
    s.tmp_2 = control_EventHandler_register__P4630_mk(s);
    s.tmp_2.arg0 = s.h___14414;
    s.callLocIdx = 54; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    r0 = (s.unnamed1301___U2 + 1);
    s.unnamed1301___U2 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed1300___U1 = (undefined);
    s.lastBrkId = 457;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[457]) return breakpoint(s, 8, 457, r0);
  case 8:
    s.tmp_0 = control_EventContext_registerFrameCallbacks__P4635_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 55; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_register__P401.info = {"start":4573,"length":138,"line":135,"column":8,"endLine":139,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"register","argumentNames":["this"]}

function control_EventContext_register__P401_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_register__P401, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  h___14414: undefined,
  unnamed1300___U1: undefined,
  unnamed1301___U2: undefined,
  arg0: undefined,
} }





function controller__setUserEventsEnabled__P2207(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 969;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[969]) return breakpoint(s, 1, 969, r0);
  case 1:
    globals._userEventsEnabled___4933 = (s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller__setUserEventsEnabled__P2207.info = {"start":10070,"length":101,"line":291,"column":4,"endLine":293,"endColumn":5,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"_setUserEventsEnabled","argumentNames":["enabled"]}

function controller__setUserEventsEnabled__P2207_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller__setUserEventsEnabled__P2207, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_constructor__P3089(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C3088_VT)) failedCast(r0);
    r0 = (s.arg0).fields["iconImage"] = (s.arg1);
    r0 = (s.arg0).fields["getText"] = (s.arg2);
    r0 = (s.arg0).fields["action"] = (s.arg3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_constructor__P3089.info = {"start":786,"length":108,"line":38,"column":8,"endLine":39,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":["this","iconImage","getText","action"]}

function scene_systemMenu_MenuOption_constructor__P3089_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_constructor__P3089, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function helpers_screenBrightness__P1967(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 598;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[598]) return breakpoint(s, 1, 598, r0);
  case 1:
    r0 = globals.brightness___1952;
    return leave(s, r0)
  default: oops()
} } }
helpers_screenBrightness__P1967.info = {"start":9161,"length":98,"line":288,"column":4,"endLine":290,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"screenBrightness","argumentNames":["img"]}

function helpers_screenBrightness__P1967_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_screenBrightness__P1967, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function music_volume__P1622(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 516;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[516]) return breakpoint(s, 1, 516, r0);
  case 1:
    s.tmp_0 = music_initVolume__P4672_mk(s);
    s.callLocIdx = 69; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 517;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[517]) return breakpoint(s, 3, 517, r0);
  case 3:
    r0 = globals.globalVolume___4668;
    return leave(s, r0)
  default: oops()
} } }
music_volume__P1622.info = {"start":1781,"length":90,"line":61,"column":4,"endLine":64,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"volume","argumentNames":[]}

function music_volume__P1622_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_volume__P1622, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function music_initVolume__P4672(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 511;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[511]) return breakpoint(s, 3, 511, r0);
  case 3:
    r0 = (globals.globalVolume___4668 === null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 512;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[512]) return breakpoint(s, 4, 512, r0);
  case 4:
    globals.globalVolume___4668 = (0);
    s.lastBrkId = 513;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[513]) return breakpoint(s, 5, 513, r0);
  case 5:
    s.tmp_0 = music_setVolume__P1621_mk(s);
    r0 = pxsim_pxtcore.getConfig(59, 128);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 66; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_initVolume__P4672.info = {"start":1014,"length":180,"line":33,"column":4,"endLine":38,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"initVolume","argumentNames":[]}

function music_initVolume__P4672_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_initVolume__P4672, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_PauseMenu_show__P3098(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.current___13678 = undefined;
    s.i___13679 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C3096_VT)) failedCast(r0);
    s.lastBrkId = 2115;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2115]) return breakpoint(s, 3, 2115, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = if_generator_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "generator"), 1);
      s.callLocIdx = 1008; s.pc = 4; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["generator"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["generator"], 1); s.callLocIdx = 1008; s.pc = 4; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 1008; s.pc = 4; return s.tmp_2;; }
     else { s.callLocIdx = 1008; s.pc = 4; return s.tmp_2; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["options"] = (s.tmp_1);
    s.lastBrkId = 2116;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2116]) return breakpoint(s, 5, 2116, r0);
  case 5:
    r0 = (s.arg0).fields["selection"] = (0);
    s.lastBrkId = 2117;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2117]) return breakpoint(s, 6, 2117, r0);
  case 6:
    s.i___13679 = (0);
    s.lastBrkId = 2118;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2118]) return breakpoint(s, 7, 2118, r0);
  case 7:
  case 1:
    s.lastBrkId = 2119;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2119]) return breakpoint(s, 8, 2119, r0);
  case 8:
    s.tmp_1 = r0 = s.i___13679;
    r0 = s.arg0.fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2120;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2120]) return breakpoint(s, 9, 2120, r0);
  case 9:
    r0 = s.arg0.fields["options"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.i___13679);
    s.current___13678 = (r0);
    s.lastBrkId = 2121;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2121]) return breakpoint(s, 10, 2121, r0);
  case 10:
    s.tmp_0 = scene_systemMenu_MenuOption_show__P3090_mk(s);
    s.tmp_0.arg0 = s.current___13678;
    s.callLocIdx = 1009; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2122;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2122]) return breakpoint(s, 12, 2122, r0);
  case 12:
    s.tmp_0 = scene_systemMenu_MenuOption_setTheme__P3093_mk(s);
    s.tmp_0.arg0 = s.current___13678;
    r0 = s.arg0.fields["theme"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1010; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 2123;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2123]) return breakpoint(s, 14, 2123, r0);
  case 14:
    s.tmp_0 = scene_systemMenu_MenuOption_position__P3091_mk(s);
    s.tmp_0.arg0 = s.current___13678;
    s.tmp_2 = if_padding_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "padding");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["padding"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["padding"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1011; s.pc = 16; return s.tmp_2; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_5 = r0 = s.i___13679;
    s.tmp_7 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_7.arg0 = r0;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "cardsPerRow");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 1012; s.pc = 17; return s.tmp_7; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5 % s.tmp_6);
    s.tmp_4 = r0;
    s.tmp_10 = if_cardWidth_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_10.arg0 = r0;
    if (!s.tmp_10.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_10.arg0, "cardWidth");
    } else {
      s.tmp_10.fn = s.tmp_10.arg0.vtable.iface["cardWidth"];
      if (s.tmp_10.fn == null) { s.retval = s.tmp_10.arg0.fields["cardWidth"]; }
      else if (!s.tmp_10.fn.isGetter) { s.retval = bind(s.tmp_10); }
     else { s.callLocIdx = 1013; s.pc = 18; return s.tmp_10; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_9 = r0;
    s.tmp_12 = if_cardSpacing_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_12.arg0 = r0;
    if (!s.tmp_12.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_12.arg0, "cardSpacing");
    } else {
      s.tmp_12.fn = s.tmp_12.arg0.vtable.iface["cardSpacing"];
      if (s.tmp_12.fn == null) { s.retval = s.tmp_12.arg0.fields["cardSpacing"]; }
      else if (!s.tmp_12.fn.isGetter) { s.retval = bind(s.tmp_12); }
     else { s.callLocIdx = 1014; s.pc = 19; return s.tmp_12; }
    }
  case 19:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_9 + s.tmp_11);
    s.tmp_8 = r0;
    r0 = (s.tmp_4 * s.tmp_8);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 + s.tmp_3);
    s.tmp_0.arg1 = r0;
    s.tmp_14 = if_cardsTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_14.arg0 = r0;
    if (!s.tmp_14.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_14.arg0, "cardsTop");
    } else {
      s.tmp_14.fn = s.tmp_14.arg0.vtable.iface["cardsTop"];
      if (s.tmp_14.fn == null) { s.retval = s.tmp_14.arg0.fields["cardsTop"]; }
      else if (!s.tmp_14.fn.isGetter) { s.retval = bind(s.tmp_14); }
     else { s.callLocIdx = 1015; s.pc = 20; return s.tmp_14; }
    }
  case 20:
    r0 = s.retval;
    s.tmp_13 = r0;
    s.tmp_17 = r0 = s.i___13679;
    s.tmp_19 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_19.arg0 = r0;
    if (!s.tmp_19.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_19.arg0, "cardsPerRow");
    } else {
      s.tmp_19.fn = s.tmp_19.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_19.fn == null) { s.retval = s.tmp_19.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_19.fn.isGetter) { s.retval = bind(s.tmp_19); }
     else { s.callLocIdx = 1016; s.pc = 21; return s.tmp_19; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_18 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_17, s.tmp_18);
    s.tmp_16 = r0;
    s.tmp_22 = if_cardWidth_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_22.arg0 = r0;
    if (!s.tmp_22.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_22.arg0, "cardWidth");
    } else {
      s.tmp_22.fn = s.tmp_22.arg0.vtable.iface["cardWidth"];
      if (s.tmp_22.fn == null) { s.retval = s.tmp_22.arg0.fields["cardWidth"]; }
      else if (!s.tmp_22.fn.isGetter) { s.retval = bind(s.tmp_22); }
     else { s.callLocIdx = 1017; s.pc = 22; return s.tmp_22; }
    }
  case 22:
    r0 = s.retval;
    s.tmp_21 = r0;
    s.tmp_24 = if_cardSpacing_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_24.arg0 = r0;
    if (!s.tmp_24.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_24.arg0, "cardSpacing");
    } else {
      s.tmp_24.fn = s.tmp_24.arg0.vtable.iface["cardSpacing"];
      if (s.tmp_24.fn == null) { s.retval = s.tmp_24.arg0.fields["cardSpacing"]; }
      else if (!s.tmp_24.fn.isGetter) { s.retval = bind(s.tmp_24); }
     else { s.callLocIdx = 1018; s.pc = 23; return s.tmp_24; }
    }
  case 23:
    r0 = s.retval;
    s.tmp_23 = r0;
    r0 = (s.tmp_21 + s.tmp_23);
    s.tmp_20 = r0;
    r0 = (s.tmp_16 * s.tmp_20);
    s.tmp_15 = r0;
    r0 = (s.tmp_13 + s.tmp_15);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 1019; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 2124;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2124]) return breakpoint(s, 24, 2124, r0);
  case 24:
    r0 = (s.i___13679 + 1);
    s.i___13679 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 2125;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2125]) return breakpoint(s, 25, 2125, r0);
  case 25:
    s.tmp_0 = controller__setUserEventsEnabled__P2207_mk(s);
    s.tmp_0.arg0 = false;
    s.callLocIdx = 1020; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.lastBrkId = 2126;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2126]) return breakpoint(s, 27, 2126, r0);
  case 27:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P13742);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2197_mk(s);
    s.tmp_1.arg0 = globals.A___2114;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1022; s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    s.lastBrkId = 2130;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2130]) return breakpoint(s, 29, 2130, r0);
  case 29:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P13762);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2197_mk(s);
    s.tmp_1.arg0 = globals.A___2114;
    s.tmp_1.arg1 = 2052;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1024; s.pc = 30; return s.tmp_1;
  case 30:
    r0 = s.retval;
    s.lastBrkId = 2135;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2135]) return breakpoint(s, 31, 2135, r0);
  case 31:
    s.tmp_0 = controller_Button_onEvent__P2197_mk(s);
    s.tmp_0.arg0 = globals.B___2115;
    s.tmp_0.arg1 = 2053;
    s.tmp_0.arg2 = scene_systemMenu_PauseMenu_show_inline__P13791;
    s.callLocIdx = 1026; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.lastBrkId = 2137;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2137]) return breakpoint(s, 33, 2137, r0);
  case 33:
    s.tmp_0 = controller_Button_onEvent__P2197_mk(s);
    s.tmp_0.arg0 = globals.menu___2120;
    s.tmp_0.arg1 = 2053;
    s.tmp_0.arg2 = scene_systemMenu_PauseMenu_show_inline__P13796;
    s.callLocIdx = 1028; s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
    s.lastBrkId = 2139;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2139]) return breakpoint(s, 35, 2139, r0);
  case 35:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P13801);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2197_mk(s);
    s.tmp_1.arg0 = globals.up___2117;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1032; s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.lastBrkId = 2141;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2141]) return breakpoint(s, 37, 2141, r0);
  case 37:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P13813);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2197_mk(s);
    s.tmp_1.arg0 = globals.left___2116;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1035; s.pc = 38; return s.tmp_1;
  case 38:
    r0 = s.retval;
    s.lastBrkId = 2143;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2143]) return breakpoint(s, 39, 2143, r0);
  case 39:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P13822);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2197_mk(s);
    s.tmp_1.arg0 = globals.down___2119;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1039; s.pc = 40; return s.tmp_1;
  case 40:
    r0 = s.retval;
    s.lastBrkId = 2145;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2145]) return breakpoint(s, 41, 2145, r0);
  case 41:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P13838);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P2197_mk(s);
    s.tmp_1.arg0 = globals.right___2118;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1042; s.pc = 42; return s.tmp_1;
  case 42:
    r0 = s.retval;
    s.lastBrkId = 2147;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2147]) return breakpoint(s, 43, 2147, r0);
  case 43:
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P13850);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = game_onShade__P3018_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 1045; s.pc = 44; return s.tmp_1;
  case 44:
    r0 = s.retval;
    s.lastBrkId = 2150;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2150]) return breakpoint(s, 45, 2150, r0);
  case 45:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P3100_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 1046; s.pc = 46; return s.tmp_0;
  case 46:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show__P3098.info = {"start":3296,"length":2241,"line":123,"column":8,"endLine":181,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"show","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_show__P3098_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show__P3098, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  tmp_24: undefined,
  current___13678: undefined,
  i___13679: undefined,
  arg0: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P13742(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2127;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2127]) return breakpoint(s, 6, 2127, r0);
  case 6:
    r0 = s.caps[0].fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.caps[0].fields["options"];
    s.tmp_5 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.tmp_6);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2128;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2128]) return breakpoint(s, 7, 2128, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2129;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2129]) return breakpoint(s, 8, 2129, r0);
  case 8:
    s.tmp_8 = scene_systemMenu_MenuOption_setState__P3094_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_9 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_10 = r0;
    r0 = pxsim_Array__getAt(s.tmp_9, s.tmp_10);
    s.tmp_8.arg0 = r0;
    s.tmp_8.arg1 = 1;
    s.callLocIdx = 1021; s.pc = 9; return s.tmp_8;
  case 9:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P13742.info = {"start":4025,"length":170,"line":140,"column":50,"endLine":143,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P13742_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P13742, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P13762(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2131;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2131]) return breakpoint(s, 6, 2131, r0);
  case 6:
    r0 = s.caps[0].fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.caps[0].fields["options"];
    s.tmp_5 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.tmp_6);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2132;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2132]) return breakpoint(s, 7, 2132, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2133;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2133]) return breakpoint(s, 8, 2133, r0);
  case 8:
    s.tmp_8 = scene_systemMenu_MenuOption_setState__P3094_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_9 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_10 = r0;
    r0 = pxsim_Array__getAt(s.tmp_9, s.tmp_10);
    s.tmp_8.arg0 = r0;
    s.tmp_8.arg1 = 0;
    s.callLocIdx = 1023; s.pc = 9; return s.tmp_8;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 2134;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2134]) return breakpoint(s, 10, 2134, r0);
  case 10:
    r0 = s.caps[0].fields["options"];
    s.tmp_1 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_2);
    r0 = r0.fields["action"];
    s.tmp_0 = r0;
    r0 = pxsim.control.runInParallel(s.tmp_0);
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P13762.info = {"start":4247,"length":247,"line":145,"column":48,"endLine":149,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P13762_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P13762, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P13791(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2136;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2136]) return breakpoint(s, 1, 2136, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_closeMenu__P3103_mk(s);
    s.callLocIdx = 1025; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P13791.info = {"start":4548,"length":50,"line":151,"column":50,"endLine":153,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P13791_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P13791, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P13796(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2138;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2138]) return breakpoint(s, 1, 2138, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_closeMenu__P3103_mk(s);
    s.callLocIdx = 1027; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P13796.info = {"start":4655,"length":50,"line":155,"column":53,"endLine":157,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P13796_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P13796, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P13801(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2140;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2140]) return breakpoint(s, 1, 2140, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P3100_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_1.arg0 = 0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_2 = r0;
    s.tmp_4 = if_cardsPerRow_1_mk(s);
    r0 = s.caps[0].fields["theme"];
    s.tmp_4.arg0 = r0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "cardsPerRow");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 1029; s.pc = 4; return s.tmp_4; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1030; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1031; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P13801.info = {"start":4760,"length":110,"line":159,"column":51,"endLine":161,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P13801_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P13801, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P13813(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2142;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2142]) return breakpoint(s, 1, 2142, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P3100_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_1.arg0 = 0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1033; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1034; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P13813.info = {"start":4927,"length":89,"line":163,"column":53,"endLine":165,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P13813_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P13813, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P13822(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2144;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2144]) return breakpoint(s, 1, 2144, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P3100_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_min__P131_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg0 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_4 = r0;
    s.tmp_6 = if_cardsPerRow_1_mk(s);
    r0 = s.caps[0].fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "cardsPerRow");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1036; s.pc = 4; return s.tmp_6; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1037; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1038; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P13822.info = {"start":5073,"length":132,"line":167,"column":53,"endLine":169,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P13822_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P13822, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P13838(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2146;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2146]) return breakpoint(s, 1, 2146, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P3100_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_min__P131_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg0 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1040; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1041; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P13838.info = {"start":5263,"length":111,"line":171,"column":54,"endLine":173,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P13838_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P13838, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P13850(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2148;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2148]) return breakpoint(s, 1, 2148, r0);
  case 1:
    s.tmp_0 = scene_systemMenu_PauseMenu_onUpdate__P3099_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1043; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2149;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2149]) return breakpoint(s, 3, 2149, r0);
  case 3:
    s.tmp_0 = scene_systemMenu_PauseMenu_drawText__P3101_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1044; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P13850.info = {"start":5403,"length":87,"line":175,"column":25,"endLine":178,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P13850_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P13850, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_PauseMenu_drawText__P3101(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C3096_VT)) failedCast(r0);
    s.lastBrkId = 2174;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2174]) return breakpoint(s, 4, 2174, r0);
  case 4:
    r0 = s.arg0.fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2175;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2175]) return breakpoint(s, 5, 2175, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2176;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2176]) return breakpoint(s, 6, 2176, r0);
  case 6:
    s.tmp_3 = helpers_imageFillRect__P1957_mk(s);
    s.tmp_3.arg0 = globals.screen___2033;
    s.tmp_3.arg1 = 0;
    s.tmp_3.arg2 = 0;
    r0 = pxsim_ImageMethods.width(globals.screen___2033);
    s.tmp_3.arg3 = r0;
    s.tmp_5 = if_cardsTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "cardsTop");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["cardsTop"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["cardsTop"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1057; s.pc = 8; return s.tmp_5; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 2);
    s.tmp_3.arg4 = r0;
    s.tmp_3.arg5 = 15;
    s.callLocIdx = 1058; s.pc = 7; return s.tmp_3;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2177;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2177]) return breakpoint(s, 9, 2177, r0);
  case 9:
    s.tmp_0 = helpers_imagePrintCenter__P1990_mk(s);
    s.tmp_0.arg0 = globals.screen___2033;
    s.tmp_1 = if_headerText_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "headerText");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["headerText"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["headerText"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1059; s.pc = 11; return s.tmp_1; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 2;
    s.tmp_0.arg3 = 1;
    s.tmp_2 = if_headerFont_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "headerFont");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["headerFont"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["headerFont"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1060; s.pc = 12; return s.tmp_2; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 1061; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 2178;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2178]) return breakpoint(s, 13, 2178, r0);
  case 13:
    s.tmp_0 = helpers_imageFillRect__P1957_mk(s);
    s.tmp_0.arg0 = globals.screen___2033;
    s.tmp_0.arg1 = 0;
    s.tmp_2 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "infoTop");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["infoTop"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["infoTop"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1062; s.pc = 15; return s.tmp_2; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 3);
    s.tmp_0.arg2 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___2033);
    s.tmp_0.arg3 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___2033);
    s.tmp_4 = r0;
    s.tmp_6 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "infoTop");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["infoTop"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["infoTop"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1063; s.pc = 16; return s.tmp_6; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 6);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 15;
    s.callLocIdx = 1064; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 2179;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2179]) return breakpoint(s, 17, 2179, r0);
  case 17:
    s.tmp_0 = helpers_imageFillRect__P1957_mk(s);
    s.tmp_0.arg0 = globals.screen___2033;
    s.tmp_1 = if_padding_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "padding");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["padding"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["padding"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1065; s.pc = 19; return s.tmp_1; }
    }
  case 19:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "infoTop");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["infoTop"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["infoTop"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1066; s.pc = 20; return s.tmp_2; }
    }
  case 20:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___2033);
    s.tmp_3 = r0;
    s.tmp_6 = if_padding_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "padding");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["padding"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["padding"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1067; s.pc = 21; return s.tmp_6; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 << 1);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_0.arg3 = r0;
    s.tmp_8 = if_charHeight_1_mk(s);
    s.tmp_9 = if_infoFont_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_9.arg0 = r0;
    if (!s.tmp_9.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_9.arg0, "infoFont");
    } else {
      s.tmp_9.fn = s.tmp_9.arg0.vtable.iface["infoFont"];
      if (s.tmp_9.fn == null) { s.retval = s.tmp_9.arg0.fields["infoFont"]; }
      else if (!s.tmp_9.fn.isGetter) { s.retval = bind(s.tmp_9); }
     else { s.callLocIdx = 1068; s.pc = 23; return s.tmp_9; }
    }
  case 23:
    r0 = s.retval;
    s.tmp_8.arg0 = r0;
    if (!s.tmp_8.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_8.arg0, "charHeight");
    } else {
      s.tmp_8.fn = s.tmp_8.arg0.vtable.iface["charHeight"];
      if (s.tmp_8.fn == null) { s.retval = s.tmp_8.arg0.fields["charHeight"]; }
      else if (!s.tmp_8.fn.isGetter) { s.retval = bind(s.tmp_8); }
     else { s.callLocIdx = 1069; s.pc = 22; return s.tmp_8; }
    }
  case 22:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_7 + 1);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 1070; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 2180;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2180]) return breakpoint(s, 24, 2180, r0);
  case 24:
    s.tmp_0 = helpers_imagePrintCenter__P1990_mk(s);
    s.tmp_0.arg0 = globals.screen___2033;
    s.tmp_1 = if_getText_1_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_3);
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "getText"), 1);
      s.callLocIdx = 1071; s.pc = 26; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["getText"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["getText"], 1); s.callLocIdx = 1071; s.pc = 26; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 1071; s.pc = 26; return s.tmp_1;; }
     else { s.callLocIdx = 1071; s.pc = 26; return s.tmp_1; }
    }
  case 26:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_5 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "infoTop");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["infoTop"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["infoTop"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1072; s.pc = 27; return s.tmp_5; }
    }
  case 27:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 15;
    s.tmp_6 = if_infoFont_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "infoFont");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["infoFont"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["infoFont"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1073; s.pc = 28; return s.tmp_6; }
    }
  case 28:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 1074; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_drawText__P3101.info = {"start":6927,"length":795,"line":224,"column":8,"endLine":241,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"drawText","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_drawText__P3101_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_drawText__P3101, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
} }





function helpers_imagePrintCenter__P1990(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.w___13937 = undefined;
    s.x___13943 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 614;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[614]) return breakpoint(s, 3, 614, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 615;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[615]) return breakpoint(s, 4, 615, r0);
  case 4:
    s.tmp_2 = image_getFontForText__P1978_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 102; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.arg4 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 616;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[616]) return breakpoint(s, 6, 616, r0);
  case 6:
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_0 = r0;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.arg4;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 103; s.pc = 7; return s.tmp_2; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.w___13937 = (r0);
    s.lastBrkId = 617;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[617]) return breakpoint(s, 8, 617, r0);
  case 8:
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.w___13937);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 2);
    s.x___13943 = (r0);
    s.lastBrkId = 618;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[618]) return breakpoint(s, 9, 618, r0);
  case 9:
    s.tmp_0 = helpers_imagePrint__P1991_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.x___13943;
    s.tmp_0.arg3 = s.arg2;
    s.tmp_0.arg4 = s.arg3;
    s.tmp_0.arg5 = s.arg4;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 104; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imagePrintCenter__P1990.info = {"start":15025,"length":295,"line":206,"column":4,"endLine":211,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"imagePrintCenter","argumentNames":["img","text","y","color","font"]}

function helpers_imagePrintCenter__P1990_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imagePrintCenter__P1990, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  w___13937: undefined,
  x___13943: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function scene_systemMenu_PauseMenu_setSelection__P3100(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C3096_VT)) failedCast(r0);
    s.lastBrkId = 2166;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2166]) return breakpoint(s, 10, 2166, r0);
  case 10:
    r0 = s.arg0.fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2167;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2167]) return breakpoint(s, 11, 2167, r0);
  case 11:
    { step = 9; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2168;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2168]) return breakpoint(s, 12, 2168, r0);
  case 12:
    r0 = s.arg0.fields["options"];
    s.tmp_4 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2169;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2169]) return breakpoint(s, 13, 2169, r0);
  case 13:
    s.tmp_6 = scene_systemMenu_MenuOption_setState__P3094_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_7 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__getAt(s.tmp_7, s.tmp_8);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 2;
    s.callLocIdx = 1054; s.pc = 14; return s.tmp_6;
  case 14:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 2170;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2170]) return breakpoint(s, 15, 2170, r0);
  case 15:
    r0 = (s.arg0).fields["selection"] = (s.arg1);
    s.lastBrkId = 2171;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2171]) return breakpoint(s, 16, 2171, r0);
  case 16:
    r0 = s.arg0.fields["options"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2172;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2172]) return breakpoint(s, 17, 2172, r0);
  case 17:
    s.tmp_4 = controller_Button__C2190_v0_1_mk(s);
    s.tmp_4.arg0 = globals.A___2114;
    if (!checkSubtype(s.tmp_4.arg0, controller_Button__C2190_VT)) failedCast(s.tmp_4.arg0);
    s.tmp_4.fn = s.tmp_4.arg0.vtable.methods.isPressed;
    s.pc = 18; return s.tmp_4;
  case 18:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    r0 = 1;
    { step = 6; continue; }
  case 5:
    r0 = 0;
  case 6:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.tmp_6 = scene_systemMenu_MenuOption_setState__P3094_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_7 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__getAt(s.tmp_7, s.tmp_8);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.tmp_5;
    s.callLocIdx = 1055; s.pc = 19; return s.tmp_6;
  case 19:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 2173;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2173]) return breakpoint(s, 20, 2173, r0);
  case 20:
    s.tmp_0 = scene_systemMenu_PauseMenu_updateScrollTarget__P5394_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1056; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_setSelection__P3100.info = {"start":6436,"length":481,"line":208,"column":8,"endLine":222,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setSelection","argumentNames":["this","selection"]}

function scene_systemMenu_PauseMenu_setSelection__P3100_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_setSelection__P3100, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_PauseMenu_updateScrollTarget__P5394(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.row___14193 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C3096_VT)) failedCast(r0);
    s.lastBrkId = 2184;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2184]) return breakpoint(s, 8, 2184, r0);
  case 8:
    r0 = s.arg0.fields["selection"];
    s.tmp_0 = r0;
    s.tmp_2 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "cardsPerRow");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1077; s.pc = 9; return s.tmp_2; }
    }
  case 9:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_1);
    s.row___14193 = (r0);
    s.lastBrkId = 2185;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2185]) return breakpoint(s, 10, 2185, r0);
  case 10:
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_1 = r0;
    r0 = (s.row___14193 === s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.row___14193 - 1);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 === s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2186;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2186]) return breakpoint(s, 11, 2186, r0);
  case 11:
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2187;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2187]) return breakpoint(s, 12, 2187, r0);
  case 12:
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_6 = r0;
    r0 = (s.row___14193 > s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 2188;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2188]) return breakpoint(s, 13, 2188, r0);
  case 13:
    s.tmp_7 = r0 = s.arg0;
    r0 = s.tmp_7.fields["scrollRow"];
    s.tmp_9 = r0;
    r0 = (s.tmp_9 + 1);
    s.tmp_8 = r0;
    r0 = (s.tmp_7).fields["scrollRow"] = (s.tmp_8);
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 2189;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2189]) return breakpoint(s, 14, 2189, r0);
  case 14:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["scrollRow"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["scrollRow"] = (s.tmp_1);
  case 6:
    s.lastBrkId = 2190;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2190]) return breakpoint(s, 15, 2190, r0);
  case 15:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_2 = r0;
    s.tmp_5 = if_cardSpacing_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "cardSpacing");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["cardSpacing"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["cardSpacing"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1078; s.pc = 16; return s.tmp_5; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_4 = r0;
    s.tmp_7 = if_cardWidth_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_7.arg0 = r0;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "cardWidth");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["cardWidth"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["cardWidth"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 1079; s.pc = 17; return s.tmp_7; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 * s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["scrollTarget"] = (s.tmp_1);
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_updateScrollTarget__P5394.info = {"start":7907,"length":458,"line":250,"column":8,"endLine":260,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"updateScrollTarget","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_updateScrollTarget__P5394_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_updateScrollTarget__P5394, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  row___14193: undefined,
  arg0: undefined,
} }





function scene_systemMenu_PauseMenu_onUpdate__P3099(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.t___13959 = undefined;
    s.i___13963 = undefined;
    s.dt___13992 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C3096_VT)) failedCast(r0);
    s.lastBrkId = 2151;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2151]) return breakpoint(s, 10, 2151, r0);
  case 10:
    r0 = pxsim.control.millis();
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 250);
    s.t___13959 = (r0);
    s.lastBrkId = 2152;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2152]) return breakpoint(s, 11, 2152, r0);
  case 11:
    s.i___13963 = (0);
    s.lastBrkId = 2153;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2153]) return breakpoint(s, 12, 2153, r0);
  case 12:
  case 1:
    s.lastBrkId = 2154;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2154]) return breakpoint(s, 13, 2154, r0);
  case 13:
    s.tmp_1 = r0 = s.i___13963;
    r0 = s.arg0.fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2155;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2155]) return breakpoint(s, 14, 2155, r0);
  case 14:
    s.tmp_4 = scene_systemMenu_MenuOption_setOffset__P3092_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.i___13963);
    s.tmp_4.arg0 = r0;
    s.tmp_8 = r0 = s.t___13959;
    s.tmp_11 = r0 = s.i___13963;
    s.tmp_13 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_13.arg0 = r0;
    if (!s.tmp_13.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_13.arg0, "cardsPerRow");
    } else {
      s.tmp_13.fn = s.tmp_13.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_13.fn == null) { s.retval = s.tmp_13.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_13.fn.isGetter) { s.retval = bind(s.tmp_13); }
     else { s.callLocIdx = 1047; s.pc = 16; return s.tmp_13; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = (s.tmp_11 % s.tmp_12);
    s.tmp_10 = r0;
    r0 = (s.tmp_10 * 1.5707963267948966);
    s.tmp_9 = r0;
    r0 = (s.tmp_8 - s.tmp_9);
    s.tmp_7 = r0;
    r0 = pxsim.Math_.sin(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (2 * s.tmp_6);
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 1048; s.pc = 15; return s.tmp_4;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 2156;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2156]) return breakpoint(s, 17, 2156, r0);
  case 17:
    r0 = (s.i___13963 + 1);
    s.i___13963 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 2157;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2157]) return breakpoint(s, 18, 2157, r0);
  case 18:
    s.tmp_0 = control_EventContext_deltaTime__P400_mk(s);
    s.tmp_1 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 1049; s.pc = 20; return s.tmp_1;
  case 20:
    r0 = s.retval;
    r0 = r0.fields["eventContext"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1050; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.dt___13992 = (r0);
    s.lastBrkId = 2158;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2158]) return breakpoint(s, 21, 2158, r0);
  case 21:
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2159;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2159]) return breakpoint(s, 22, 2159, r0);
  case 22:
    s.tmp_3 = r0 = s.arg0;
    r0 = s.tmp_3.fields["scrollOffset"];
    s.tmp_5 = r0;
    r0 = (s.dt___13992 * 100);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["scrollOffset"] = (s.tmp_4);
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 2160;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2160]) return breakpoint(s, 23, 2160, r0);
  case 23:
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 > s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2161;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2161]) return breakpoint(s, 24, 2161, r0);
  case 24:
    s.tmp_3 = r0 = s.arg0;
    r0 = s.tmp_3.fields["scrollOffset"];
    s.tmp_5 = r0;
    r0 = (s.dt___13992 * 100);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 - s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["scrollOffset"] = (s.tmp_4);
    { step = 5; continue; }
  case 4:
    s.lastBrkId = 2162;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2162]) return breakpoint(s, 25, 2162, r0);
  case 25:
    { step = 9; continue; }
  case 5:
  case 6:
    s.lastBrkId = 2163;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2163]) return breakpoint(s, 26, 2163, r0);
  case 26:
    s.tmp_2 = Math_abs__P128_mk(s);
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1051; s.pc = 27; return s.tmp_2;
  case 27:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 2164;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2164]) return breakpoint(s, 28, 2164, r0);
  case 28:
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_5 = r0;
    r0 = (s.arg0).fields["scrollOffset"] = (s.tmp_5);
  case 7:
  case 8:
    s.lastBrkId = 2165;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2165]) return breakpoint(s, 29, 2165, r0);
  case 29:
    s.tmp_0 = scene_Camera_offsetY__P2790_mk(s);
    s.tmp_1 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 1052; s.pc = 31; return s.tmp_1;
  case 31:
    r0 = s.retval;
    r0 = r0.fields["camera"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1053; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_onUpdate__P3099.info = {"start":5547,"length":879,"line":183,"column":8,"endLine":206,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"onUpdate","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_onUpdate__P3099_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_onUpdate__P3099, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  t___13959: undefined,
  i___13963: undefined,
  dt___13992: undefined,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_setOffset__P3092(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C3088_VT)) failedCast(r0);
    s.lastBrkId = 2087;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2087]) return breakpoint(s, 1, 2087, r0);
  case 1:
    s.tmp_0 = Sprite_top__P2405_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["top"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + s.arg1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 990; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2088;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2088]) return breakpoint(s, 3, 2088, r0);
  case 3:
    s.tmp_0 = Sprite_y__P2358_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_y__P2357_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 991; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 992; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_setOffset__P3092.info = {"start":1411,"length":123,"line":61,"column":8,"endLine":64,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setOffset","argumentNames":["this","offset"]}

function scene_systemMenu_MenuOption_setOffset__P3092_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_setOffset__P3092, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_top__P2405(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.physics___14070 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1123;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1123]) return breakpoint(s, 1, 1123, r0);
  case 1:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 367; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["physicsEngine"];
    s.physics___14070 = (r0);
    s.lastBrkId = 1124;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1124]) return breakpoint(s, 3, 1124, r0);
  case 3:
    s.tmp_0 = PhysicsEngine__C2512_v2_4_mk(s);
    s.tmp_0.arg0 = s.physics___14070;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = 0;
    s.tmp_1 = Fx_sub__P159_mk(s);
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 368; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    r0 = s.arg0.fields["_y"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 369; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2512_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.moveSprite;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_top__P2405.info = {"start":11687,"length":256,"line":421,"column":4,"endLine":431,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"top","argumentNames":["this","value"]}

function Sprite_top__P2405_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_top__P2405, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  physics___14070: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function PhysicsEngine_moveSprite__P2516(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2512_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_moveSprite__P2516.info = {"start":230,"length":43,"line":13,"column":4,"endLine":13,"endColumn":47,"fileName":"pxt_modules/game/physics.ts","functionName":"moveSprite","argumentNames":["this","s","dx","dy"]}

function PhysicsEngine_moveSprite__P2516_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_moveSprite__P2516, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite_top__P2404(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1122;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1122]) return breakpoint(s, 1, 1122, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_y"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 366; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_top__P2404.info = {"start":11544,"length":53,"line":416,"column":4,"endLine":418,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"top","argumentNames":["this"]}
Sprite_top__P2404.isGetter = true;

function Sprite_top__P2404_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_top__P2404, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_y__P2358(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1059;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1059]) return breakpoint(s, 1, 1059, r0);
  case 1:
    s.tmp_0 = Sprite_top__P2405_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_4 = Sprite_height__P2399_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 318; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 319; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_y__P2358.info = {"start":3081,"length":65,"line":126,"column":4,"endLine":128,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"y","argumentNames":["this","v"]}

function Sprite_y__P2358_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_y__P2358, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_height__P2399(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1116;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1116]) return breakpoint(s, 1, 1116, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_height"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 357; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_height__P2399.info = {"start":10541,"length":61,"line":380,"column":4,"endLine":382,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"height","argumentNames":["this"]}
Sprite_height__P2399.isGetter = true;

function Sprite_height__P2399_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_height__P2399, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_setState__P3094(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C3088_VT)) failedCast(r0);
    s.lastBrkId = 2091;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2091]) return breakpoint(s, 4, 2091, r0);
  case 4:
    r0 = s.arg0.fields["state"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2092;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2092]) return breakpoint(s, 5, 2092, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2093;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2093]) return breakpoint(s, 6, 2093, r0);
  case 6:
    r0 = (s.arg0).fields["state"] = (s.arg1);
    s.lastBrkId = 2094;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2094]) return breakpoint(s, 7, 2094, r0);
  case 7:
    s.tmp_0 = scene_systemMenu_MenuOption_updateCard__P5393_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 994; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_setState__P3094.info = {"start":1655,"length":147,"line":71,"column":8,"endLine":75,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setState","argumentNames":["this","state"]}

function scene_systemMenu_MenuOption_setState__P3094_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_setState__P3094, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_MenuOption_updateCard__P5393(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C3088_VT)) failedCast(r0);
    s.lastBrkId = 2100;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2100]) return breakpoint(s, 8, 2100, r0);
  case 8:
    r0 = s.arg0.fields["theme"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2101;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2101]) return breakpoint(s, 9, 2101, r0);
  case 9:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2102;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2102]) return breakpoint(s, 10, 2102, r0);
  case 10:
    r0 = s.arg0.fields["state"];
    s.tmp_3 = r0;
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_3);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_3);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_3);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_3;
    { step = 6; continue; }
  case 3:
    s.lastBrkId = 2103;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2103]) return breakpoint(s, 11, 2103, r0);
  case 11:
    s.tmp_4 = Sprite_setImage__P2392_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_4.arg0 = r0;
    s.tmp_5 = if_basicCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "basicCard");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["basicCard"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["basicCard"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 997; s.pc = 13; return s.tmp_5; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 998; s.pc = 12; return s.tmp_4;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 2104;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2104]) return breakpoint(s, 14, 2104, r0);
  case 14:
    { step = 6; continue; }
  case 4:
    s.lastBrkId = 2105;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2105]) return breakpoint(s, 15, 2105, r0);
  case 15:
    s.tmp_0 = Sprite_setImage__P2392_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = if_selectedCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "selectedCard");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["selectedCard"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["selectedCard"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 999; s.pc = 17; return s.tmp_1; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1000; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 2106;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2106]) return breakpoint(s, 18, 2106, r0);
  case 18:
    { step = 6; continue; }
  case 5:
    s.lastBrkId = 2107;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2107]) return breakpoint(s, 19, 2107, r0);
  case 19:
    s.tmp_0 = Sprite_setImage__P2392_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = if_activeCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "activeCard");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["activeCard"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["activeCard"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1001; s.pc = 21; return s.tmp_1; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1002; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 2108;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2108]) return breakpoint(s, 22, 2108, r0);
  case 22:
  case 6:
    s.lastBrkId = 2109;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2109]) return breakpoint(s, 23, 2109, r0);
  case 23:
    s.tmp_0 = Sprite_x__P2356_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_x__P2355_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1003; s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1004; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 2110;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2110]) return breakpoint(s, 26, 2110, r0);
  case 26:
    s.tmp_0 = Sprite_y__P2358_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_y__P2357_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1005; s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1006; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_updateCard__P5393.info = {"start":2038,"length":497,"line":86,"column":8,"endLine":97,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"updateCard","argumentNames":["this"]}

function scene_systemMenu_MenuOption_updateCard__P5393_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_updateCard__P5393, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function Sprite_x__P2356(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1057;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1057]) return breakpoint(s, 1, 1057, r0);
  case 1:
    s.tmp_0 = Sprite_left__P2401_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_4 = Sprite_width__P2398_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 313; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 314; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_x__P2356.info = {"start":2724,"length":65,"line":115,"column":4,"endLine":117,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"x","argumentNames":["this","v"]}

function Sprite_x__P2356_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_x__P2356, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_left__P2401(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.physics___15181 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1118;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1118]) return breakpoint(s, 1, 1118, r0);
  case 1:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 359; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["physicsEngine"];
    s.physics___15181 = (r0);
    s.lastBrkId = 1119;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1119]) return breakpoint(s, 3, 1119, r0);
  case 3:
    s.tmp_0 = PhysicsEngine__C2512_v2_4_mk(s);
    s.tmp_0.arg0 = s.physics___15181;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_1 = Fx_sub__P159_mk(s);
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 360; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    r0 = s.arg0.fields["_x"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 361; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2512_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.moveSprite;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_left__P2401.info = {"start":10853,"length":257,"line":391,"column":4,"endLine":401,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"left","argumentNames":["this","value"]}

function Sprite_left__P2401_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_left__P2401, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  physics___15181: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_left__P2400(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1117;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1117]) return breakpoint(s, 1, 1117, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_x"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 358; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_left__P2400.info = {"start":10709,"length":53,"line":386,"column":4,"endLine":388,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"left","argumentNames":["this"]}
Sprite_left__P2400.isGetter = true;

function Sprite_left__P2400_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_left__P2400, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_width__P2398(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1115;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1115]) return breakpoint(s, 1, 1115, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_width"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 356; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_width__P2398.info = {"start":10374,"length":59,"line":375,"column":4,"endLine":377,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"width","argumentNames":["this"]}
Sprite_width__P2398.isGetter = true;

function Sprite_width__P2398_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_width__P2398, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_setTheme__P3093(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C3088_VT)) failedCast(r0);
    s.lastBrkId = 2089;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2089]) return breakpoint(s, 1, 2089, r0);
  case 1:
    r0 = (s.arg0).fields["theme"] = (s.arg1);
    s.lastBrkId = 2090;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2090]) return breakpoint(s, 2, 2090, r0);
  case 2:
    s.tmp_0 = scene_systemMenu_MenuOption_updateCard__P5393_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 993; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_setTheme__P3093.info = {"start":1544,"length":101,"line":66,"column":8,"endLine":69,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setTheme","argumentNames":["this","theme"]}

function scene_systemMenu_MenuOption_setTheme__P3093_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_setTheme__P3093, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_MenuOption_position__P3091(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C3088_VT)) failedCast(r0);
    s.lastBrkId = 2082;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2082]) return breakpoint(s, 1, 2082, r0);
  case 1:
    r0 = (s.arg0).fields["top"] = (s.arg2);
    s.lastBrkId = 2083;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2083]) return breakpoint(s, 2, 2083, r0);
  case 2:
    s.tmp_0 = Sprite_left__P2401_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 984; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.lastBrkId = 2084;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2084]) return breakpoint(s, 4, 2084, r0);
  case 4:
    s.tmp_0 = Sprite_top__P2405_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 985; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2085;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2085]) return breakpoint(s, 6, 2085, r0);
  case 6:
    s.tmp_0 = Sprite_x__P2356_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_x__P2355_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 986; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 987; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2086;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2086]) return breakpoint(s, 9, 2086, r0);
  case 9:
    s.tmp_0 = Sprite_y__P2358_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_y__P2357_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 988; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 989; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_position__P3091.info = {"start":1178,"length":223,"line":51,"column":8,"endLine":59,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"position","argumentNames":["this","left","top"]}

function scene_systemMenu_MenuOption_position__P3091_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_position__P3091, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_systemMenu_MenuOption_show__P3090(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C3088_VT)) failedCast(r0);
    s.lastBrkId = 2077;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2077]) return breakpoint(s, 3, 2077, r0);
  case 3:
    r0 = s.arg0.fields["theme"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = if_basicCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "basicCard");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["basicCard"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["basicCard"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 979; s.pc = 4; return s.tmp_1; }
    }
  case 4:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    r0 = globals.CARD_NORMAL___3112;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = r0 = s.arg0;
    s.tmp_5 = sprites_create__P2276_mk(s);
    s.tmp_5.arg0 = s.tmp_2;
    s.tmp_5.arg1 = undefined;
    s.callLocIdx = 980; s.pc = 5; return s.tmp_5;
  case 5:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["card"] = (s.tmp_4);
    s.lastBrkId = 2078;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2078]) return breakpoint(s, 6, 2078, r0);
  case 6:
    s.tmp_0 = if_z_2_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 1;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "z", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/z"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["z"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 981; s.pc = 7; return s.tmp_0; }
    }
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2079;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2079]) return breakpoint(s, 8, 2079, r0);
  case 8:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = sprites_create__P2276_mk(s);
    r0 = s.arg0.fields["iconImage"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = undefined;
    s.callLocIdx = 982; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["icon"] = (s.tmp_1);
    s.lastBrkId = 2080;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2080]) return breakpoint(s, 10, 2080, r0);
  case 10:
    s.tmp_0 = if_z_2_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 2;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "z", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/z"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["z"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 983; s.pc = 11; return s.tmp_0; }
    }
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2081;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2081]) return breakpoint(s, 12, 2081, r0);
  case 12:
    r0 = (s.arg0).fields["state"] = (2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_show__P3090.info = {"start":904,"length":264,"line":41,"column":8,"endLine":49,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"show","argumentNames":["this"]}

function scene_systemMenu_MenuOption_show__P3090_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_show__P3090, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function sprites_create__P2276(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___15261 = undefined;
    s.sprite___15264 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1050;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1050]) return breakpoint(s, 1, 1050, r0);
  case 1:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 304; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.scene___15261 = (r0);
    s.lastBrkId = 1051;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1051]) return breakpoint(s, 3, 1051, r0);
  case 3:
    r0 = pxsim_pxtcore_mkClassInstance(Sprite__C2342_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Sprite_constructor__P2389_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.callLocIdx = 305; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.sprite___15264 = (s.tmp_0);
    s.lastBrkId = 1052;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1052]) return breakpoint(s, 5, 1052, r0);
  case 5:
    s.tmp_0 = Sprite_setKind__P2409_mk(s);
    s.tmp_0.arg0 = s.sprite___15264;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 306; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 1053;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1053]) return breakpoint(s, 7, 1053, r0);
  case 7:
    s.tmp_0 = PhysicsEngine__C2512_v0_2_mk(s);
    r0 = s.scene___15261.fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.sprite___15264;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2512_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.addSprite;
    s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 1054;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1054]) return breakpoint(s, 9, 1054, r0);
  case 9:
    r0 = pxsim_pxtcore_mkAction(1, forEach_inline__P15279);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    r0 = pxsim_pxtcore_mkAction(1, sprites_create_inline__P15285);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.sprite___15264);
    s.tmp_2 = helpers_arrayForEach__P109_mk(s);
    s.tmp_3 = helpers_arrayFilter__P110_mk(s);
    r0 = s.scene___15261.fields["createdHandlers"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 307; s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 309; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 1055;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1055]) return breakpoint(s, 12, 1055, r0);
  case 12:
    r0 = s.sprite___15264;
    return leave(s, r0)
  default: oops()
} } }
sprites_create__P2276.info = {"start":890,"length":400,"line":35,"column":4,"endLine":47,"endColumn":5,"fileName":"pxt_modules/game/sprites.ts","functionName":"create","argumentNames":["img","kind"]}

function sprites_create__P2276_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_create__P2276, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scene___15261: undefined,
  sprite___15264: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function forEach_inline__P15279(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 == s.caps[0]);
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P15279.info = {"start":1195,"length":19,"line":43,"column":20,"endLine":43,"endColumn":39,"fileName":"pxt_modules/game/sprites.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P15279_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P15279, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_create_inline__P15285(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_2_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 2);
      s.callLocIdx = 308; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 2); s.callLocIdx = 308; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 308; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 308; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_create_inline__P15285.info = {"start":1237,"length":22,"line":44,"column":21,"endLine":44,"endColumn":43,"fileName":"pxt_modules/game/sprites.ts","functionName":"inline","argumentNames":["h"]}

function sprites_create_inline__P15285_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_create_inline__P15285, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function PhysicsEngine_addSprite__P2514(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2512_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_addSprite__P2514.info = {"start":124,"length":29,"line":8,"column":4,"endLine":8,"endColumn":33,"fileName":"pxt_modules/game/physics.ts","functionName":"addSprite","argumentNames":["this","sprite"]}

function PhysicsEngine_addSprite__P2514_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_addSprite__P2514, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_setKind__P2409(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.spritesByKind___15303 = undefined;
    s.overlapMap___15332 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1128;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1128]) return breakpoint(s, 16, 1128, r0);
  case 16:
    r0 = (s.arg1 == undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_kind"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === s.arg1);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1129;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1129]) return breakpoint(s, 17, 1129, r0);
  case 17:
    { step = 15; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1130;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1130]) return breakpoint(s, 18, 1130, r0);
  case 18:
    s.tmp_3 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 374; s.pc = 19; return s.tmp_3;
  case 19:
    r0 = s.retval;
    r0 = r0.fields["spritesByKind"];
    s.spritesByKind___15303 = (r0);
    s.lastBrkId = 1131;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1131]) return breakpoint(s, 20, 1131, r0);
  case 20:
    r0 = s.arg0.fields["_kind"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["_kind"];
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___15303, s.tmp_2);
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1132;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1132]) return breakpoint(s, 21, 1132, r0);
  case 21:
    s.tmp_4 = sprites_SpriteSet_remove__P2471_mk(s);
    r0 = s.arg0.fields["_kind"];
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___15303, s.tmp_5);
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.arg0;
    s.callLocIdx = 375; s.pc = 22; return s.tmp_4;
  case 22:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 1133;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1133]) return breakpoint(s, 23, 1133, r0);
  case 23:
    r0 = (s.arg1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1134;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1134]) return breakpoint(s, 24, 1134, r0);
  case 24:
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___15303, s.arg1);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1135;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1135]) return breakpoint(s, 25, 1135, r0);
  case 25:
    r0 = pxsim_pxtcore_mkClassInstance(sprites_SpriteSet__C2464_VT);
    s.tmp_4 = r0;
    s.tmp_5 = sprites_SpriteSet_constructor__P2466_mk(s);
    s.tmp_5.arg0 = s.tmp_4;
    s.callLocIdx = 376; s.pc = 26; return s.tmp_5;
  case 26:
    r0 = s.retval;
    r0 = pxsim_pxtrt.mapSetGeneric(s.spritesByKind___15303, s.arg1, s.tmp_4);
  case 9:
  case 10:
    s.lastBrkId = 1136;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1136]) return breakpoint(s, 27, 1136, r0);
  case 27:
    s.tmp_0 = sprites_SpriteSet_add__P2469_mk(s);
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___15303, s.arg1);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 377; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
  case 11:
  case 12:
    s.lastBrkId = 1137;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1137]) return breakpoint(s, 29, 1137, r0);
  case 29:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 378; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    r0 = r0.fields["overlapMap"];
    s.overlapMap___15332 = (r0);
    s.lastBrkId = 1138;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1138]) return breakpoint(s, 31, 1138, r0);
  case 31:
    r0 = pxsim_pxtrt.mapGetGeneric(s.overlapMap___15332, s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1139;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1139]) return breakpoint(s, 32, 1139, r0);
  case 32:
    s.tmp_3 = r0 = s.overlapMap___15332;
    s.tmp_4 = r0 = s.arg1;
    r0 = pxsim_Array__mk();
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapSetGeneric(s.tmp_3, s.tmp_4, s.tmp_5);
  case 13:
  case 14:
    s.lastBrkId = 1140;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1140]) return breakpoint(s, 33, 1140, r0);
  case 33:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.overlapMap___15332, s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_kindsOverlappedWith"] = (s.tmp_1);
    s.lastBrkId = 1141;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1141]) return breakpoint(s, 34, 1141, r0);
  case 34:
    r0 = (s.arg0).fields["_kind"] = (s.arg1);
  case 15:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setKind__P2409.info = {"start":12841,"length":663,"line":464,"column":4,"endLine":484,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setKind","argumentNames":["this","value"]}

function Sprite_setKind__P2409_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setKind__P2409, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  spritesByKind___15303: undefined,
  overlapMap___15332: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_add__P2469(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2464_VT)) failedCast(r0);
    s.lastBrkId = 1316;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1316]) return breakpoint(s, 6, 1316, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1317;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1317]) return breakpoint(s, 7, 1317, r0);
  case 7:
    r0 = false;
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1318;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1318]) return breakpoint(s, 8, 1318, r0);
  case 8:
    s.tmp_3 = sprites_SpriteSet_contains__P2472_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 523; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1319;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1319]) return breakpoint(s, 10, 1319, r0);
  case 10:
    r0 = false;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1320;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1320]) return breakpoint(s, 11, 1320, r0);
  case 11:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_4, s.arg1);
    s.lastBrkId = 1321;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1321]) return breakpoint(s, 12, 1321, r0);
  case 12:
    r0 = true;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_add__P2469.info = {"start":1041,"length":263,"line":41,"column":8,"endLine":49,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"add","argumentNames":["this","sprite"]}

function sprites_SpriteSet_add__P2469_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_add__P2469, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_contains__P2472(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2464_VT)) failedCast(r0);
    s.lastBrkId = 1327;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1327]) return breakpoint(s, 1, 1327, r0);
  case 1:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_1 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_1, s.arg1, undefined);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 > -1);
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_contains__P2472.info = {"start":2172,"length":100,"line":79,"column":8,"endLine":81,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"contains","argumentNames":["this","sprite"]}

function sprites_SpriteSet_contains__P2472_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_contains__P2472, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_constructor__P2466(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2464_VT)) failedCast(r0);
    s.lastBrkId = 1314;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1314]) return breakpoint(s, 1, 1314, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_sprites"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_constructor__P2466.info = {"start":485,"length":57,"line":19,"column":8,"endLine":21,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"inline","argumentNames":["this"]}

function sprites_SpriteSet_constructor__P2466_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_constructor__P2466, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Sprite_constructor__P2389(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1078;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1078]) return breakpoint(s, 1, 1078, r0);
  case 1:
    s.tmp_0 = sprites_BaseSprite_constructor__P2097_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 336; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 1079;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1079]) return breakpoint(s, 3, 1079, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = pxsim_ImageMethods.width(globals.screen___2033);
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 337; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 1080;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1080]) return breakpoint(s, 5, 1080, r0);
  case 5:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = pxsim_ImageMethods.height(globals.screen___2033);
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 338; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    s.lastBrkId = 1081;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1081]) return breakpoint(s, 7, 1081, r0);
  case 7:
    r0 = s.arg0.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["_lastX"] = (s.tmp_0);
    s.lastBrkId = 1082;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1082]) return breakpoint(s, 8, 1082, r0);
  case 8:
    r0 = s.arg0.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["_lastY"] = (s.tmp_0);
    s.lastBrkId = 1083;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1083]) return breakpoint(s, 9, 1083, r0);
  case 9:
    s.tmp_0 = Sprite_vx__P2360_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 339; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 1084;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1084]) return breakpoint(s, 11, 1084, r0);
  case 11:
    s.tmp_0 = Sprite_vy__P2362_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 340; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 1085;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1085]) return breakpoint(s, 13, 1085, r0);
  case 13:
    s.tmp_0 = Sprite_ax__P2364_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 341; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.lastBrkId = 1086;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1086]) return breakpoint(s, 15, 1086, r0);
  case 15:
    s.tmp_0 = Sprite_ay__P2366_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 342; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 1087;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1087]) return breakpoint(s, 17, 1087, r0);
  case 17:
    s.tmp_0 = Sprite_fx__P2368_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 343; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.lastBrkId = 1088;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1088]) return breakpoint(s, 19, 1088, r0);
  case 19:
    s.tmp_0 = Sprite_fy__P2370_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 344; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 1089;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1089]) return breakpoint(s, 21, 1089, r0);
  case 21:
    r0 = (s.arg0).fields["_sx"] = (256);
    s.lastBrkId = 1090;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1090]) return breakpoint(s, 22, 1090, r0);
  case 22:
    r0 = (s.arg0).fields["_sy"] = (256);
    s.lastBrkId = 1091;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1091]) return breakpoint(s, 23, 1091, r0);
  case 23:
    r0 = (s.arg0).fields["flags"] = (0);
    s.lastBrkId = 1092;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1092]) return breakpoint(s, 24, 1092, r0);
  case 24:
    s.tmp_0 = Sprite_setImage__P2392_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 345; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.lastBrkId = 1093;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1093]) return breakpoint(s, 26, 1093, r0);
  case 26:
    s.tmp_0 = Sprite_setKind__P2409_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = -1;
    s.callLocIdx = 346; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    s.lastBrkId = 1094;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1094]) return breakpoint(s, 28, 1094, r0);
  case 28:
    r0 = (s.arg0).fields["layer"] = (1);
    s.lastBrkId = 1095;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1095]) return breakpoint(s, 29, 1095, r0);
  case 29:
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    s.lastBrkId = 1096;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1096]) return breakpoint(s, 30, 1096, r0);
  case 30:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_overlappers"] = (s.tmp_1);
    s.lastBrkId = 1097;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1097]) return breakpoint(s, 31, 1097, r0);
  case 31:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_obstacles"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_constructor__P2389.info = {"start":7406,"length":678,"line":278,"column":4,"endLine":300,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["this","img"]}

function Sprite_constructor__P2389_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_constructor__P2389, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_fy__P2370(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1071;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1071]) return breakpoint(s, 1, 1071, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_3 = Math_max__P130_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 332; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 333; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_fy"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_fy__P2370.info = {"start":5109,"length":64,"line":191,"column":4,"endLine":193,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fy","argumentNames":["this","v"]}

function Sprite_fy__P2370_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fy__P2370, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_fy__P2369(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1070;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1070]) return breakpoint(s, 1, 1070, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_fy"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 331; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_fy__P2369.info = {"start":4947,"length":60,"line":186,"column":4,"endLine":188,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fy","argumentNames":["this"]}
Sprite_fy__P2369.isGetter = true;

function Sprite_fy__P2369_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fy__P2369, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_fx__P2368(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1069;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1069]) return breakpoint(s, 1, 1069, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_3 = Math_max__P130_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 329; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 330; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_fx"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_fx__P2368.info = {"start":4766,"length":64,"line":181,"column":4,"endLine":183,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fx","argumentNames":["this","v"]}

function Sprite_fx__P2368_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fx__P2368, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_fx__P2367(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1068;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1068]) return breakpoint(s, 1, 1068, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_fx"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 328; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_fx__P2367.info = {"start":4604,"length":60,"line":176,"column":4,"endLine":178,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fx","argumentNames":["this"]}
Sprite_fx__P2367.isGetter = true;

function Sprite_fx__P2367_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fx__P2367, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_ay__P2366(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1067;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1067]) return breakpoint(s, 1, 1067, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 327; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_ay"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_ay__P2366.info = {"start":4435,"length":51,"line":170,"column":4,"endLine":172,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ay","argumentNames":["this","v"]}

function Sprite_ay__P2366_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ay__P2366, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_ay__P2365(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1066;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1066]) return breakpoint(s, 1, 1066, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_ay"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 326; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_ay__P2365.info = {"start":4269,"length":60,"line":165,"column":4,"endLine":167,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ay","argumentNames":["this"]}
Sprite_ay__P2365.isGetter = true;

function Sprite_ay__P2365_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ay__P2365, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_ax__P2364(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1065;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1065]) return breakpoint(s, 1, 1065, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 325; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_ax"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_ax__P2364.info = {"start":4096,"length":51,"line":159,"column":4,"endLine":161,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ax","argumentNames":["this","v"]}

function Sprite_ax__P2364_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ax__P2364, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_ax__P2363(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1064;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1064]) return breakpoint(s, 1, 1064, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_ax"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 324; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_ax__P2363.info = {"start":3930,"length":60,"line":154,"column":4,"endLine":156,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ax","argumentNames":["this"]}
Sprite_ax__P2363.isGetter = true;

function Sprite_ax__P2363_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ax__P2363, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_vy__P2362(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1063;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1063]) return breakpoint(s, 1, 1063, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 323; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_vy__P2362.info = {"start":3757,"length":51,"line":148,"column":4,"endLine":150,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vy","argumentNames":["this","v"]}

function Sprite_vy__P2362_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vy__P2362, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_vy__P2361(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1062;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1062]) return breakpoint(s, 1, 1062, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_vy"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 322; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_vy__P2361.info = {"start":3595,"length":60,"line":143,"column":4,"endLine":145,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vy","argumentNames":["this"]}
Sprite_vy__P2361.isGetter = true;

function Sprite_vy__P2361_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vy__P2361, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_vx__P2360(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1061;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1061]) return breakpoint(s, 1, 1061, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 321; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vx"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_vx__P2360.info = {"start":3426,"length":51,"line":137,"column":4,"endLine":139,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vx","argumentNames":["this","v"]}

function Sprite_vx__P2360_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vx__P2360, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_vx__P2359(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1060;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1060]) return breakpoint(s, 1, 1060, r0);
  case 1:
    s.tmp_0 = Fx_toFloat__P173_mk(s);
    r0 = s.arg0.fields["_vx"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 320; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_vx__P2359.info = {"start":3264,"length":60,"line":132,"column":4,"endLine":134,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vx","argumentNames":["this"]}
Sprite_vx__P2359.isGetter = true;

function Sprite_vx__P2359_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vx__P2359, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_BaseSprite_constructor__P2097(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C2095_VT)) failedCast(r0);
    s.lastBrkId = 752;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[752]) return breakpoint(s, 1, 752, r0);
  case 1:
    s.tmp_0 = sprites_BaseSprite_z__P2100_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 137; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 753;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[753]) return breakpoint(s, 3, 753, r0);
  case 3:
    s.tmp_0 = scene_Scene_addSprite__P2871_mk(s);
    s.tmp_1 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 138; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 139; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite_constructor__P2097.info = {"start":344,"length":170,"line":15,"column":8,"endLine":20,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"inline","argumentNames":["this","z"]}

function sprites_BaseSprite_constructor__P2097_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite_constructor__P2097, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Scene_addSprite__P2871(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2844_VT)) failedCast(r0);
    s.lastBrkId = 1971;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1971]) return breakpoint(s, 1, 1971, r0);
  case 1:
    r0 = s.arg0.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    s.lastBrkId = 1972;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1972]) return breakpoint(s, 2, 1972, r0);
  case 2:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["spriteNextId"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["spriteNextId"] = (s.tmp_1);
    s.tmp_3 = if_id_2_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.tmp_3.arg1 = s.tmp_2;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_3.arg0, "id", s.tmp_3.arg1);
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["set/id"];
      if (s.tmp_3.fn === null) { s.tmp_3.arg0.fields["id"] = s.tmp_3.arg1; }
      else if (s.tmp_3.fn === undefined) { failedCast(s.tmp_3.arg0) } 
     else { s.callLocIdx = 937; s.pc = 3; return s.tmp_3; }
    }
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_addSprite__P2871.info = {"start":7218,"length":128,"line":200,"column":8,"endLine":203,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"addSprite","argumentNames":["this","sprite"]}

function scene_Scene_addSprite__P2871_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_addSprite__P2871, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite_z__P2100(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C2095_VT)) failedCast(r0);
    s.lastBrkId = 756;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[756]) return breakpoint(s, 3, 756, r0);
  case 3:
    r0 = s.arg0.fields["_z"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 757;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[757]) return breakpoint(s, 4, 757, r0);
  case 4:
    r0 = (s.arg0).fields["_z"] = (s.arg1);
    s.lastBrkId = 758;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[758]) return breakpoint(s, 5, 758, r0);
  case 5:
    s.tmp_1 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 140; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_2);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite_z__P2100.info = {"start":656,"length":174,"line":30,"column":8,"endLine":35,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"z","argumentNames":["this","v"]}

function sprites_BaseSprite_z__P2100_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite_z__P2100, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite_z__P2099(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C2095_VT)) failedCast(r0);
    s.lastBrkId = 755;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[755]) return breakpoint(s, 1, 755, r0);
  case 1:
    r0 = s.arg0.fields["_z"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_BaseSprite_z__P2099.info = {"start":591,"length":55,"line":26,"column":8,"endLine":28,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"z","argumentNames":["this"]}
sprites_BaseSprite_z__P2099.isGetter = true;

function sprites_BaseSprite_z__P2099_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite_z__P2099, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function game_onShade__P3018(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2045;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2045]) return breakpoint(s, 4, 2045, r0);
  case 4:
    s.tmp_0 = game_init__P5145_mk(s);
    s.tmp_0.arg0 = undefined;
    s.callLocIdx = 968; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2046;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2046]) return breakpoint(s, 6, 2046, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2047;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2047]) return breakpoint(s, 7, 2047, r0);
  case 7:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2048;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2048]) return breakpoint(s, 8, 2048, r0);
  case 8:
    s.tmp_2 = scene_createRenderable__P2806_mk(s);
    s.tmp_2.arg0 = 80;
    s.tmp_2.arg1 = s.arg0;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 969; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_onShade__P3018.info = {"start":15927,"length":145,"line":474,"column":4,"endLine":478,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"onShade","argumentNames":["a"]}

function game_onShade__P3018_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_onShade__P3018, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function scene_createRenderable__P2806(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.renderable___14108 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1914;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1914]) return breakpoint(s, 3, 1914, r0);
  case 3:
    r0 = pxsim_pxtcore_mkClassInstance(scene_Renderable__C2801_VT);
    s.tmp_0 = r0;
    s.tmp_1 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_1;
    { step = 2; continue; }
  case 1:
    r0 = renderable_inline__P14114;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = scene_Renderable_constructor__P2802_mk(s);
    s.tmp_3.arg0 = s.tmp_0;
    s.tmp_3.arg1 = s.arg1;
    s.tmp_3.arg2 = s.tmp_2;
    s.tmp_3.arg3 = s.arg0;
    s.callLocIdx = 911; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.renderable___14108 = (s.tmp_0);
    s.lastBrkId = 1915;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1915]) return breakpoint(s, 5, 1915, r0);
  case 5:
    r0 = s.renderable___14108;
    return leave(s, r0)
  default: oops()
} } }
scene_createRenderable__P2806.info = {"start":608,"length":339,"line":24,"column":4,"endLine":36,"endColumn":5,"fileName":"pxt_modules/game/renderable.ts","functionName":"createRenderable","argumentNames":["z","handler","shouldBeVisible"]}

function scene_createRenderable__P2806_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_createRenderable__P2806, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  renderable___14108: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function renderable_inline__P14114(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = true;
    return leave(s, r0)
  default: oops()
} } }
renderable_inline__P14114.info = {"start":875,"length":10,"line":31,"column":32,"endLine":31,"endColumn":42,"fileName":"pxt_modules/game/renderable.ts","functionName":"inline","argumentNames":[]}

function renderable_inline__P14114_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: renderable_inline__P14114, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_Renderable_constructor__P2802(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Renderable__C2801_VT)) failedCast(r0);
    r0 = (s.arg0).fields["handler"] = (s.arg1);
    r0 = (s.arg0).fields["shouldBeVisible"] = (s.arg2);
    s.lastBrkId = 1911;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1911]) return breakpoint(s, 1, 1911, r0);
  case 1:
    s.tmp_0 = sprites_BaseSprite_constructor__P2097_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg3;
    s.callLocIdx = 908; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Renderable_constructor__P2802.info = {"start":83,"length":212,"line":2,"column":8,"endLine":8,"endColumn":9,"fileName":"pxt_modules/game/renderable.ts","functionName":"inline","argumentNames":["this","handler","shouldBeVisible","z"]}

function scene_Renderable_constructor__P2802_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Renderable_constructor__P2802, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function scene_systemMenu_PauseMenu_constructor__P3097(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C3096_VT)) failedCast(r0);
    r0 = (s.arg0).fields["generator"] = (s.arg1);
    s.lastBrkId = 2111;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2111]) return breakpoint(s, 3, 2111, r0);
  case 3:
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = scene_systemMenu_buildMenuTheme__P3105_mk(s);
    r0 = pxsim_ImageMethods.width(globals.CARD_NORMAL___3112);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 3;
    s.tmp_1.arg2 = undefined;
    s.tmp_1.arg3 = undefined;
    s.callLocIdx = 1007; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = (s.arg0).fields["theme"] = (s.tmp_2);
    s.lastBrkId = 2112;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2112]) return breakpoint(s, 5, 2112, r0);
  case 5:
    r0 = (s.arg0).fields["scrollRow"] = (0);
    s.lastBrkId = 2113;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2113]) return breakpoint(s, 6, 2113, r0);
  case 6:
    r0 = (s.arg0).fields["scrollOffset"] = (0);
    s.lastBrkId = 2114;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2114]) return breakpoint(s, 7, 2114, r0);
  case 7:
    r0 = (s.arg0).fields["scrollTarget"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_constructor__P3097.info = {"start":3029,"length":257,"line":116,"column":8,"endLine":121,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":["this","generator","theme"]}

function scene_systemMenu_PauseMenu_constructor__P3097_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_constructor__P3097, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_systemMenu_buildMenuTheme__P3105(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.cardsPerRow___16247 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2233;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2233]) return breakpoint(s, 5, 2233, r0);
  case 5:
    r0 = pxsim_ImageMethods.width(globals.screen___2033);
    s.tmp_0 = r0;
    r0 = (s.arg0 + s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_1);
    s.cardsPerRow___16247 = (r0);
    s.lastBrkId = 2234;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2234]) return breakpoint(s, 6, 2234, r0);
  case 6:
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = globals.font8___1976;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.arg2 = (s.tmp_1);
    s.lastBrkId = 2235;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2235]) return breakpoint(s, 7, 2235, r0);
  case 7:
    s.tmp_0 = r0 = s.arg3;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    s.tmp_1 = image_doubledFont__P1979_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.callLocIdx = 1117; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.arg3 = (s.tmp_2);
    s.lastBrkId = 2236;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2236]) return breakpoint(s, 9, 2236, r0);
  case 9:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardSpacing", s.arg1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardWidth", s.arg0);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardsPerRow", s.cardsPerRow___16247);
    r0 = pxsim_ImageMethods.width(globals.screen___2033);
    s.tmp_3 = r0;
    r0 = (s.cardsPerRow___16247 * s.arg0);
    s.tmp_5 = r0;
    r0 = (s.cardsPerRow___16247 - 1);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 * s.arg1);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "padding", s.tmp_1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "infoFont", s.arg2);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "headerFont", s.arg3);
    s.tmp_11 = if_charHeight_1_mk(s);
    s.tmp_11.arg0 = s.arg3;
    if (!s.tmp_11.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_11.arg0, "charHeight");
    } else {
      s.tmp_11.fn = s.tmp_11.arg0.vtable.iface["charHeight"];
      if (s.tmp_11.fn == null) { s.retval = s.tmp_11.arg0.fields["charHeight"]; }
      else if (!s.tmp_11.fn.isGetter) { s.retval = bind(s.tmp_11); }
     else { s.callLocIdx = 1118; s.pc = 10; return s.tmp_11; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_10 + 2);
    s.tmp_9 = r0;
    r0 = (s.tmp_9 + s.arg1);
    s.tmp_8 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardsTop", s.tmp_8);
    r0 = pxsim_ImageMethods.height(globals.screen___2033);
    s.tmp_14 = r0;
    s.tmp_16 = if_charHeight_1_mk(s);
    s.tmp_16.arg0 = s.arg2;
    if (!s.tmp_16.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_16.arg0, "charHeight");
    } else {
      s.tmp_16.fn = s.tmp_16.arg0.vtable.iface["charHeight"];
      if (s.tmp_16.fn == null) { s.retval = s.tmp_16.arg0.fields["charHeight"]; }
      else if (!s.tmp_16.fn.isGetter) { s.retval = bind(s.tmp_16); }
     else { s.callLocIdx = 1119; s.pc = 11; return s.tmp_16; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_15 = r0;
    r0 = (s.tmp_14 - s.tmp_15);
    s.tmp_13 = r0;
    r0 = (s.tmp_13 - 2);
    s.tmp_12 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "infoTop", s.tmp_12);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "headerText", "PAUSED");
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "selectedCard", globals.CARD_SELECTED___3113);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "activeCard", globals.CARD_ACTIVE___3114);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "basicCard", globals.CARD_NORMAL___3112);
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildMenuTheme__P3105.info = {"start":11654,"length":906,"line":356,"column":4,"endLine":375,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"buildMenuTheme","argumentNames":["cardWidth","cardSpacing","infoFont","headerFont"]}

function scene_systemMenu_buildMenuTheme__P3105_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildMenuTheme__P3105, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  cardsPerRow___16247: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function image_doubledFont__P1979(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 608;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[608]) return breakpoint(s, 1, 608, r0);
  case 1:
    s.tmp_0 = image_scaledFont__P1980_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 2;
    s.callLocIdx = 96; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
image_doubledFont__P1979.info = {"start":12008,"length":82,"line":146,"column":4,"endLine":148,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"doubledFont","argumentNames":["f"]}

function image_doubledFont__P1979_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: image_doubledFont__P1979, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_pushScene__P3004(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.oldScene___16301 = undefined;
    s.lastBrkId = 2025;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2025]) return breakpoint(s, 5, 2025, r0);
  case 5:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 956; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.oldScene___16301 = (r0);
    s.lastBrkId = 2026;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2026]) return breakpoint(s, 7, 2026, r0);
  case 7:
    s.tmp_0 = particles_clearAll__P3182_mk(s);
    s.callLocIdx = 957; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 2027;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2027]) return breakpoint(s, 9, 2027, r0);
  case 9:
    s.tmp_0 = particles_disableAll__P3183_mk(s);
    s.callLocIdx = 958; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 2028;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2028]) return breakpoint(s, 11, 2028, r0);
  case 11:
    r0 = pxsim_numops_toBoolDecr(globals._sceneStack___5138);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2029;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2029]) return breakpoint(s, 12, 2029, r0);
  case 12:
    r0 = pxsim_Array__mk();
    globals._sceneStack___5138 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 2030;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2030]) return breakpoint(s, 13, 2030, r0);
  case 13:
    r0 = pxsim_Array__push(globals._sceneStack___5138, globals._scene___5137);
    s.lastBrkId = 2031;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2031]) return breakpoint(s, 14, 2031, r0);
  case 14:
    s.tmp_0 = game_init__P5145_mk(s);
    s.tmp_0.arg0 = true;
    s.callLocIdx = 959; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.lastBrkId = 2032;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2032]) return breakpoint(s, 16, 2032, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(globals._scenePushHandlers___5139);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2033;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2033]) return breakpoint(s, 17, 2033, r0);
  case 17:
    r0 = pxsim_pxtcore_mkAction(1, game_pushScene_inline__P16318);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.oldScene___16301);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_1.arg0 = globals._scenePushHandlers___5139;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 961; s.pc = 18; return s.tmp_1;
  case 18:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_pushScene__P3004.info = {"start":4760,"length":367,"line":148,"column":4,"endLine":159,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"pushScene","argumentNames":[]}

function game_pushScene__P3004_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_pushScene__P3004, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  oldScene___16301: undefined,
} }





function game_pushScene_inline__P16318(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.arg0;
    s.tmp_0.arg0 = s.caps[0];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 960; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_pushScene_inline__P16318.info = {"start":5091,"length":18,"line":157,"column":39,"endLine":157,"endColumn":57,"fileName":"pxt_modules/game/game.ts","functionName":"inline","argumentNames":["cb"]}

function game_pushScene_inline__P16318_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_pushScene_inline__P16318, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_disableAll__P3183(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___16322 = undefined;
    s.lastBrkId = 2438;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2438]) return breakpoint(s, 3, 2438, r0);
  case 3:
    s.tmp_0 = particles_particleSources__P5488_mk(s);
    s.callLocIdx = 1200; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.sources___16322 = (r0);
    s.lastBrkId = 2439;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2439]) return breakpoint(s, 5, 2439, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.sources___16322);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2440;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2440]) return breakpoint(s, 6, 2440, r0);
  case 6:
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_0.arg0 = s.sources___16322;
    s.tmp_0.arg1 = particles_disableAll_inline__P16328;
    s.callLocIdx = 1202; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2441;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2441]) return breakpoint(s, 8, 2441, r0);
  case 8:
    s.tmp_0 = particles_pruneParticles__P5484_mk(s);
    s.callLocIdx = 1203; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_disableAll__P3183.info = {"start":12370,"length":195,"line":402,"column":4,"endLine":408,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"disableAll","argumentNames":[]}

function particles_disableAll__P3183_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_disableAll__P3183, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___16322: undefined,
} }





function particles_disableAll_inline__P16328(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource_enabled__P3165_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1201; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = false;
    return leave(s, r0)
  default: oops()
} } }
particles_disableAll_inline__P16328.info = {"start":12495,"length":22,"line":405,"column":28,"endLine":405,"endColumn":50,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function particles_disableAll_inline__P16328_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_disableAll_inline__P16328, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_clearAll__P3182(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___16333 = undefined;
    s.lastBrkId = 2434;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2434]) return breakpoint(s, 3, 2434, r0);
  case 3:
    s.tmp_0 = particles_particleSources__P5488_mk(s);
    s.callLocIdx = 1196; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.sources___16333 = (r0);
    s.lastBrkId = 2435;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2435]) return breakpoint(s, 5, 2435, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.sources___16333);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2436;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2436]) return breakpoint(s, 6, 2436, r0);
  case 6:
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_0.arg0 = s.sources___16333;
    s.tmp_0.arg1 = particles_clearAll_inline__P16339;
    s.callLocIdx = 1198; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.lastBrkId = 2437;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2437]) return breakpoint(s, 8, 2437, r0);
  case 8:
    s.tmp_0 = particles_pruneParticles__P5484_mk(s);
    s.callLocIdx = 1199; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_clearAll__P3182.info = {"start":12098,"length":185,"line":391,"column":4,"endLine":397,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"clearAll","argumentNames":[]}

function particles_clearAll__P3182_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_clearAll__P3182, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___16333: undefined,
} }





function particles_clearAll_inline__P16339(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource_clear__P3167_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1197; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_clearAll_inline__P16339.info = {"start":12221,"length":14,"line":394,"column":28,"endLine":394,"endColumn":42,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function particles_clearAll_inline__P16339_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_clearAll_inline__P16339, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_ParticleSource_clear__P3167(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3152_VT)) failedCast(r0);
    s.lastBrkId = 2398;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2398]) return breakpoint(s, 1, 2398, r0);
  case 1:
    r0 = (s.arg0).fields["head"] = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_clear__P3167.info = {"start":7424,"length":54,"line":243,"column":8,"endLine":245,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"clear","argumentNames":["this"]}

function particles_ParticleSource_clear__P3167_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_clear__P3167, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller_Button_onEvent__P2197(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.eventHandler___16351 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2190_VT)) failedCast(r0);
    s.lastBrkId = 915;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[915]) return breakpoint(s, 1, 915, r0);
  case 1:
    s.tmp_0 = controller_Button_getOrCreateHandlerForEvent__P4926_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 210; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.eventHandler___16351 = (r0);
    s.lastBrkId = 916;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[916]) return breakpoint(s, 3, 916, r0);
  case 3:
    r0 = (s.eventHandler___16351).fields["callback"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_onEvent__P2197.info = {"start":3784,"length":188,"line":123,"column":8,"endLine":126,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"onEvent","argumentNames":["this","event","handler"]}

function controller_Button_onEvent__P2197_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_onEvent__P2197, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  eventHandler___16351: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function controller_Button_getOrCreateHandlerForEvent__P4926(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.handlerState___16372 = undefined;
    s.eventHandler___16381 = undefined;
    s.unnamed1312___U2 = undefined;
    s.unnamed1313___U3 = undefined;
    s.newHandler___16397 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2190_VT)) failedCast(r0);
    s.lastBrkId = 954;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[954]) return breakpoint(s, 10, 954, r0);
  case 10:
    s.tmp_3 = controller_Button_handlerState__P4921_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 220; s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 955;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[955]) return breakpoint(s, 12, 955, r0);
  case 12:
    r0 = pxsim_pxtcore_mkClassInstance(controller_ButtonEventHandlerState__C2186_VT);
    s.tmp_4 = r0;
    s.tmp_5 = controller_ButtonEventHandlerState_constructor__P2187_mk(s);
    s.tmp_5.arg0 = s.tmp_4;
    r0 = s.arg0.fields["id"];
    s.tmp_5.arg1 = r0;
    s.callLocIdx = 222; s.pc = 13; return s.tmp_5;
  case 13:
    r0 = s.retval;
    s.tmp_7 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 221; s.pc = 14; return s.tmp_7;
  case 14:
    r0 = s.retval;
    r0 = r0.fields["buttonEventHandlers"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__push(s.tmp_6, s.tmp_4);
  case 1:
  case 2:
    s.lastBrkId = 956;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[956]) return breakpoint(s, 15, 956, r0);
  case 15:
    s.tmp_0 = controller_Button_handlerState__P4921_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 223; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.handlerState___16372 = (r0);
    s.lastBrkId = 957;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[957]) return breakpoint(s, 17, 957, r0);
  case 17:
    r0 = s.handlerState___16372.fields["user"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 958;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[958]) return breakpoint(s, 18, 958, r0);
  case 18:
    s.tmp_3 = r0 = s.handlerState___16372;
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["user"] = (s.tmp_4);
  case 3:
  case 4:
    s.lastBrkId = 959;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[959]) return breakpoint(s, 19, 959, r0);
  case 19:
    s.eventHandler___16381 = (undefined);
    r0 = s.handlerState___16372.fields["user"];
    s.unnamed1312___U2 = (r0);
    s.unnamed1313___U3 = (0);
    s.lastBrkId = 960;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[960]) return breakpoint(s, 20, 960, r0);
  case 20:
  case 5:
    s.tmp_0 = r0 = s.unnamed1313___U3;
    r0 = pxsim_Array__length(s.unnamed1312___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 8; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1312___U2, s.unnamed1313___U3);
    s.eventHandler___16381 = (r0);
    s.lastBrkId = 961;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[961]) return breakpoint(s, 21, 961, r0);
  case 21:
    s.lastBrkId = 962;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[962]) return breakpoint(s, 22, 962, r0);
  case 22:
    r0 = s.eventHandler___16381.fields["event"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 === s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 963;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[963]) return breakpoint(s, 23, 963, r0);
  case 23:
    r0 = s.eventHandler___16381;
    { step = 9; continue; }
  case 6:
  case 7:
    r0 = (s.unnamed1313___U3 + 1);
    s.unnamed1313___U3 = (r0);
    { step = 5; continue; }
  case 8:
    s.unnamed1312___U2 = (undefined);
    s.lastBrkId = 964;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[964]) return breakpoint(s, 24, 964, r0);
  case 24:
    r0 = pxsim_pxtcore_mkAction(2, controller_Button_getOrCreateHandlerForEvent_inline__P16394);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 1, s.arg1);
    s.tmp_5 = control_onEvent__P391_mk(s);
    s.tmp_5.arg0 = s.arg1;
    r0 = s.arg0.fields["id"];
    s.tmp_5.arg1 = r0;
    s.tmp_5.arg2 = s.tmp_4;
    s.tmp_5.arg3 = 16;
    s.callLocIdx = 225; s.pc = 25; return s.tmp_5;
  case 25:
    r0 = s.retval;
    s.lastBrkId = 965;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[965]) return breakpoint(s, 26, 965, r0);
  case 26:
    r0 = pxsim_pxtcore_mkClassInstance(controller_ButtonHandler__C2184_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_ButtonHandler_constructor__P2185_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 226; s.pc = 27; return s.tmp_1;
  case 27:
    r0 = s.retval;
    s.newHandler___16397 = (s.tmp_0);
    s.lastBrkId = 966;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[966]) return breakpoint(s, 28, 966, r0);
  case 28:
    r0 = s.handlerState___16372.fields["user"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.newHandler___16397);
    s.lastBrkId = 967;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[967]) return breakpoint(s, 29, 967, r0);
  case 29:
    r0 = s.newHandler___16397;
  case 9:
    return leave(s, r0)
  default: oops()
} } }
controller_Button_getOrCreateHandlerForEvent__P4926.info = {"start":8550,"length":829,"line":250,"column":8,"endLine":270,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"getOrCreateHandlerForEvent","argumentNames":["this","event"]}

function controller_Button_getOrCreateHandlerForEvent__P4926_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_getOrCreateHandlerForEvent__P4926, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  handlerState___16372: undefined,
  eventHandler___16381: undefined,
  unnamed1312___U2: undefined,
  unnamed1313___U3: undefined,
  newHandler___16397: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_getOrCreateHandlerForEvent_inline__P16394(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = controller_Button_runButtonEvents__P4925_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.caps[1];
    s.callLocIdx = 224; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_getOrCreateHandlerForEvent_inline__P16394.info = {"start":9186,"length":33,"line":265,"column":44,"endLine":265,"endColumn":77,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":[]}

function controller_Button_getOrCreateHandlerForEvent_inline__P16394_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_getOrCreateHandlerForEvent_inline__P16394, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_Button_runButtonEvents__P4925(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.handlerState___16411 = undefined;
    s.userHandler___16415 = undefined;
    s.eventHandler___16426 = undefined;
    s.unnamed1310___U3 = undefined;
    s.unnamed1311___U4 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2190_VT)) failedCast(r0);
    s.lastBrkId = 942;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[942]) return breakpoint(s, 14, 942, r0);
  case 14:
    s.tmp_0 = controller_Button_handlerState__P4921_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 216; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.handlerState___16411 = (r0);
    s.lastBrkId = 943;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[943]) return breakpoint(s, 16, 943, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(s.handlerState___16411);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 944;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[944]) return breakpoint(s, 17, 944, r0);
  case 17:
    { step = 13; continue; }
  case 1:
  case 2:
    s.lastBrkId = 945;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[945]) return breakpoint(s, 18, 945, r0);
  case 18:
    s.tmp_2 = controller_Button_getOrCreateHandlerForEvent__P4926_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.arg1;
    s.callLocIdx = 217; s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
    s.userHandler___16415 = (r0);
    s.lastBrkId = 946;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[946]) return breakpoint(s, 20, 946, r0);
  case 20:
    r0 = s.userHandler___16415.fields["callback"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 947;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[947]) return breakpoint(s, 21, 947, r0);
  case 21:
    s.tmp_1 = if_callback_1_mk(s);
    s.tmp_1.arg0 = s.userHandler___16415;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "callback"), 1);
      s.callLocIdx = 218; s.pc = 22; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["callback"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["callback"], 1); s.callLocIdx = 218; s.pc = 22; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 218; s.pc = 22; return s.tmp_1;; }
     else { s.callLocIdx = 218; s.pc = 22; return s.tmp_1; }
    }
  case 22:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 948;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[948]) return breakpoint(s, 23, 948, r0);
  case 23:
    r0 = s.handlerState___16411.fields["system"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 949;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[949]) return breakpoint(s, 24, 949, r0);
  case 24:
    s.eventHandler___16426 = (undefined);
    r0 = s.handlerState___16411.fields["system"];
    s.unnamed1310___U3 = (r0);
    s.unnamed1311___U4 = (0);
    s.lastBrkId = 950;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[950]) return breakpoint(s, 25, 950, r0);
  case 25:
  case 5:
    s.tmp_0 = r0 = s.unnamed1311___U4;
    r0 = pxsim_Array__length(s.unnamed1310___U3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 10; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1310___U3, s.unnamed1311___U4);
    s.eventHandler___16426 = (r0);
    s.lastBrkId = 951;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[951]) return breakpoint(s, 26, 951, r0);
  case 26:
    s.lastBrkId = 952;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[952]) return breakpoint(s, 27, 952, r0);
  case 27:
    r0 = s.eventHandler___16426.fields["event"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 === s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_2;
    { step = 7; continue; }
  case 6:
    r0 = s.eventHandler___16426.fields["callback"];
  case 7:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 953;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[953]) return breakpoint(s, 28, 953, r0);
  case 28:
    s.tmp_5 = if_callback_1_mk(s);
    s.tmp_5.arg0 = s.eventHandler___16426;
    if (!s.tmp_5.arg0.vtable.iface) {
      setupLambda(s.tmp_5, pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "callback"), 1);
      s.callLocIdx = 219; s.pc = 29; return s.tmp_5;
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["callback"];
      if (s.tmp_5.fn == null) { setupLambda(s.tmp_5, s.tmp_5.arg0.fields["callback"], 1); s.callLocIdx = 219; s.pc = 29; return s.tmp_5; }
      else if (s.tmp_5.fn.isGetter) { s.tmp_5.stage2Call = true; s.callLocIdx = 219; s.pc = 29; return s.tmp_5;; }
     else { s.callLocIdx = 219; s.pc = 29; return s.tmp_5; }
    }
  case 29:
    r0 = s.retval;
  case 8:
  case 9:
    r0 = (s.unnamed1311___U4 + 1);
    s.unnamed1311___U4 = (r0);
    { step = 5; continue; }
  case 10:
    s.unnamed1310___U3 = (undefined);
  case 11:
  case 12:
  case 13:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_runButtonEvents__P4925.info = {"start":8005,"length":535,"line":236,"column":8,"endLine":248,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"runButtonEvents","argumentNames":["this","event"]}

function controller_Button_runButtonEvents__P4925_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_runButtonEvents__P4925, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  handlerState___16411: undefined,
  userHandler___16415: undefined,
  eventHandler___16426: undefined,
  unnamed1310___U3: undefined,
  unnamed1311___U4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_handlerState__P4921(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___16442 = undefined;
    s.unnamed1308___U1 = undefined;
    s.unnamed1309___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2190_VT)) failedCast(r0);
    s.lastBrkId = 889;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[889]) return breakpoint(s, 6, 889, r0);
  case 6:
    s.state___16442 = (undefined);
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 206; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = r0.fields["buttonEventHandlers"];
    s.unnamed1308___U1 = (r0);
    s.unnamed1309___U2 = (0);
    s.lastBrkId = 890;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[890]) return breakpoint(s, 8, 890, r0);
  case 8:
  case 1:
    s.tmp_0 = r0 = s.unnamed1309___U2;
    r0 = pxsim_Array__length(s.unnamed1308___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1308___U1, s.unnamed1309___U2);
    s.state___16442 = (r0);
    s.lastBrkId = 891;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[891]) return breakpoint(s, 9, 891, r0);
  case 9:
    s.lastBrkId = 892;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[892]) return breakpoint(s, 10, 892, r0);
  case 10:
    r0 = s.state___16442.fields["id"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["id"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 === s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 893;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[893]) return breakpoint(s, 11, 893, r0);
  case 11:
    r0 = s.state___16442;
    { step = 5; continue; }
  case 2:
  case 3:
    r0 = (s.unnamed1309___U2 + 1);
    s.unnamed1309___U2 = (r0);
    { step = 1; continue; }
  case 4:
    s.unnamed1308___U1 = (undefined);
    s.lastBrkId = 894;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[894]) return breakpoint(s, 12, 894, r0);
  case 12:
    r0 = undefined;
  case 5:
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Button_handlerState__P4921.info = {"start":1644,"length":240,"line":66,"column":8,"endLine":71,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"handlerState","argumentNames":["this"]}
controller_Button_handlerState__P4921.isGetter = true;

function controller_Button_handlerState__P4921_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_handlerState__P4921, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  state___16442: undefined,
  unnamed1308___U1: undefined,
  unnamed1309___U2: undefined,
  arg0: undefined,
} }





function controller_ButtonEventHandlerState_constructor__P2187(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_ButtonEventHandlerState__C2186_VT)) failedCast(r0);
    r0 = (s.arg0).fields["id"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_ButtonEventHandlerState_constructor__P2187.info = {"start":1122,"length":33,"line":48,"column":8,"endLine":48,"endColumn":41,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":["this","id"]}

function controller_ButtonEventHandlerState_constructor__P2187_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_ButtonEventHandlerState_constructor__P2187, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function controller_ButtonHandler_constructor__P2185(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_ButtonHandler__C2184_VT)) failedCast(r0);
    r0 = (s.arg0).fields["event"] = (s.arg1);
    r0 = (s.arg0).fields["callback"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_ButtonHandler_constructor__P2185.info = {"start":997,"length":66,"line":44,"column":8,"endLine":44,"endColumn":74,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":["this","event","callback"]}

function controller_ButtonHandler_constructor__P2185_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_ButtonHandler_constructor__P2185, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_systemMenu_initScreen__P5406(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.brightness___16454 = undefined;
    s.lastBrkId = 2249;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2249]) return breakpoint(s, 3, 2249, r0);
  case 3:
    s.tmp_0 = settings_readNumber__P2069_mk(s);
    s.tmp_0.arg0 = "#brightness";
    s.callLocIdx = 1126; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.brightness___16454 = (r0);
    s.lastBrkId = 2250;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2250]) return breakpoint(s, 5, 2250, r0);
  case 5:
    r0 = (s.brightness___16454 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2251;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2251]) return breakpoint(s, 6, 2251, r0);
  case 6:
    s.tmp_1 = helpers_setScreenBrightness__P1966_mk(s);
    s.tmp_1.arg0 = globals.screen___2033;
    s.tmp_1.arg1 = s.brightness___16454;
    s.callLocIdx = 1127; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_initScreen__P5406.info = {"start":13388,"length":175,"line":405,"column":4,"endLine":409,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"initScreen","argumentNames":[]}

function scene_systemMenu_initScreen__P5406_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_initScreen__P5406, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  brightness___16454: undefined,
} }





function settings_readNumber__P2069(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.buf___16465 = undefined;
    s.nums___16472 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 745;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[745]) return breakpoint(s, 8, 745, r0);
  case 8:
    s.tmp_0 = settings_readBuffer__P2066_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 135; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.buf___16465 = (r0);
    s.lastBrkId = 746;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[746]) return breakpoint(s, 10, 746, r0);
  case 10:
    r0 = pxsim_numops_toBoolDecr(s.buf___16465);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 747;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[747]) return breakpoint(s, 11, 747, r0);
  case 11:
    r0 = undefined;
    { step = 7; continue; }
    { step = 6; continue; }
  case 1:
    s.lastBrkId = 748;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[748]) return breakpoint(s, 12, 748, r0);
  case 12:
    s.tmp_2 = msgpack_unpackNumberArray__P183_mk(s);
    s.tmp_2.arg0 = s.buf___16465;
    s.tmp_2.arg1 = 0;
    s.callLocIdx = 136; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.nums___16472 = (r0);
    s.lastBrkId = 749;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[749]) return breakpoint(s, 14, 749, r0);
  case 14:
    s.tmp_0 = r0 = s.nums___16472;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_Array__length(s.nums___16472);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 1);
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 750;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[750]) return breakpoint(s, 15, 750, r0);
  case 15:
    r0 = pxsim_Array__getAt(s.nums___16472, 0);
    { step = 7; continue; }
  case 4:
  case 5:
    s.lastBrkId = 751;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[751]) return breakpoint(s, 16, 751, r0);
  case 16:
    r0 = undefined;
    { step = 7; continue; }
  case 6:
    r0 = undefined;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
settings_readNumber__P2069.info = {"start":3283,"length":313,"line":131,"column":4,"endLine":141,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readNumber","argumentNames":["key"]}

function settings_readNumber__P2069_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readNumber__P2069, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  buf___16465: undefined,
  nums___16472: undefined,
  arg0: undefined,
} }





function settings_readBuffer__P2066(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 740;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[740]) return breakpoint(s, 1, 740, r0);
  case 1:
    r0 = pxsim.settings._get(s.arg0);
    return leave(s, r0)
  default: oops()
} } }
settings_readBuffer__P2066.info = {"start":2694,"length":72,"line":103,"column":4,"endLine":105,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readBuffer","argumentNames":["key"]}

function settings_readBuffer__P2066_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readBuffer__P2066, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function msgpack_unpackNumberArray__P183(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___16485 = undefined;
    s.fmt___16492 = undefined;
    s.v___16501 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 264;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[264]) return breakpoint(s, 12, 264, r0);
  case 12:
    r0 = pxsim_Array__mk();
    s.res___16485 = (r0);
    s.lastBrkId = 265;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[265]) return breakpoint(s, 13, 265, r0);
  case 13:
  case 1:
    s.lastBrkId = 266;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[266]) return breakpoint(s, 14, 266, r0);
  case 14:
    s.tmp_1 = r0 = s.arg1;
    r0 = pxsim.BufferMethods.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 267;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[267]) return breakpoint(s, 15, 267, r0);
  case 15:
    s.tmp_3 = r0 = s.arg1;
    r0 = (s.tmp_3 + 1);
    s.arg1 = (r0);
    s.tmp_4 = msgpack_tagFormat__P4573_mk(s);
    r0 = pxsim.BufferMethods.getByte(s.arg0, s.tmp_3);
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 20; s.pc = 16; return s.tmp_4;
  case 16:
    r0 = s.retval;
    s.fmt___16492 = (r0);
    s.lastBrkId = 268;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[268]) return breakpoint(s, 17, 268, r0);
  case 17:
    r0 = (s.fmt___16492 === null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 269;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[269]) return breakpoint(s, 18, 269, r0);
  case 18:
    s.tmp_1 = r0 = s.arg0;
    r0 = (s.arg1 - 1);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getNumber(s.tmp_1, 6, s.tmp_2);
    s.v___16501 = (r0);
    s.lastBrkId = 270;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[270]) return breakpoint(s, 19, 270, r0);
  case 19:
    r0 = (-31 <= s.v___16501);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = (s.v___16501 <= 127);
  case 3:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 271;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[271]) return breakpoint(s, 20, 271, r0);
  case 20:
    r0 = pxsim_Array__push(s.res___16485, s.v___16501);
    { step = 5; continue; }
  case 4:
    s.lastBrkId = 272;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[272]) return breakpoint(s, 21, 272, r0);
  case 21:
    r0 = null;
    { step = 11; continue; }
  case 5:
    { step = 7; continue; }
  case 6:
    s.lastBrkId = 273;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[273]) return breakpoint(s, 22, 273, r0);
  case 22:
    s.tmp_0 = r0 = s.res___16485;
    r0 = pxsim.BufferMethods.getNumber(s.arg0, s.fmt___16492, s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.lastBrkId = 274;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[274]) return breakpoint(s, 23, 274, r0);
  case 23:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = pins_sizeOf__P175_mk(s);
    s.tmp_2.arg0 = s.fmt___16492;
    s.callLocIdx = 21; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.arg1 = (r0);
  case 7:
    s.lastBrkId = 275;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[275]) return breakpoint(s, 25, 275, r0);
  case 25:
  case 8:
    s.lastBrkId = 276;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[276]) return breakpoint(s, 26, 276, r0);
  case 26:
    r0 = pxsim.BufferMethods.getByte(s.arg0, s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 193);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 277;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[277]) return breakpoint(s, 27, 277, r0);
  case 27:
    r0 = (s.arg1 + 1);
    s.arg1 = (r0);
    { step = 8; continue; }
  case 9:
    { step = 1; continue; }
  case 10:
    s.lastBrkId = 278;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[278]) return breakpoint(s, 28, 278, r0);
  case 28:
    r0 = s.res___16485;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
msgpack_unpackNumberArray__P183.info = {"start":2650,"length":669,"line":91,"column":4,"endLine":111,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"unpackNumberArray","argumentNames":["buf","offset"]}

function msgpack_unpackNumberArray__P183_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_unpackNumberArray__P183, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  res___16485: undefined,
  fmt___16492: undefined,
  v___16501: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_initVolume__P5405(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.vol___16546 = undefined;
    s.lastBrkId = 2246;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2246]) return breakpoint(s, 3, 2246, r0);
  case 3:
    s.tmp_0 = settings_readNumber__P2069_mk(s);
    s.tmp_0.arg0 = "#volume";
    s.callLocIdx = 1124; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.vol___16546 = (r0);
    s.lastBrkId = 2247;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2247]) return breakpoint(s, 5, 2247, r0);
  case 5:
    r0 = (s.vol___16546 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2248;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2248]) return breakpoint(s, 6, 2248, r0);
  case 6:
    s.tmp_1 = music_setVolume__P1621_mk(s);
    s.tmp_1.arg0 = s.vol___16546;
    s.callLocIdx = 1125; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_initVolume__P5405.info = {"start":13238,"length":144,"line":399,"column":4,"endLine":403,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"initVolume","argumentNames":[]}

function scene_systemMenu_initVolume__P5405_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_initVolume__P5405, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  vol___16546: undefined,
} }





function game_GameOverConfig_constructor__P2989(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_GameOverConfig__C2974_VT)) failedCast(r0);
    s.lastBrkId = 1998;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1998]) return breakpoint(s, 1, 1998, r0);
  case 1:
    s.tmp_0 = game_GameOverConfig_init__P2990_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 947; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_GameOverConfig_constructor__P2989.info = {"start":893,"length":50,"line":35,"column":8,"endLine":37,"endColumn":9,"fileName":"pxt_modules/game/game.ts","functionName":"inline","argumentNames":["this"]}

function game_GameOverConfig_constructor__P2989_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_GameOverConfig_constructor__P2989, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_GameOverConfig_init__P2990(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_GameOverConfig__C2974_VT)) failedCast(r0);
    s.lastBrkId = 1999;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1999]) return breakpoint(s, 1, 1999, r0);
  case 1:
    r0 = (s.arg0).fields["scoringType"] = (0);
    s.lastBrkId = 2000;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2000]) return breakpoint(s, 2, 2000, r0);
  case 2:
    r0 = (s.arg0).fields["winEffect"] = (globals.confetti___3275);
    s.lastBrkId = 2001;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2001]) return breakpoint(s, 3, 2001, r0);
  case 3:
    r0 = (s.arg0).fields["loseEffect"] = (globals.melt___3297);
    s.lastBrkId = 2002;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2002]) return breakpoint(s, 4, 2002, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = music_melodyPlayable__P1924_mk(s);
    s.tmp_2.arg0 = globals.powerUp___1651;
    s.callLocIdx = 948; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["winSound"] = (s.tmp_1);
    s.lastBrkId = 2003;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2003]) return breakpoint(s, 6, 2003, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = music_melodyPlayable__P1924_mk(s);
    s.tmp_2.arg0 = globals.wawawawaa___1648;
    s.callLocIdx = 949; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["loseSound"] = (s.tmp_1);
    s.lastBrkId = 2004;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2004]) return breakpoint(s, 8, 2004, r0);
  case 8:
    r0 = (s.arg0).fields["winSoundLooping"] = (false);
    s.lastBrkId = 2005;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2005]) return breakpoint(s, 9, 2005, r0);
  case 9:
    r0 = (s.arg0).fields["loseSoundLooping"] = (false);
    s.lastBrkId = 2006;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2006]) return breakpoint(s, 10, 2006, r0);
  case 10:
    r0 = (s.arg0).fields["winMessage"] = ("YOU WIN!");
    s.lastBrkId = 2007;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2007]) return breakpoint(s, 11, 2007, r0);
  case 11:
    r0 = (s.arg0).fields["winMessageMultiplayer"] = ("${WINNER} WINS!");
    s.lastBrkId = 2008;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2008]) return breakpoint(s, 12, 2008, r0);
  case 12:
    r0 = (s.arg0).fields["loseMessage"] = ("GAME OVER");
    s.lastBrkId = 2009;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2009]) return breakpoint(s, 13, 2009, r0);
  case 13:
    r0 = (s.arg0).fields["effectSetByUser"] = (false);
    s.lastBrkId = 2010;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2010]) return breakpoint(s, 14, 2010, r0);
  case 14:
    r0 = (s.arg0).fields["soundSetByUser"] = (false);
    s.lastBrkId = 2011;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2011]) return breakpoint(s, 15, 2011, r0);
  case 15:
    r0 = (s.arg0).fields["messageSetByUser"] = (false);
    s.lastBrkId = 2012;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2012]) return breakpoint(s, 16, 2012, r0);
  case 16:
    r0 = (s.arg0).fields["scoringTypeSetByUser"] = (false);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_GameOverConfig_init__P2990.info = {"start":953,"length":701,"line":39,"column":8,"endLine":54,"endColumn":9,"fileName":"pxt_modules/game/game.ts","functionName":"init","argumentNames":["this"]}

function game_GameOverConfig_init__P2990_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_GameOverConfig_init__P2990, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function melt_inline__P16609(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.rounds___16612 = undefined;
    s.j___16620 = undefined;
    s.x___16625 = undefined;
    s.y___16631 = undefined;
    s.c___16637 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 5);
    s.rounds___16612 = (r0);
    s.j___16620 = (0);
  case 1:
    r0 = (s.j___16620 < s.rounds___16612);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = Math_FastRandom_randomRange__P3064_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = 0;
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 58; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.x___16625 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P3064_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 3);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 59; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.y___16631 = (r0);
    r0 = pxsim_ImageMethods.getPixel(s.arg0, s.x___16625, s.y___16631);
    s.c___16637 = (r0);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.x___16625;
    r0 = (s.y___16631 + 1);
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_2, s.c___16637);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.x___16625;
    r0 = (s.y___16631 + 2);
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_2, s.c___16637);
    r0 = (s.j___16620 + 1);
    s.j___16620 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
melt_inline__P16609.info = {"start":2652,"length":386,"line":72,"column":45,"endLine":81,"endColumn":5,"fileName":"pxt_modules/game/effects.ts","functionName":"inline","argumentNames":["input","r"]}

function melt_inline__P16609_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: melt_inline__P16609, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  rounds___16612: undefined,
  j___16620: undefined,
  x___16625: undefined,
  y___16631: undefined,
  c___16637: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function confetti_inline__P16663(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.factory___16666 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(particles_ConfettiFactory__C3219_VT);
    s.tmp_0 = r0;
    s.tmp_2 = if_width_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "width");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["width"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["width"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 46; s.pc = 3; return s.tmp_2; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = if_width_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "width");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["width"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["width"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 47; s.pc = 4; return s.tmp_3; }
    }
  case 4:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    r0 = 16;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = particles_ConfettiFactory_constructor__P3220_mk(s);
    s.tmp_5.arg0 = s.tmp_0;
    s.tmp_5.arg1 = s.tmp_4;
    s.tmp_5.arg2 = 16;
    s.callLocIdx = 48; s.pc = 5; return s.tmp_5;
  case 5:
    r0 = s.retval;
    s.factory___16666 = (s.tmp_0);
    s.tmp_0 = particles_SprayFactory_setSpeed__P3196_mk(s);
    s.tmp_0.arg0 = s.factory___16666;
    s.tmp_0.arg1 = 30;
    s.callLocIdx = 49; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(particles_ParticleSource__C3152_VT);
    s.tmp_0 = r0;
    s.tmp_1 = particles_ParticleSource_constructor__P3157_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.factory___16666;
    s.callLocIdx = 50; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
confetti_inline__P16663.info = {"start":7534,"length":284,"line":191,"column":59,"endLine":195,"endColumn":5,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"inline","argumentNames":["anchor","particlesPerSecond"]}

function confetti_inline__P16663_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: confetti_inline__P16663, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  factory___16666: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_constructor__P3157(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___16687 = undefined;
    s.removedSource___16696 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3152_VT)) failedCast(r0);
    s.lastBrkId = 2312;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2312]) return breakpoint(s, 5, 2312, r0);
  case 5:
    s.tmp_0 = sprites_BaseSprite_constructor__P2097_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 1146; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 2313;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2313]) return breakpoint(s, 7, 2313, r0);
  case 7:
    s.tmp_0 = particles_init__P5482_mk(s);
    s.callLocIdx = 1147; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 2314;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2314]) return breakpoint(s, 9, 2314, r0);
  case 9:
    s.tmp_0 = particles_particleSources__P5488_mk(s);
    s.callLocIdx = 1148; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.sources___16687 = (r0);
    s.lastBrkId = 2315;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2315]) return breakpoint(s, 11, 2315, r0);
  case 11:
    r0 = pxsim_Array__length(s.sources___16687);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= globals.MAX_SOURCES___5474);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2316;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2316]) return breakpoint(s, 12, 2316, r0);
  case 12:
    s.tmp_2 = particles_sortSources__P5485_mk(s);
    s.tmp_2.arg0 = s.sources___16687;
    s.callLocIdx = 1149; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 2317;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2317]) return breakpoint(s, 14, 2317, r0);
  case 14:
    s.tmp_0 = helpers_arrayShift__P102_mk(s);
    s.tmp_0.arg0 = s.sources___16687;
    s.callLocIdx = 1150; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.removedSource___16696 = (r0);
    s.lastBrkId = 2318;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2318]) return breakpoint(s, 16, 2318, r0);
  case 16:
    s.tmp_0 = particles_ParticleSource_clear__P3167_mk(s);
    s.tmp_0.arg0 = s.removedSource___16696;
    s.callLocIdx = 1151; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.lastBrkId = 2319;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2319]) return breakpoint(s, 18, 2319, r0);
  case 18:
    s.tmp_0 = particles_ParticleSource_destroy__P3166_mk(s);
    s.tmp_0.arg0 = s.removedSource___16696;
    s.callLocIdx = 1152; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 2320;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2320]) return breakpoint(s, 20, 2320, r0);
  case 20:
    r0 = (s.arg0).fields["pFlags"] = (0);
    s.lastBrkId = 2321;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2321]) return breakpoint(s, 21, 2321, r0);
  case 21:
    s.tmp_0 = particles_ParticleSource_setRate__P3169_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 1153; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.lastBrkId = 2322;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2322]) return breakpoint(s, 23, 2322, r0);
  case 23:
    s.tmp_0 = particles_ParticleSource_setAcceleration__P3161_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 0;
    s.callLocIdx = 1154; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.lastBrkId = 2323;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2323]) return breakpoint(s, 25, 2323, r0);
  case 25:
    s.tmp_0 = particles_ParticleSource_setAnchor__P3168_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1155; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.lastBrkId = 2324;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2324]) return breakpoint(s, 27, 2324, r0);
  case 27:
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    s.lastBrkId = 2325;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2325]) return breakpoint(s, 28, 2325, r0);
  case 28:
    r0 = (s.arg0).fields["_dt"] = (0);
    s.lastBrkId = 2326;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2326]) return breakpoint(s, 29, 2326, r0);
  case 29:
    r0 = (s.arg0).fields["priority"] = (0);
    s.lastBrkId = 2327;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2327]) return breakpoint(s, 30, 2327, r0);
  case 30:
    s.tmp_0 = r0 = s.arg3;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = globals.defaultFactory___3172;
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_2 = particles_ParticleSource_setFactory__P3171_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 1156; s.pc = 31; return s.tmp_2;
  case 31:
    r0 = s.retval;
    s.lastBrkId = 2328;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2328]) return breakpoint(s, 32, 2328, r0);
  case 32:
    r0 = pxsim_Array__push(s.sources___16687, s.arg0);
    s.lastBrkId = 2329;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2329]) return breakpoint(s, 33, 2329, r0);
  case 33:
    s.tmp_0 = particles_ParticleSource_enabled__P3165_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1157; s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_constructor__P3157.info = {"start":2307,"length":899,"line":87,"column":8,"endLine":110,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["this","anchor","particlesPerSecond","factory"]}

function particles_ParticleSource_constructor__P3157_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_constructor__P3157, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  sources___16687: undefined,
  removedSource___16696: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_sortSources__P5485(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2433;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2433]) return breakpoint(s, 1, 2433, r0);
  case 1:
    s.tmp_0 = helpers_arraySort__P105_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = particles_sortSources_inline__P16894;
    s.callLocIdx = 1195; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_sortSources__P5485.info = {"start":10026,"length":129,"line":332,"column":4,"endLine":334,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"sortSources","argumentNames":["sources"]}

function particles_sortSources__P5485_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_sortSources__P5485, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_sortSources_inline__P16894(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["priority"];
    s.tmp_1 = r0;
    r0 = s.arg1.fields["priority"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["id"];
    s.tmp_3 = r0;
    r0 = s.arg1.fields["id"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
    return leave(s, r0)
  default: oops()
} } }
particles_sortSources_inline__P16894.info = {"start":10097,"length":50,"line":333,"column":21,"endLine":333,"endColumn":71,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["a","b"]}

function particles_sortSources_inline__P16894_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_sortSources_inline__P16894, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_init__P5482(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___16933 = undefined;
    s.lastBrkId = 2411;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2411]) return breakpoint(s, 4, 2411, r0);
  case 4:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 1185; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.scene___16933 = (r0);
    s.lastBrkId = 2412;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2412]) return breakpoint(s, 6, 2412, r0);
  case 6:
    r0 = s.scene___16933.fields["particleSources"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2413;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2413]) return breakpoint(s, 7, 2413, r0);
  case 7:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2414;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2414]) return breakpoint(s, 8, 2414, r0);
  case 8:
    s.tmp_1 = r0 = s.scene___16933;
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["particleSources"] = (s.tmp_2);
    s.lastBrkId = 2415;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2415]) return breakpoint(s, 9, 2415, r0);
  case 9:
    r0 = pxsim.control.millis();
    globals.lastUpdate___5477 = (r0);
    s.lastBrkId = 2416;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2416]) return breakpoint(s, 10, 2416, r0);
  case 10:
    s.tmp_0 = game_onUpdate__P3024_mk(s);
    s.tmp_0.arg0 = particles_updateParticles__P5483;
    s.callLocIdx = 1186; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2417;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2417]) return breakpoint(s, 12, 2417, r0);
  case 12:
    s.tmp_0 = game_onUpdateInterval__P3025_mk(s);
    s.tmp_0.arg0 = 250;
    s.tmp_0.arg1 = particles_pruneParticles__P5484;
    s.callLocIdx = 1187; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_init__P5482.info = {"start":9236,"length":276,"line":304,"column":4,"endLine":311,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"init","argumentNames":[]}

function particles_init__P5482_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_init__P5482, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  scene___16933: undefined,
} }





function particles_updateParticles__P5483(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___16975 = undefined;
    s.time___16982 = undefined;
    s.dt___16985 = undefined;
    s.i___16991 = undefined;
    s.lastBrkId = 2418;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2418]) return breakpoint(s, 6, 2418, r0);
  case 6:
    s.tmp_0 = particles_particleSources__P5488_mk(s);
    s.callLocIdx = 1188; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.sources___16975 = (r0);
    s.lastBrkId = 2419;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2419]) return breakpoint(s, 8, 2419, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.sources___16975);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2420;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2420]) return breakpoint(s, 9, 2420, r0);
  case 9:
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2421;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2421]) return breakpoint(s, 10, 2421, r0);
  case 10:
    s.tmp_2 = particles_sortSources__P5485_mk(s);
    s.tmp_2.arg0 = s.sources___16975;
    s.callLocIdx = 1189; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.lastBrkId = 2422;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2422]) return breakpoint(s, 12, 2422, r0);
  case 12:
    r0 = pxsim.control.millis();
    s.time___16982 = (r0);
    s.lastBrkId = 2423;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2423]) return breakpoint(s, 13, 2423, r0);
  case 13:
    r0 = (s.time___16982 - globals.lastUpdate___5477);
    s.dt___16985 = (r0);
    s.lastBrkId = 2424;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2424]) return breakpoint(s, 14, 2424, r0);
  case 14:
    globals.lastUpdate___5477 = (s.time___16982);
    s.lastBrkId = 2425;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2425]) return breakpoint(s, 15, 2425, r0);
  case 15:
    s.i___16991 = (0);
    s.lastBrkId = 2426;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2426]) return breakpoint(s, 16, 2426, r0);
  case 16:
  case 3:
    s.lastBrkId = 2427;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2427]) return breakpoint(s, 17, 2427, r0);
  case 17:
    s.tmp_1 = r0 = s.i___16991;
    r0 = pxsim_Array__length(s.sources___16975);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 2428;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2428]) return breakpoint(s, 18, 2428, r0);
  case 18:
    s.tmp_3 = particles_ParticleSource__update__P3159_mk(s);
    r0 = pxsim_Array__getAt(s.sources___16975, s.i___16991);
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.dt___16985;
    s.callLocIdx = 1190; s.pc = 19; return s.tmp_3;
  case 19:
    r0 = s.retval;
    s.lastBrkId = 2429;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2429]) return breakpoint(s, 20, 2429, r0);
  case 20:
    r0 = (s.i___16991 + 1);
    s.i___16991 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_updateParticles__P5483.info = {"start":9518,"length":340,"line":313,"column":4,"endLine":325,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"updateParticles","argumentNames":[]}

function particles_updateParticles__P5483_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_updateParticles__P5483, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  sources___16975: undefined,
  time___16982: undefined,
  dt___16985: undefined,
  i___16991: undefined,
} }





function particles_ParticleSource__update__P3159(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___17054 = undefined;
    s.current___17073 = undefined;
    s.fixedDt___17081 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3152_VT)) failedCast(r0);
    s.lastBrkId = 2338;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2338]) return breakpoint(s, 28, 2338, r0);
  case 28:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["timer"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["timer"] = (s.tmp_1);
    s.lastBrkId = 2339;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2339]) return breakpoint(s, 29, 2339, r0);
  case 29:
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2340;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2340]) return breakpoint(s, 30, 2340, r0);
  case 30:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["lifespan"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.arg1);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["lifespan"] = (s.tmp_3);
    s.lastBrkId = 2341;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2341]) return breakpoint(s, 31, 2341, r0);
  case 31:
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2342;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2342]) return breakpoint(s, 32, 2342, r0);
  case 32:
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    s.lastBrkId = 2343;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2343]) return breakpoint(s, 33, 2343, r0);
  case 33:
    s.tmp_0 = particles_ParticleSource_destroy__P3166_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1161; s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
  case 1:
  case 2:
    { step = 10; continue; }
  case 3:
    s.lastBrkId = 2344;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2344]) return breakpoint(s, 35, 2344, r0);
  case 35:
    r0 = s.arg0.fields["anchor"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 4:
    s.tmp_2 = if_flags_1_mk(s);
    r0 = s.arg0.fields["anchor"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "flags");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["flags"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["flags"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1162; s.pc = 36; return s.tmp_2; }
    }
  case 36:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
  case 5:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_3;
    { step = 7; continue; }
  case 6:
    s.tmp_5 = if_flags_1_mk(s);
    r0 = s.arg0.fields["anchor"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "flags");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["flags"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["flags"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1163; s.pc = 37; return s.tmp_5; }
    }
  case 37:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 2);
  case 7:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 2345;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2345]) return breakpoint(s, 38, 2345, r0);
  case 38:
    r0 = (s.arg0).fields["lifespan"] = (750);
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 2346;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2346]) return breakpoint(s, 39, 2346, r0);
  case 39:
  case 11:
    s.lastBrkId = 2347;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2347]) return breakpoint(s, 40, 2347, r0);
  case 40:
    r0 = s.arg0.fields["timer"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = s.tmp_0;
    { step = 13; continue; }
  case 12:
    s.tmp_2 = particles_ParticleSource_enabled__P3164_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 1164; s.pc = 41; return s.tmp_2;
  case 41:
    r0 = s.retval;
  case 13:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 2348;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2348]) return breakpoint(s, 42, 2348, r0);
  case 42:
    s.tmp_4 = r0 = s.arg0;
    r0 = s.tmp_4.fields["timer"];
    s.tmp_6 = r0;
    r0 = s.arg0.fields["period"];
    s.tmp_7 = r0;
    r0 = (s.tmp_6 + s.tmp_7);
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["timer"] = (s.tmp_5);
    s.lastBrkId = 2349;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2349]) return breakpoint(s, 43, 2349, r0);
  case 43:
    s.tmp_0 = particles_ParticleFactory__C3188_v0_2_mk(s);
    r0 = s.arg0.fields["_factory"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["anchor"];
    s.tmp_0.arg1 = r0;
    if (!checkSubtype(s.tmp_0.arg0, particles_ParticleFactory__C3188_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.createParticle;
    s.pc = 44; return s.tmp_0;
  case 44:
    r0 = s.retval;
    s.p___17054 = (r0);
    s.lastBrkId = 2350;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2350]) return breakpoint(s, 45, 2350, r0);
  case 45:
    r0 = pxsim_numops_toBoolDecr(s.p___17054);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 2351;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2351]) return breakpoint(s, 46, 2351, r0);
  case 46:
    { step = 11; continue; }
  case 14:
  case 15:
    s.lastBrkId = 2352;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2352]) return breakpoint(s, 47, 2352, r0);
  case 47:
    r0 = s.arg0.fields["head"];
    s.tmp_2 = r0;
    r0 = (s.p___17054).fields["next"] = (s.tmp_2);
    s.lastBrkId = 2353;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2353]) return breakpoint(s, 48, 2353, r0);
  case 48:
    r0 = (s.arg0).fields["head"] = (s.p___17054);
    { step = 11; continue; }
  case 16:
    s.lastBrkId = 2354;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2354]) return breakpoint(s, 49, 2354, r0);
  case 49:
    r0 = s.arg0.fields["head"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    s.lastBrkId = 2355;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2355]) return breakpoint(s, 50, 2355, r0);
  case 50:
    { step = 27; continue; }
  case 17:
  case 18:
    s.lastBrkId = 2356;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2356]) return breakpoint(s, 51, 2356, r0);
  case 51:
    r0 = s.arg0.fields["head"];
    s.current___17073 = (r0);
    s.lastBrkId = 2357;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2357]) return breakpoint(s, 52, 2357, r0);
  case 52:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["_dt"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_dt"] = (s.tmp_1);
    s.lastBrkId = 2358;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2358]) return breakpoint(s, 53, 2358, r0);
  case 53:
    s.tmp_0 = Fx8__P149_mk(s);
    r0 = s.arg0.fields["_dt"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1165; s.pc = 54; return s.tmp_0;
  case 54:
    r0 = s.retval;
    s.fixedDt___17081 = (r0);
    s.lastBrkId = 2359;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2359]) return breakpoint(s, 55, 2359, r0);
  case 55:
    r0 = pxsim_numops_toBoolDecr(s.fixedDt___17081);
    if (!r0) { step = 23; continue; }
    s.lastBrkId = 2360;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2360]) return breakpoint(s, 56, 2360, r0);
  case 56:
  case 19:
    s.lastBrkId = 2361;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2361]) return breakpoint(s, 57, 2361, r0);
  case 57:
    r0 = s.current___17073.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 2362;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2362]) return breakpoint(s, 58, 2362, r0);
  case 58:
    s.tmp_2 = r0 = s.current___17073;
    r0 = s.tmp_2.fields["lifespan"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.arg1);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["lifespan"] = (s.tmp_3);
    s.lastBrkId = 2363;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2363]) return breakpoint(s, 59, 2363, r0);
  case 59:
    s.tmp_0 = particles_ParticleSource__C3152_v4_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.current___17073;
    s.tmp_0.arg2 = s.fixedDt___17081;
    if (!checkSubtype(s.tmp_0.arg0, particles_ParticleSource__C3152_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.updateParticle;
    s.pc = 60; return s.tmp_0;
  case 60:
    r0 = s.retval;
  case 20:
  case 21:
    s.lastBrkId = 2364;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2364]) return breakpoint(s, 61, 2364, r0);
  case 61:
    r0 = s.current___17073.fields["next"];
    s.tmp_0 = r0;
    s.current___17073 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    { step = 19; continue; }
  case 22:
    s.lastBrkId = 2365;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2365]) return breakpoint(s, 62, 2365, r0);
  case 62:
    r0 = (s.arg0).fields["_dt"] = (0);
    { step = 26; continue; }
  case 23:
    s.lastBrkId = 2366;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2366]) return breakpoint(s, 63, 2366, r0);
  case 63:
  case 24:
    s.lastBrkId = 2367;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2367]) return breakpoint(s, 64, 2367, r0);
  case 64:
    s.tmp_0 = r0 = s.current___17073;
    r0 = s.tmp_0.fields["lifespan"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lifespan"] = (s.tmp_1);
    s.lastBrkId = 2368;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2368]) return breakpoint(s, 65, 2368, r0);
  case 65:
    r0 = s.current___17073.fields["next"];
    s.tmp_0 = r0;
    s.current___17073 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 25; continue; }
    { step = 24; continue; }
  case 25:
  case 26:
  case 27:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource__update__P3159.info = {"start":3694,"length":1400,"line":124,"column":8,"endLine":164,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"_update","argumentNames":["this","dt"]}

function particles_ParticleSource__update__P3159_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource__update__P3159, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  p___17054: undefined,
  current___17073: undefined,
  fixedDt___17081: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_updateParticle__P5479(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3152_VT)) failedCast(r0);
    s.lastBrkId = 2404;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2404]) return breakpoint(s, 1, 2404, r0);
  case 1:
    s.tmp_0 = Fx_rightShift__P171_mk(s);
    s.tmp_0.arg0 = s.arg2;
    s.tmp_0.arg1 = 10;
    s.callLocIdx = 1173; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.arg2 = (r0);
    s.lastBrkId = 2405;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2405]) return breakpoint(s, 3, 2405, r0);
  case 3:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["vx"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = Fx_mul__P160_mk(s);
    r0 = s.arg0.fields["ax"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.arg2;
    s.callLocIdx = 1174; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1175; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vx"] = (s.tmp_1);
    s.lastBrkId = 2406;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2406]) return breakpoint(s, 6, 2406, r0);
  case 6:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["vy"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = Fx_mul__P160_mk(s);
    r0 = s.arg0.fields["ay"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.arg2;
    s.callLocIdx = 1176; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1177; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vy"] = (s.tmp_1);
    s.lastBrkId = 2407;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2407]) return breakpoint(s, 9, 2407, r0);
  case 9:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = Fx_mul__P160_mk(s);
    r0 = s.arg1.fields["vx"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.arg2;
    s.callLocIdx = 1178; s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1179; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 2408;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2408]) return breakpoint(s, 12, 2408, r0);
  case 12:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = Fx_mul__P160_mk(s);
    r0 = s.arg1.fields["vy"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.arg2;
    s.callLocIdx = 1180; s.pc = 14; return s.tmp_3;
  case 14:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1181; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_updateParticle__P5479.info = {"start":8248,"length":357,"line":277,"column":8,"endLine":285,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"updateParticle","argumentNames":["this","p","fixedDt"]}

function particles_ParticleSource_updateParticle__P5479_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_updateParticle__P5479, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Fx_rightShift__P171(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 229;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[229]) return breakpoint(s, 1, 229, r0);
  case 1:
    r0 = (s.arg0 >> s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_rightShift__P171.info = {"start":2266,"length":108,"line":71,"column":4,"endLine":73,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"rightShift","argumentNames":["a","n"]}

function Fx_rightShift__P171_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_rightShift__P171, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleFactory_createParticle__P3190(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___17164 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleFactory__C3188_VT)) failedCast(r0);
    s.lastBrkId = 2473;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2473]) return breakpoint(s, 1, 2473, r0);
  case 1:
    r0 = pxsim_pxtcore_mkClassInstance(particles_Particle__C3133_VT);
    s.p___17164 = (r0);
    s.lastBrkId = 2474;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2474]) return breakpoint(s, 2, 2474, r0);
  case 2:
    s.tmp_0 = r0 = s.p___17164;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_3 = if_x_1_mk(s);
    s.tmp_3.arg0 = s.arg1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "x");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["x"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["x"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1215; s.pc = 4; return s.tmp_3; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1216; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 2475;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2475]) return breakpoint(s, 5, 2475, r0);
  case 5:
    s.tmp_0 = r0 = s.p___17164;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_3 = if_y_1_mk(s);
    s.tmp_3.arg0 = s.arg1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "y");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["y"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["y"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1217; s.pc = 7; return s.tmp_3; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1218; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    s.lastBrkId = 2476;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2476]) return breakpoint(s, 8, 2476, r0);
  case 8:
    r0 = (s.p___17164).fields["vx"] = (0);
    s.lastBrkId = 2477;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2477]) return breakpoint(s, 9, 2477, r0);
  case 9:
    r0 = (s.p___17164).fields["vy"] = (0);
    s.lastBrkId = 2478;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2478]) return breakpoint(s, 10, 2478, r0);
  case 10:
    r0 = (s.p___17164).fields["lifespan"] = (500);
    s.lastBrkId = 2479;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2479]) return breakpoint(s, 11, 2479, r0);
  case 11:
    r0 = s.p___17164;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleFactory_createParticle__P3190.info = {"start":1822,"length":282,"line":67,"column":8,"endLine":77,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_ParticleFactory_createParticle__P3190_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleFactory_createParticle__P3190, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  p___17164: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_onUpdateInterval__P3025(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.timer___16955 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2060;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2060]) return breakpoint(s, 6, 2060, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg0 < 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2061;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2061]) return breakpoint(s, 7, 2061, r0);
  case 7:
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = pxsim_pxtrt.mklocRef();
    s.timer___16955 = (r0);
    s.lastBrkId = 2062;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2062]) return breakpoint(s, 8, 2062, r0);
  case 8:
    r0 = pxsim_pxtrt_stlocRef(s.timer___16955, 0);
    s.lastBrkId = 2063;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2063]) return breakpoint(s, 9, 2063, r0);
  case 9:
    r0 = pxsim_pxtcore_mkAction(3, game_onUpdateInterval_inline__P16959);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.timer___16955);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.arg1);
    s.tmp_1 = control_EventContext_registerFrameHandler__P403_mk(s);
    s.tmp_2 = game_eventContext__P3003_mk(s);
    s.callLocIdx = 972; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 19;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 976; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_onUpdateInterval__P3025.info = {"start":813,"length":401,"line":26,"column":4,"endLine":36,"endColumn":5,"fileName":"pxt_modules/game/gameutil.ts","functionName":"onUpdateInterval","argumentNames":["period","a"]}

function game_onUpdateInterval__P3025_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_onUpdateInterval__P3025, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  timer___16955: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_onUpdateInterval_inline__P16959(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.time___16960 = undefined;
    s.lastBrkId = 2064;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2064]) return breakpoint(s, 3, 2064, r0);
  case 3:
    s.tmp_0 = scene_Scene_millis__P2870_mk(s);
    s.tmp_1 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 973; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 974; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.time___16960 = (r0);
    s.lastBrkId = 2065;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2065]) return breakpoint(s, 6, 2065, r0);
  case 6:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.time___16960);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2066;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2066]) return breakpoint(s, 7, 2066, r0);
  case 7:
    s.tmp_2 = r0 = s.caps[0];
    r0 = (s.time___16960 + s.caps[1]);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_2, s.tmp_3);
    s.lastBrkId = 2067;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2067]) return breakpoint(s, 8, 2067, r0);
  case 8:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.caps[2];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 975; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_onUpdateInterval_inline__P16959.info = {"start":1027,"length":179,"line":29,"column":81,"endLine":35,"endColumn":9,"fileName":"pxt_modules/game/gameutil.ts","functionName":"inline","argumentNames":[]}

function game_onUpdateInterval_inline__P16959_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_onUpdateInterval_inline__P16959, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  time___16960: undefined,
} }





function scene_Scene_millis__P2870(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2844_VT)) failedCast(r0);
    s.lastBrkId = 1970;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1970]) return breakpoint(s, 1, 1970, r0);
  case 1:
    r0 = s.arg0.fields["_millis"];
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_millis__P2870.info = {"start":7147,"length":61,"line":196,"column":8,"endLine":198,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"millis","argumentNames":["this"]}

function scene_Scene_millis__P2870_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_millis__P2870, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function game_onUpdate__P3024(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2057;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2057]) return breakpoint(s, 4, 2057, r0);
  case 4:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2058;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2058]) return breakpoint(s, 5, 2058, r0);
  case 5:
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 2059;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2059]) return breakpoint(s, 6, 2059, r0);
  case 6:
    s.tmp_2 = control_EventContext_registerFrameHandler__P403_mk(s);
    s.tmp_3 = game_eventContext__P3003_mk(s);
    s.callLocIdx = 970; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 20;
    s.tmp_2.arg2 = s.arg0;
    s.callLocIdx = 971; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_onUpdate__P3024.info = {"start":327,"length":153,"line":13,"column":4,"endLine":16,"endColumn":5,"fileName":"pxt_modules/game/gameutil.ts","functionName":"onUpdate","argumentNames":["a"]}

function game_onUpdate__P3024_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_onUpdate__P3024, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function MAX_SOURCES_inline__P16909(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sz___16910 = undefined;
    s.tmp_0 = control_ramSize__P346_mk(s);
    s.callLocIdx = 42; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.sz___16910 = (r0);
    r0 = (s.sz___16910 <= 102400);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 8;
    { step = 5; continue; }
    { step = 4; continue; }
  case 1:
    r0 = (s.sz___16910 <= 204800);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = 16;
    { step = 5; continue; }
    { step = 3; continue; }
  case 2:
    r0 = 50;
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = undefined;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
MAX_SOURCES_inline__P16909.info = {"start":240,"length":217,"line":9,"column":25,"endLine":18,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":[]}

function MAX_SOURCES_inline__P16909_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: MAX_SOURCES_inline__P16909, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  sz___16910: undefined,
} }





function control_ramSize__P346(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 298;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[298]) return breakpoint(s, 3, 298, r0);
  case 3:
    r0 = pxsim_pxtcore.getConfig(205, 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = control__ramSize__P4600_mk(s);
    s.callLocIdx = 24; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
control_ramSize__P346.info = {"start":4847,"length":100,"line":165,"column":4,"endLine":167,"endColumn":5,"fileName":"pxt_modules/base/control.ts","functionName":"ramSize","argumentNames":[]}

function control_ramSize__P346_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_ramSize__P346, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function control__ramSize__P4600(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 297;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[297]) return breakpoint(s, 1, 297, r0);
  case 1:
    r0 = 33554432;
    return leave(s, r0)
  default: oops()
} } }
control__ramSize__P4600.info = {"start":4727,"length":60,"line":160,"column":4,"endLine":162,"endColumn":5,"fileName":"pxt_modules/base/control.ts","functionName":"_ramSize","argumentNames":[]}

function control__ramSize__P4600_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control__ramSize__P4600, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function particles_SprayFactory_constructor__P3193(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C3192_VT)) failedCast(r0);
    s.lastBrkId = 2481;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2481]) return breakpoint(s, 1, 2481, r0);
  case 1:
    s.tmp_0 = particles_ParticleFactory_constructor__P3189_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1221; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2482;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2482]) return breakpoint(s, 3, 2482, r0);
  case 3:
    s.tmp_0 = particles_initTrig__P5503_mk(s);
    s.callLocIdx = 1222; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 2483;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2483]) return breakpoint(s, 5, 2483, r0);
  case 5:
    s.tmp_0 = particles_SprayFactory_setSpeed__P3196_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1223; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 2484;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2484]) return breakpoint(s, 7, 2484, r0);
  case 7:
    s.tmp_0 = particles_SprayFactory_setDirection__P3197_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    s.callLocIdx = 1224; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_constructor__P3193.info = {"start":2623,"length":218,"line":98,"column":8,"endLine":103,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","speed","centerDegrees","arcDegrees"]}

function particles_SprayFactory_constructor__P3193_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_constructor__P3193, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_initTrig__P5503(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2450;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2450]) return breakpoint(s, 3, 2450, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.cachedSin___5489);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2451;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2451]) return breakpoint(s, 4, 2451, r0);
  case 4:
    s.tmp_2 = particles_cacheSin__P3186_mk(s);
    s.tmp_2.arg0 = 100;
    s.callLocIdx = 1210; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    globals.cachedSin___5489 = (r0);
    s.lastBrkId = 2452;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2452]) return breakpoint(s, 6, 2452, r0);
  case 6:
    s.tmp_0 = particles_cacheCos__P3187_mk(s);
    s.tmp_0.arg0 = 100;
    s.callLocIdx = 1211; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    globals.cachedCos___5490 = (r0);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_initTrig__P5503.info = {"start":291,"length":155,"line":11,"column":4,"endLine":16,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"initTrig","argumentNames":[]}

function particles_initTrig__P5503_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_initTrig__P5503, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function particles_cacheCos__P3187(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.cos___16790 = undefined;
    s.anglePerSlice___16792 = undefined;
    s.i___16798 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2461;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2461]) return breakpoint(s, 3, 2461, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.cos___16790 = (r0);
    s.lastBrkId = 2462;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2462]) return breakpoint(s, 4, 2462, r0);
  case 4:
    r0 = (6.283185307179586 / s.arg0);
    s.anglePerSlice___16792 = (r0);
    s.lastBrkId = 2463;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2463]) return breakpoint(s, 5, 2463, r0);
  case 5:
    s.i___16798 = (0);
    s.lastBrkId = 2464;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2464]) return breakpoint(s, 6, 2464, r0);
  case 6:
  case 1:
    s.lastBrkId = 2465;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2465]) return breakpoint(s, 7, 2465, r0);
  case 7:
    r0 = (s.i___16798 < s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2466;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2466]) return breakpoint(s, 8, 2466, r0);
  case 8:
    s.tmp_1 = r0 = s.cos___16790;
    s.tmp_3 = Fx8__P149_mk(s);
    r0 = (s.i___16798 * s.anglePerSlice___16792);
    s.tmp_4 = r0;
    r0 = pxsim.Math_.cos(s.tmp_4);
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1213; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    s.lastBrkId = 2467;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2467]) return breakpoint(s, 10, 2467, r0);
  case 10:
    r0 = (s.i___16798 + 1);
    s.i___16798 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 2468;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2468]) return breakpoint(s, 11, 2468, r0);
  case 11:
    r0 = s.cos___16790;
    return leave(s, r0)
  default: oops()
} } }
particles_cacheCos__P3187.info = {"start":1005,"length":263,"line":35,"column":4,"endLine":42,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"cacheCos","argumentNames":["slices"]}

function particles_cacheCos__P3187_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_cacheCos__P3187, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  cos___16790: undefined,
  anglePerSlice___16792: undefined,
  i___16798: undefined,
  arg0: undefined,
} }





function particles_cacheSin__P3186(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sin___16816 = undefined;
    s.anglePerSlice___16818 = undefined;
    s.i___16824 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2453;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2453]) return breakpoint(s, 3, 2453, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.sin___16816 = (r0);
    s.lastBrkId = 2454;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2454]) return breakpoint(s, 4, 2454, r0);
  case 4:
    r0 = (6.283185307179586 / s.arg0);
    s.anglePerSlice___16818 = (r0);
    s.lastBrkId = 2455;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2455]) return breakpoint(s, 5, 2455, r0);
  case 5:
    s.i___16824 = (0);
    s.lastBrkId = 2456;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2456]) return breakpoint(s, 6, 2456, r0);
  case 6:
  case 1:
    s.lastBrkId = 2457;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2457]) return breakpoint(s, 7, 2457, r0);
  case 7:
    r0 = (s.i___16824 < s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2458;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2458]) return breakpoint(s, 8, 2458, r0);
  case 8:
    s.tmp_1 = r0 = s.sin___16816;
    s.tmp_3 = Fx8__P149_mk(s);
    r0 = (s.i___16824 * s.anglePerSlice___16818);
    s.tmp_4 = r0;
    r0 = pxsim.Math_.sin(s.tmp_4);
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1212; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    s.lastBrkId = 2459;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2459]) return breakpoint(s, 10, 2459, r0);
  case 10:
    r0 = (s.i___16824 + 1);
    s.i___16824 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 2460;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2460]) return breakpoint(s, 11, 2460, r0);
  case 11:
    r0 = s.sin___16816;
    return leave(s, r0)
  default: oops()
} } }
particles_cacheSin__P3186.info = {"start":594,"length":263,"line":22,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"cacheSin","argumentNames":["slices"]}

function particles_cacheSin__P3186_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_cacheSin__P3186, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  sin___16816: undefined,
  anglePerSlice___16818: undefined,
  i___16824: undefined,
  arg0: undefined,
} }





function particles_SprayFactory_setDirection__P3197(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C3192_VT)) failedCast(r0);
    s.lastBrkId = 2492;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2492]) return breakpoint(s, 1, 2492, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_4 = particles_toRadians__P5508_mk(s);
    s.tmp_5 = r0 = s.arg1;
    r0 = (s.arg2 >> 1);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 - s.tmp_6);
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 1232; s.pc = 2; return s.tmp_4;
  case 2:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / globals.angleSlice___5502);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["minAngle"] = (s.tmp_1);
    s.lastBrkId = 2493;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2493]) return breakpoint(s, 3, 2493, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_4 = particles_toRadians__P5508_mk(s);
    s.tmp_4.arg0 = s.arg2;
    s.callLocIdx = 1233; s.pc = 4; return s.tmp_4;
  case 4:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / globals.angleSlice___5502);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["spread"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_setDirection__P3197.info = {"start":3424,"length":228,"line":123,"column":8,"endLine":126,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"setDirection","argumentNames":["this","centerDegrees","arcDegrees"]}

function particles_SprayFactory_setDirection__P3197_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_setDirection__P3197, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function particles_toRadians__P5508(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2469;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2469]) return breakpoint(s, 3, 2469, r0);
  case 3:
    r0 = (s.arg0 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2470;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2470]) return breakpoint(s, 4, 2470, r0);
  case 4:
    s.tmp_3 = Math_abs__P128_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 1214; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 % 360);
    s.tmp_1 = r0;
    r0 = (360 - s.tmp_1);
    s.arg0 = (r0);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 2471;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2471]) return breakpoint(s, 6, 2471, r0);
  case 6:
    r0 = (s.arg0 % 360);
    s.arg0 = (r0);
  case 2:
    s.lastBrkId = 2472;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2472]) return breakpoint(s, 7, 2472, r0);
  case 7:
    r0 = (s.arg0 * 0.017453292519943295);
    return leave(s, r0)
  default: oops()
} } }
particles_toRadians__P5508.info = {"start":1307,"length":206,"line":45,"column":4,"endLine":52,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"toRadians","argumentNames":["degrees"]}

function particles_toRadians__P5508_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_toRadians__P5508, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function particles_ParticleFactory_constructor__P3189(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleFactory__C3188_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleFactory_constructor__P3189.info = {"start":1617,"length":78,"line":59,"column":8,"endLine":61,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this"]}

function particles_ParticleFactory_constructor__P3189_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleFactory_constructor__P3189, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function particles_ParticleSource_setFactory__P3171(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3152_VT)) failedCast(r0);
    s.lastBrkId = 2402;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2402]) return breakpoint(s, 3, 2402, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2403;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2403]) return breakpoint(s, 4, 2403, r0);
  case 4:
    r0 = (s.arg0).fields["_factory"] = (s.arg1);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setFactory__P3171.info = {"start":8124,"length":114,"line":272,"column":8,"endLine":275,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setFactory","argumentNames":["this","factory"]}

function particles_ParticleSource_setFactory__P3171_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setFactory__P3171, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_setRate__P3169(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3152_VT)) failedCast(r0);
    s.lastBrkId = 2400;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2400]) return breakpoint(s, 1, 2400, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = (1000 / s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.ceil(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["period"] = (s.tmp_1);
    s.lastBrkId = 2401;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2401]) return breakpoint(s, 2, 2401, r0);
  case 2:
    r0 = (s.arg0).fields["timer"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setRate__P3169.info = {"start":7802,"length":139,"line":259,"column":8,"endLine":262,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setRate","argumentNames":["this","particlesPerSecond"]}

function particles_ParticleSource_setRate__P3169_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setRate__P3169, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_setAnchor__P3168(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3152_VT)) failedCast(r0);
    s.lastBrkId = 2399;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2399]) return breakpoint(s, 1, 2399, r0);
  case 1:
    r0 = (s.arg0).fields["anchor"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setAnchor__P3168.info = {"start":7594,"length":79,"line":251,"column":8,"endLine":253,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setAnchor","argumentNames":["this","anchor"]}

function particles_ParticleSource_setAnchor__P3168_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setAnchor__P3168, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_destroy__P3166(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3152_VT)) failedCast(r0);
    s.lastBrkId = 2395;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2395]) return breakpoint(s, 1, 2395, r0);
  case 1:
    s.tmp_0 = particles_ParticleSource_enabled__P3165_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1171; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2396;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2396]) return breakpoint(s, 3, 2396, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["pFlags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["pFlags"] = (s.tmp_1);
    s.lastBrkId = 2397;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2397]) return breakpoint(s, 4, 2397, r0);
  case 4:
    s.tmp_0 = particles_ParticleSource__prune__P3160_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1172; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_destroy__P3166.info = {"start":7094,"length":240,"line":233,"column":8,"endLine":238,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"destroy","argumentNames":["this"]}

function particles_ParticleSource_destroy__P3166_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_destroy__P3166, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function particles_ParticleSource_setAcceleration__P3161(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3152_VT)) failedCast(r0);
    s.lastBrkId = 2386;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2386]) return breakpoint(s, 1, 2386, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 1168; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ax"] = (s.tmp_1);
    s.lastBrkId = 2387;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2387]) return breakpoint(s, 3, 2387, r0);
  case 3:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1169; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ay"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setAcceleration__P3161.info = {"start":6026,"length":113,"line":194,"column":8,"endLine":197,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setAcceleration","argumentNames":["this","ax","ay"]}

function particles_ParticleSource_setAcceleration__P3161_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setAcceleration__P3161, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_arrayShift__P102(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 8;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[8]) return breakpoint(s, 1, 8, r0);
  case 1:
    r0 = pxsim_Array_.removeAt(s.arg0, 0);
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayShift__P102.info = {"start":4045,"length":82,"line":153,"column":4,"endLine":155,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayShift","argumentNames":["arr"]}

function helpers_arrayShift__P102_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayShift__P102, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function particles_SprayFactory_setSpeed__P3196(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C3192_VT)) failedCast(r0);
    s.lastBrkId = 2491;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2491]) return breakpoint(s, 1, 2491, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 1231; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["speed"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_setSpeed__P3196.info = {"start":3322,"length":92,"line":119,"column":8,"endLine":121,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"setSpeed","argumentNames":["this","pixelsPerSecond"]}

function particles_SprayFactory_setSpeed__P3196_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_setSpeed__P3196, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ConfettiFactory_constructor__P3220(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.confetti___17203 = undefined;
    s.i___17219 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ConfettiFactory__C3219_VT)) failedCast(r0);
    s.lastBrkId = 2519;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2519]) return breakpoint(s, 3, 2519, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim.image.ofBuffer(_hex17206);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    r0 = pxsim.image.ofBuffer(_hex17208);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_2);
    r0 = pxsim.image.ofBuffer(_hex17210);
    s.tmp_3 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_3);
    r0 = pxsim.image.ofBuffer(_hex17212);
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_4);
    r0 = pxsim.image.ofBuffer(_hex17214);
    s.tmp_5 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_5);
    s.confetti___17203 = (s.tmp_0);
    s.lastBrkId = 2520;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2520]) return breakpoint(s, 4, 2520, r0);
  case 4:
    s.tmp_0 = particles_ShapeFactory_constructor__P3215_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    r0 = pxsim_Array__getAt(s.confetti___17203, 0);
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 1256; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 2521;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2521]) return breakpoint(s, 6, 2521, r0);
  case 6:
    s.i___17219 = (1);
    s.lastBrkId = 2522;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2522]) return breakpoint(s, 7, 2522, r0);
  case 7:
  case 1:
    s.lastBrkId = 2523;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2523]) return breakpoint(s, 8, 2523, r0);
  case 8:
    s.tmp_1 = r0 = s.i___17219;
    r0 = pxsim_Array__length(s.confetti___17203);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 2524;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2524]) return breakpoint(s, 9, 2524, r0);
  case 9:
    s.tmp_3 = particles_ShapeFactory_addShape__P3216_mk(s);
    s.tmp_3.arg0 = s.arg0;
    r0 = pxsim_Array__getAt(s.confetti___17203, s.i___17219);
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 1257; s.pc = 10; return s.tmp_3;
  case 10:
    r0 = s.retval;
    s.lastBrkId = 2525;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2525]) return breakpoint(s, 11, 2525, r0);
  case 11:
    r0 = (s.i___17219 + 1);
    s.i___17219 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 2526;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2526]) return breakpoint(s, 12, 2526, r0);
  case 12:
    r0 = (s.arg0).fields["minLifespan"] = (1000);
    s.lastBrkId = 2527;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2527]) return breakpoint(s, 13, 2527, r0);
  case 13:
    r0 = (s.arg0).fields["maxLifespan"] = (4500);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ConfettiFactory_constructor__P3220.info = {"start":7755,"length":706,"line":247,"column":8,"endLine":274,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","xRange","yRange"]}

function particles_ConfettiFactory_constructor__P3220_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ConfettiFactory_constructor__P3220, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  confetti___17203: undefined,
  i___17219: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }

const _hex17206 = pxsim.BufferMethods.createBufferFromHex("87040100010000000f000000")
const _hex17208 = pxsim.BufferMethods.createBufferFromHex("8704010002000000ff000000")
const _hex17210 = pxsim.BufferMethods.createBufferFromHex("87040200010000000f0000000f000000")
const _hex17212 = pxsim.BufferMethods.createBufferFromHex("8704020002000000ff0000000f000000")
const _hex17214 = pxsim.BufferMethods.createBufferFromHex("87040200020000000f000000ff000000")




function particles_ShapeFactory_addShape__P3216(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C3214_VT)) failedCast(r0);
    s.lastBrkId = 2511;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2511]) return breakpoint(s, 3, 2511, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2512;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2512]) return breakpoint(s, 4, 2512, r0);
  case 4:
    r0 = s.arg0.fields["sources"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_addShape__P3216.info = {"start":7079,"length":83,"line":225,"column":8,"endLine":227,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"addShape","argumentNames":["this","shape"]}

function particles_ShapeFactory_addShape__P3216_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_addShape__P3216, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ShapeFactory_constructor__P3215(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C3214_VT)) failedCast(r0);
    s.lastBrkId = 2507;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2507]) return breakpoint(s, 1, 2507, r0);
  case 1:
    s.tmp_0 = particles_AreaFactory_constructor__P3203_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = undefined;
    s.tmp_0.arg4 = undefined;
    s.callLocIdx = 1246; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2508;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2508]) return breakpoint(s, 3, 2508, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg3);
    r0 = (s.arg0).fields["sources"] = (s.tmp_0);
    s.lastBrkId = 2509;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2509]) return breakpoint(s, 4, 2509, r0);
  case 4:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = pxsim_ImageMethods.width(s.arg3);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1247; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ox"] = (s.tmp_1);
    s.lastBrkId = 2510;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2510]) return breakpoint(s, 6, 2510, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = pxsim_ImageMethods.height(s.arg3);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1248; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["oy"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_constructor__P3215.info = {"start":6668,"length":285,"line":212,"column":8,"endLine":219,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","xRange","yRange","source"]}

function particles_ShapeFactory_constructor__P3215_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_constructor__P3215, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_AreaFactory_constructor__P3203(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_AreaFactory__C3198_VT)) failedCast(r0);
    s.lastBrkId = 2494;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2494]) return breakpoint(s, 5, 2494, r0);
  case 5:
    s.tmp_0 = particles_SprayFactory_constructor__P3193_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 40;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = 90;
    s.callLocIdx = 1234; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.lastBrkId = 2495;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2495]) return breakpoint(s, 7, 2495, r0);
  case 7:
    r0 = (s.arg0).fields["xRange"] = (s.arg1);
    s.lastBrkId = 2496;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2496]) return breakpoint(s, 8, 2496, r0);
  case 8:
    r0 = (s.arg0).fields["yRange"] = (s.arg2);
    s.lastBrkId = 2497;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2497]) return breakpoint(s, 9, 2497, r0);
  case 9:
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    if (!r0) { step = 1; continue; }
    r0 = s.arg3;
    { step = 2; continue; }
  case 1:
    r0 = 150;
  case 2:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["minLifespan"] = (s.tmp_0);
    s.lastBrkId = 2498;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2498]) return breakpoint(s, 10, 2498, r0);
  case 10:
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    if (!r0) { step = 3; continue; }
    r0 = s.arg4;
    { step = 4; continue; }
  case 3:
    r0 = 850;
  case 4:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["maxLifespan"] = (s.tmp_0);
    s.lastBrkId = 2499;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2499]) return breakpoint(s, 11, 2499, r0);
  case 11:
    r0 = pxsim_pxtcore_mkClassInstance(Math_FastRandom__C3060_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Math_FastRandom_constructor__P3062_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 1235; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    r0 = (s.arg0).fields["galois"] = (s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_AreaFactory_constructor__P3203.info = {"start":3950,"length":374,"line":139,"column":8,"endLine":146,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","xRange","yRange","minLifespan","maxLifespan"]}

function particles_AreaFactory_constructor__P3203_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_AreaFactory_constructor__P3203, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function effects_ScreenEffect_constructor__P3268(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ScreenEffect__C3267_VT)) failedCast(r0);
    s.lastBrkId = 2541;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2541]) return breakpoint(s, 1, 2541, r0);
  case 1:
    s.tmp_0 = effects_ParticleEffect_constructor__P3264_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg3;
    s.tmp_0.arg3 = s.arg4;
    s.callLocIdx = 1263; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2542;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2542]) return breakpoint(s, 3, 2542, r0);
  case 3:
    r0 = (s.arg0).fields["sceneDefaultRate"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ScreenEffect_constructor__P3268.info = {"start":2911,"length":332,"line":81,"column":8,"endLine":85,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"inline","argumentNames":["this","anchorDefault","sceneDefault","defaultLifespan","sourceFactory"]}

function effects_ScreenEffect_constructor__P3268_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ScreenEffect_constructor__P3268, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function effects_ParticleEffect_constructor__P3264(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ParticleEffect__C3263_VT)) failedCast(r0);
    s.lastBrkId = 2528;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2528]) return breakpoint(s, 1, 2528, r0);
  case 1:
    r0 = (s.arg0).fields["sourceFactory"] = (s.arg3);
    s.lastBrkId = 2529;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2529]) return breakpoint(s, 2, 2529, r0);
  case 2:
    r0 = (s.arg0).fields["defaultRate"] = (s.arg1);
    s.lastBrkId = 2530;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2530]) return breakpoint(s, 3, 2530, r0);
  case 3:
    r0 = (s.arg0).fields["defaultLifespan"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ParticleEffect_constructor__P3264.info = {"start":384,"length":364,"line":13,"column":8,"endLine":18,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"inline","argumentNames":["this","defaultParticlesPerSecond","defaultLifespan","sourceFactory"]}

function effects_ParticleEffect_constructor__P3264_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ParticleEffect_constructor__P3264, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function music_melodyPlayable__P1924(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 557;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[557]) return breakpoint(s, 1, 557, r0);
  case 1:
    r0 = pxsim_pxtcore_mkClassInstance(music_MelodyPlayable__C1917_VT);
    s.tmp_0 = r0;
    s.tmp_1 = music_MelodyPlayable_constructor__P1918_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.callLocIdx = 81; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
music_melodyPlayable__P1924.info = {"start":3172,"length":107,"line":121,"column":4,"endLine":123,"endColumn":5,"fileName":"pxt_modules/mixer/playable.ts","functionName":"melodyPlayable","argumentNames":["melody"]}

function music_melodyPlayable__P1924_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_melodyPlayable__P1924, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function music_MelodyPlayable_constructor__P1918(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_MelodyPlayable__C1917_VT)) failedCast(r0);
    r0 = (s.arg0).fields["melody"] = (s.arg1);
    s.lastBrkId = 556;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[556]) return breakpoint(s, 1, 556, r0);
  case 1:
    s.tmp_0 = music_Playable_constructor__P1914_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 80; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_MelodyPlayable_constructor__P1918.info = {"start":1531,"length":67,"line":68,"column":8,"endLine":70,"endColumn":9,"fileName":"pxt_modules/mixer/playable.ts","functionName":"inline","argumentNames":["this","melody"]}

function music_MelodyPlayable_constructor__P1918_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_MelodyPlayable_constructor__P1918, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function music_Playable_constructor__P1914(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Playable__C1912_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_Playable_constructor__P1914.info = {"start":1086,"length":26,"line":47,"column":8,"endLine":49,"endColumn":9,"fileName":"pxt_modules/mixer/playable.ts","functionName":"inline","argumentNames":["this"]}

function music_Playable_constructor__P1914_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Playable_constructor__P1914, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function music_Melody_constructor__P1630(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C1627_VT)) failedCast(r0);
    s.lastBrkId = 541;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[541]) return breakpoint(s, 1, 541, r0);
  case 1:
    r0 = (s.arg0).fields["_text"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_Melody_constructor__P1630.info = {"start":6430,"length":67,"line":203,"column":8,"endLine":205,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"inline","argumentNames":["this","text"]}

function music_Melody_constructor__P1630_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_constructor__P1630, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Fx8__P149(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 208;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[208]) return breakpoint(s, 1, 208, r0);
  case 1:
    r0 = (s.arg0 * 256);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 | 0);
    return leave(s, r0)
  default: oops()
} } }
Fx8__P149.info = {"start":42,"length":68,"line":4,"column":0,"endLine":6,"endColumn":1,"fileName":"pxt_modules/base/fixed.ts","functionName":"Fx8","argumentNames":["v"]}

function Fx8__P149_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx8__P149, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function SpriteKind_create__P2480(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1329;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1329]) return breakpoint(s, 3, 1329, r0);
  case 3:
    r0 = (globals.nextKind___4956 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1330;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1330]) return breakpoint(s, 4, 1330, r0);
  case 4:
    globals.nextKind___4956 = (1000);
  case 1:
  case 2:
    s.lastBrkId = 1331;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1331]) return breakpoint(s, 5, 1331, r0);
  case 5:
    s.tmp_0 = r0 = globals.nextKind___4956;
    r0 = (s.tmp_0 + 1);
    globals.nextKind___4956 = (r0);
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
SpriteKind_create__P2480.info = {"start":783,"length":112,"line":26,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/game/spritekind.ts","functionName":"create","argumentNames":[]}

function SpriteKind_create__P2480_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: SpriteKind_create__P2480, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_Button_constructor__P2196(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2190_VT)) failedCast(r0);
    s.lastBrkId = 896;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[896]) return breakpoint(s, 5, 896, r0);
  case 5:
    r0 = (s.arg0).fields["id"] = (s.arg1);
    s.lastBrkId = 897;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[897]) return breakpoint(s, 6, 897, r0);
  case 6:
    r0 = (s.arg0).fields["_pressed"] = (false);
    s.lastBrkId = 898;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[898]) return breakpoint(s, 7, 898, r0);
  case 7:
    r0 = (s.arg0).fields["repeatDelay"] = (undefined);
    s.lastBrkId = 899;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[899]) return breakpoint(s, 8, 899, r0);
  case 8:
    r0 = (s.arg0).fields["repeatInterval"] = (undefined);
    s.lastBrkId = 900;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[900]) return breakpoint(s, 9, 900, r0);
  case 9:
    r0 = (s.arg0).fields["_repeatCount"] = (0);
    s.lastBrkId = 901;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[901]) return breakpoint(s, 10, 901, r0);
  case 10:
    r0 = (s.arg1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 902;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[902]) return breakpoint(s, 11, 902, r0);
  case 11:
    r0 = pxsim_pxtcore_mkAction(1, controller_Button_inline__P17356);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    r0 = s.arg0.fields["id"];
    s.tmp_2 = r0;
    r0 = pxsim.control.internalOnEvent(2050, s.tmp_2, s.tmp_1, 16);
    s.lastBrkId = 903;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[903]) return breakpoint(s, 12, 903, r0);
  case 12:
    r0 = pxsim_pxtcore_mkAction(1, controller_Button_inline__P17363);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = s.arg0.fields["id"];
    s.tmp_1 = r0;
    r0 = pxsim.control.internalOnEvent(2051, s.tmp_1, s.tmp_0, 16);
    s.lastBrkId = 904;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[904]) return breakpoint(s, 13, 904, r0);
  case 13:
    r0 = (s.arg2 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 905;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[905]) return breakpoint(s, 14, 905, r0);
  case 14:
    s.tmp_1 = controller_setupButton__P4939_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = s.arg2;
    s.callLocIdx = 209; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
  case 1:
  case 2:
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_constructor__P2196.info = {"start":2004,"length":864,"line":77,"column":8,"endLine":94,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":["this","id","configKey"]}

function controller_Button_constructor__P2196_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_constructor__P2196, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function controller_Button_inline__P17356(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = controller_Button_setPressed__P2203_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = false;
    s.callLocIdx = 207; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_inline__P17356.info = {"start":2627,"length":28,"line":88,"column":66,"endLine":88,"endColumn":94,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":[]}

function controller_Button_inline__P17356_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_inline__P17356, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_Button_inline__P17363(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = controller_Button_setPressed__P2203_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = true;
    s.callLocIdx = 208; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_inline__P17363.info = {"start":2729,"length":27,"line":89,"column":68,"endLine":89,"endColumn":95,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":[]}

function controller_Button_inline__P17363_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_inline__P17363, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_setupButton__P4939(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 888;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[888]) return breakpoint(s, 1, 888, r0);
  case 1:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_setupButton__P4939.info = {"start":861,"length":93,"line":39,"column":4,"endLine":41,"endColumn":6,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"setupButton","argumentNames":["buttonId","key"]}

function controller_setupButton__P4939_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_setupButton__P4939, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_setPressed__P2203(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2190_VT)) failedCast(r0);
    s.lastBrkId = 921;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[921]) return breakpoint(s, 7, 921, r0);
  case 7:
    r0 = s.arg0.fields["_pressed"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 922;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[922]) return breakpoint(s, 8, 922, r0);
  case 8:
    s.tmp_2 = power_poke__P1930_mk(s);
    s.callLocIdx = 211; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 923;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[923]) return breakpoint(s, 10, 923, r0);
  case 10:
    r0 = s.arg0.fields["_owner"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 924;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[924]) return breakpoint(s, 11, 924, r0);
  case 11:
    s.tmp_1 = controller_Controller_connected__P2157_mk(s);
    r0 = s.arg0.fields["_owner"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = true;
    s.callLocIdx = 212; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 925;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[925]) return breakpoint(s, 13, 925, r0);
  case 13:
    r0 = (s.arg0).fields["_pressed"] = (s.arg1);
    s.lastBrkId = 926;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[926]) return breakpoint(s, 14, 926, r0);
  case 14:
    r0 = s.arg0.fields["_pressed"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 927;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[927]) return breakpoint(s, 15, 927, r0);
  case 15:
    r0 = (s.arg0).fields["_pressedElasped"] = (0);
    s.lastBrkId = 928;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[928]) return breakpoint(s, 16, 928, r0);
  case 16:
    s.tmp_0 = controller_Button_raiseButtonDown__P4923_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 213; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 929;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[929]) return breakpoint(s, 18, 929, r0);
  case 18:
    r0 = (s.arg0).fields["_repeatCount"] = (0);
    s.lastBrkId = 930;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[930]) return breakpoint(s, 19, 930, r0);
  case 19:
    s.tmp_0 = controller_Button_raiseButtonUp__P4922_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 214; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
  case 4:
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_setPressed__P2203.info = {"start":6774,"length":507,"line":201,"column":8,"endLine":215,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"setPressed","argumentNames":["this","pressed"]}

function controller_Button_setPressed__P2203_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_setPressed__P2203, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_raiseButtonDown__P4923(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2190_VT)) failedCast(r0);
    s.lastBrkId = 909;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[909]) return breakpoint(s, 3, 909, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals._userEventsEnabled___4933);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 910;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[910]) return breakpoint(s, 4, 910, r0);
  case 4:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2049, s.tmp_0);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 911;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[911]) return breakpoint(s, 5, 911, r0);
  case 5:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2053, s.tmp_0);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_raiseButtonDown__P4923.info = {"start":3088,"length":205,"line":103,"column":8,"endLine":108,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"raiseButtonDown","argumentNames":["this"]}

function controller_Button_raiseButtonDown__P4923_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_raiseButtonDown__P4923, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Button_raiseButtonUp__P4922(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2190_VT)) failedCast(r0);
    s.lastBrkId = 906;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[906]) return breakpoint(s, 3, 906, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals._userEventsEnabled___4933);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 907;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[907]) return breakpoint(s, 4, 907, r0);
  case 4:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2048, s.tmp_0);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 908;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[908]) return breakpoint(s, 5, 908, r0);
  case 5:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2052, s.tmp_0);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_raiseButtonUp__P4922.info = {"start":2878,"length":200,"line":96,"column":8,"endLine":101,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"raiseButtonUp","argumentNames":["this"]}

function controller_Button_raiseButtonUp__P4922_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_raiseButtonUp__P4922, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_addScenePushHandler__P3019(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2049;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2049]) return breakpoint(s, 5, 2049, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals._scenePushHandlers___5139);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2050;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2050]) return breakpoint(s, 6, 2050, r0);
  case 6:
    r0 = pxsim_Array__mk();
    globals._scenePushHandlers___5139 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 2051;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2051]) return breakpoint(s, 7, 2051, r0);
  case 7:
    r0 = pxsim_Array_.indexOf(globals._scenePushHandlers___5139, s.arg0, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2052;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2052]) return breakpoint(s, 8, 2052, r0);
  case 8:
    r0 = pxsim_Array__push(globals._scenePushHandlers___5139, s.arg0);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_addScenePushHandler__P3019.info = {"start":16454,"length":242,"line":489,"column":4,"endLine":493,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"addScenePushHandler","argumentNames":["handler"]}

function game_addScenePushHandler__P3019_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_addScenePushHandler__P3019, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function controller_Controller_id__P2142(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2135_VT)) failedCast(r0);
    s.lastBrkId = 822;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[822]) return breakpoint(s, 1, 822, r0);
  case 1:
    r0 = s.arg0.fields["_id"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_id__P2142.info = {"start":3444,"length":49,"line":109,"column":8,"endLine":111,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"id","argumentNames":["this"]}
controller_Controller_id__P2142.isGetter = true;

function controller_Controller_id__P2142_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_id__P2142, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller_Controller_connected__P2156(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C2135_VT)) failedCast(r0);
    s.lastBrkId = 828;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[828]) return breakpoint(s, 1, 828, r0);
  case 1:
    r0 = s.arg0.fields["_connected"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_connected__P2156.info = {"start":7723,"length":63,"line":250,"column":8,"endLine":252,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"connected","argumentNames":["this"]}
controller_Controller_connected__P2156.isGetter = true;

function controller_Controller_connected__P2156_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_connected__P2156, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function game_currentScene__P3000(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 2017;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2017]) return breakpoint(s, 1, 2017, r0);
  case 1:
    s.tmp_0 = game_init__P5145_mk(s);
    s.tmp_0.arg0 = undefined;
    s.callLocIdx = 951; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.lastBrkId = 2018;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2018]) return breakpoint(s, 3, 2018, r0);
  case 3:
    r0 = globals._scene___5137;
    return leave(s, r0)
  default: oops()
} } }
game_currentScene__P3000.info = {"start":4025,"length":90,"line":118,"column":4,"endLine":121,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"currentScene","argumentNames":[]}

function game_currentScene__P3000_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_currentScene__P3000, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_addScenePopHandler__P3021(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 2053;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2053]) return breakpoint(s, 5, 2053, r0);
  case 5:
    r0 = pxsim_numops_toBoolDecr(globals._scenePopHandlers___5140);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 2054;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2054]) return breakpoint(s, 6, 2054, r0);
  case 6:
    r0 = pxsim_Array__mk();
    globals._scenePopHandlers___5140 = (r0);
  case 1:
  case 2:
    s.lastBrkId = 2055;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2055]) return breakpoint(s, 7, 2055, r0);
  case 7:
    r0 = pxsim_Array_.indexOf(globals._scenePopHandlers___5140, s.arg0, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2056;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2056]) return breakpoint(s, 8, 2056, r0);
  case 8:
    r0 = pxsim_Array__push(globals._scenePopHandlers___5140, s.arg0);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_addScenePopHandler__P3021.info = {"start":17455,"length":237,"line":513,"column":4,"endLine":517,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"addScenePopHandler","argumentNames":["handler"]}

function game_addScenePopHandler__P3021_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_addScenePopHandler__P3021, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function settings_initScopes__P4827(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.rn___17458 = undefined;
    s.lastBrkId = 729;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[729]) return breakpoint(s, 1, 729, r0);
  case 1:
    s.tmp_1 = settings_runNumber__P2059_mk(s);
    s.callLocIdx = 127; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    s.rn___17458 = (r0);
    s.lastBrkId = 730;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[730]) return breakpoint(s, 3, 730, r0);
  case 3:
    s.tmp_0 = settings_writeNumber__P2064_mk(s);
    s.tmp_0.arg0 = globals.RUN_KEY___4815;
    s.tmp_0.arg1 = s.rn___17458;
    s.callLocIdx = 128; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 731;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[731]) return breakpoint(s, 5, 731, r0);
  case 5:
    r0 = pxsim.control.deviceSerialNumber();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2147483647);
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.seedAddRandom(s.tmp_0);
    s.lastBrkId = 732;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[732]) return breakpoint(s, 6, 732, r0);
  case 6:
    r0 = pxsim_pxtcore.seedAddRandom(s.rn___17458);
    s.lastBrkId = 733;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[733]) return breakpoint(s, 7, 733, r0);
  case 7:
    s.tmp_0 = settings_setScope__P4826_mk(s);
    r0 = pxsim_pxtcore.programName();
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 129; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_initScopes__P4827.info = {"start":1104,"length":230,"line":41,"column":4,"endLine":49,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"initScopes","argumentNames":[]}

function settings_initScopes__P4827_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_initScopes__P4827, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  rn___17458: undefined,
} }





function settings_setScope__P4826(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.currScope___17487 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 723;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[723]) return breakpoint(s, 7, 723, r0);
  case 7:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 100);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 724;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[724]) return breakpoint(s, 8, 724, r0);
  case 8:
    r0 = pxsim_pxtrt.panic(922);
  case 3:
  case 4:
    s.lastBrkId = 725;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[725]) return breakpoint(s, 9, 725, r0);
  case 9:
    s.tmp_0 = settings_readString__P2067_mk(s);
    s.tmp_0.arg0 = globals.SCOPE_KEY___4816;
    s.callLocIdx = 125; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.currScope___17487 = (r0);
    s.lastBrkId = 726;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[726]) return breakpoint(s, 11, 726, r0);
  case 11:
    r0 = (s.currScope___17487 != s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 727;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[727]) return breakpoint(s, 12, 727, r0);
  case 12:
    r0 = pxsim.settings._userClean();
    s.lastBrkId = 728;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[728]) return breakpoint(s, 13, 728, r0);
  case 13:
    s.tmp_0 = settings_writeString__P2062_mk(s);
    s.tmp_0.arg0 = globals.SCOPE_KEY___4816;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 126; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_setScope__P4826.info = {"start":826,"length":272,"line":31,"column":4,"endLine":39,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"setScope","argumentNames":["scope"]}

function settings_setScope__P4826_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_setScope__P4826, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  currScope___17487: undefined,
  arg0: undefined,
} }





function settings_readString__P2067(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.buf___17508 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 741;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[741]) return breakpoint(s, 4, 741, r0);
  case 4:
    s.tmp_0 = settings_readBuffer__P2066_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 134; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.buf___17508 = (r0);
    s.lastBrkId = 742;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[742]) return breakpoint(s, 6, 742, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.buf___17508);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 743;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[743]) return breakpoint(s, 7, 743, r0);
  case 7:
    r0 = undefined;
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 744;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[744]) return breakpoint(s, 8, 744, r0);
  case 8:
    r0 = pxsim.BufferMethods.toString(s.buf___17508);
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
settings_readString__P2067.info = {"start":2827,"length":177,"line":110,"column":4,"endLine":116,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readString","argumentNames":["key"]}

function settings_readString__P2067_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readString__P2067, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  buf___17508: undefined,
  arg0: undefined,
} }





function settings_writeString__P2062(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 738;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[738]) return breakpoint(s, 1, 738, r0);
  case 1:
    s.tmp_0 = settings_writeBuffer__P2061_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim.control.createBufferFromUTF8(s.arg1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 131; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeString__P2062.info = {"start":1895,"length":125,"line":75,"column":4,"endLine":77,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeString","argumentNames":["key","value"]}

function settings_writeString__P2062_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeString__P2062, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function settings_runNumber__P2059(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 722;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[722]) return breakpoint(s, 3, 722, r0);
  case 3:
    s.tmp_1 = settings_readNumber__P2069_mk(s);
    s.tmp_1.arg0 = globals.RUN_KEY___4815;
    s.callLocIdx = 124; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
settings_runNumber__P2059.info = {"start":745,"length":75,"line":27,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"runNumber","argumentNames":[]}

function settings_runNumber__P2059_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_runNumber__P2059, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function control___screen_setupUpdate__P1995(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 702;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[702]) return breakpoint(s, 1, 702, r0);
  case 1:
    globals.__updated___4782 = (true);
    s.lastBrkId = 703;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[703]) return breakpoint(s, 2, 703, r0);
  case 2:
    globals.__update___4780 = (s.arg0);
    s.lastBrkId = 704;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[704]) return breakpoint(s, 3, 704, r0);
  case 3:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.arg0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 118; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___screen_setupUpdate__P1995.info = {"start":198,"length":125,"line":10,"column":4,"endLine":14,"endColumn":5,"fileName":"pxt_modules/screen/frame.ts","functionName":"setupUpdate","argumentNames":["update"]}

function control___screen_setupUpdate__P1995_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___screen_setupUpdate__P1995, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function _screen_internal_getScreenHeight__P2038(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 716;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[716]) return breakpoint(s, 1, 716, r0);
  case 1:
    r0 = pxsim_pxtcore.getConfig(2103, s.arg0);
    return leave(s, r0)
  default: oops()
} } }
_screen_internal_getScreenHeight__P2038.info = {"start":960,"length":127,"line":28,"column":4,"endLine":30,"endColumn":5,"fileName":"pxt_modules/screen/targetoverrides.ts","functionName":"getScreenHeight","argumentNames":["defl"]}

function _screen_internal_getScreenHeight__P2038_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _screen_internal_getScreenHeight__P2038, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function _screen_internal_getScreenWidth__P2037(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 715;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[715]) return breakpoint(s, 1, 715, r0);
  case 1:
    r0 = pxsim_pxtcore.getConfig(2102, s.arg0);
    return leave(s, r0)
  default: oops()
} } }
_screen_internal_getScreenWidth__P2037.info = {"start":810,"length":125,"line":23,"column":4,"endLine":25,"endColumn":5,"fileName":"pxt_modules/screen/targetoverrides.ts","functionName":"getScreenWidth","argumentNames":["defl"]}

function _screen_internal_getScreenWidth__P2037_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _screen_internal_getScreenWidth__P2037, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function control___screen_update__P1994(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 699;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[699]) return breakpoint(s, 3, 699, r0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals.__update___4780);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 700;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[700]) return breakpoint(s, 4, 700, r0);
  case 4:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = globals.__update___4780;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 117; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 701;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[701]) return breakpoint(s, 6, 701, r0);
  case 6:
    globals.__updated___4782 = (true);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___screen_update__P1994.info = {"start":90,"length":102,"line":4,"column":4,"endLine":8,"endColumn":5,"fileName":"pxt_modules/screen/frame.ts","functionName":"update","argumentNames":[]}

function control___screen_update__P1994_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___screen_update__P1994, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function pause__P413(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 507;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[507]) return breakpoint(s, 1, 507, r0);
  case 1:
    setupResume(s, 2);
    pxsim.loops.pause(s.arg0);
    checkResumeConsumed();
    return;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pause__P413.info = {"start":246,"length":57,"line":7,"column":0,"endLine":9,"endColumn":1,"fileName":"pxt_modules/base/pause.ts","functionName":"pause","argumentNames":["ms"]}

function pause__P413_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pause__P413, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function music_Melody_toString__P1636(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C1627_VT)) failedCast(r0);
    s.lastBrkId = 542;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[542]) return breakpoint(s, 1, 542, r0);
  case 1:
    r0 = s.arg0.fields["_text"];
    return leave(s, r0)
  default: oops()
} } }
music_Melody_toString__P1636.info = {"start":10223,"length":53,"line":318,"column":8,"endLine":320,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"toString","argumentNames":["this"]}

function music_Melody_toString__P1636_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_toString__P1636, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function particles_ShapeFactory_createParticle__P3218(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___19287 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C3214_VT)) failedCast(r0);
    s.lastBrkId = 2516;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2516]) return breakpoint(s, 1, 2516, r0);
  case 1:
    s.tmp_0 = particles_AreaFactory_createParticle__P3204_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1254; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.p___19287 = (r0);
    s.lastBrkId = 2517;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2517]) return breakpoint(s, 3, 2517, r0);
  case 3:
    s.tmp_0 = r0 = s.p___19287;
    s.tmp_2 = Math_FastRandom_randomRange__P3064_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 1;
    s.tmp_2.arg2 = 14;
    s.callLocIdx = 1255; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["color"] = (s.tmp_1);
    s.lastBrkId = 2518;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2518]) return breakpoint(s, 5, 2518, r0);
  case 5:
    r0 = s.p___19287;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_createParticle__P3218.info = {"start":7505,"length":178,"line":239,"column":8,"endLine":243,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_ShapeFactory_createParticle__P3218_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_createParticle__P3218, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  p___19287: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_AreaFactory_createParticle__P3204(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___17546 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_AreaFactory__C3198_VT)) failedCast(r0);
    s.lastBrkId = 2500;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2500]) return breakpoint(s, 3, 2500, r0);
  case 3:
    s.tmp_0 = particles_SprayFactory_createParticle__P3194_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1236; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.p___17546 = (r0);
    s.lastBrkId = 2501;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2501]) return breakpoint(s, 5, 2501, r0);
  case 5:
    s.tmp_0 = r0 = s.p___17546;
    s.tmp_2 = Math_FastRandom_randomRange__P3064_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_2.arg0 = r0;
    r0 = s.arg0.fields["minLifespan"];
    s.tmp_2.arg1 = r0;
    r0 = s.arg0.fields["maxLifespan"];
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 1237; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lifespan"] = (s.tmp_1);
    s.lastBrkId = 2502;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2502]) return breakpoint(s, 7, 2502, r0);
  case 7:
    s.tmp_0 = r0 = s.p___17546;
    s.tmp_2 = Fx_iadd__P158_mk(s);
    s.tmp_4 = Math_FastRandom_randomRange__P3064_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 0;
    r0 = s.arg0.fields["xRange"];
    s.tmp_4.arg2 = r0;
    s.callLocIdx = 1238; s.pc = 9; return s.tmp_4;
  case 9:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.arg0.fields["xRange"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_3 - s.tmp_5);
    s.tmp_2.arg0 = r0;
    r0 = s.p___17546.fields["_x"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1239; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 2503;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2503]) return breakpoint(s, 10, 2503, r0);
  case 10:
    s.tmp_1 = if_height_1_mk(s);
    s.tmp_1.arg0 = s.arg1;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "height");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["height"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["height"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1241; s.pc = 11; return s.tmp_1; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = if_height_1_mk(s);
    s.tmp_3.arg0 = s.arg1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "height");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["height"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["height"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1242; s.pc = 12; return s.tmp_3; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = r0 = s.p___17546;
    s.tmp_7 = Fx_iadd__P158_mk(s);
    s.tmp_9 = Math_FastRandom_randomRange__P3064_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_9.arg0 = r0;
    s.tmp_9.arg1 = 0;
    r0 = s.arg0.fields["yRange"];
    s.tmp_9.arg2 = r0;
    s.callLocIdx = 1240; s.pc = 14; return s.tmp_9;
  case 14:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_8 - s.tmp_4);
    s.tmp_7.arg0 = r0;
    r0 = s.p___17546.fields["_y"];
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 1243; s.pc = 13; return s.tmp_7;
  case 13:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5).fields["_y"] = (s.tmp_6);
    s.lastBrkId = 2504;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2504]) return breakpoint(s, 15, 2504, r0);
  case 15:
    r0 = s.p___17546;
    return leave(s, r0)
  default: oops()
} } }
particles_AreaFactory_createParticle__P3204.info = {"start":4334,"length":426,"line":148,"column":8,"endLine":156,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_AreaFactory_createParticle__P3204_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_AreaFactory_createParticle__P3204, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  p___17546: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_iadd__P158(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 212;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[212]) return breakpoint(s, 1, 212, r0);
  case 1:
    r0 = (s.arg0 << 8);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_iadd__P158.info = {"start":634,"length":110,"line":23,"column":4,"endLine":25,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"iadd","argumentNames":["a","b"]}

function Fx_iadd__P158_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_iadd__P158, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_SprayFactory_createParticle__P3194(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___17602 = undefined;
    s.angle___17606 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C3192_VT)) failedCast(r0);
    s.lastBrkId = 2485;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2485]) return breakpoint(s, 1, 2485, r0);
  case 1:
    s.tmp_0 = particles_ParticleFactory_createParticle__P3190_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1225; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.p___17602 = (r0);
    s.lastBrkId = 2486;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2486]) return breakpoint(s, 3, 2486, r0);
  case 3:
    r0 = s.arg0.fields["minAngle"];
    s.tmp_1 = r0;
    s.tmp_3 = Math_FastRandom_randomRange__P3064_mk(s);
    s.tmp_3.arg0 = globals.galois___5494;
    s.tmp_3.arg1 = 0;
    r0 = s.arg0.fields["spread"];
    s.tmp_3.arg2 = r0;
    s.callLocIdx = 1226; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % 100);
    s.angle___17606 = (r0);
    s.lastBrkId = 2487;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2487]) return breakpoint(s, 5, 2487, r0);
  case 5:
    s.tmp_0 = r0 = s.p___17602;
    s.tmp_2 = Fx_mul__P160_mk(s);
    r0 = pxsim_Array__getAt(globals.cachedSin___5489, s.angle___17606);
    s.tmp_2.arg0 = r0;
    r0 = s.arg0.fields["speed"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1227; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vx"] = (s.tmp_1);
    s.lastBrkId = 2488;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2488]) return breakpoint(s, 7, 2488, r0);
  case 7:
    s.tmp_0 = r0 = s.p___17602;
    s.tmp_2 = Fx_mul__P160_mk(s);
    r0 = pxsim_Array__getAt(globals.cachedCos___5490, s.angle___17606);
    s.tmp_2.arg0 = r0;
    r0 = s.arg0.fields["speed"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1228; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vy"] = (s.tmp_1);
    s.lastBrkId = 2489;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2489]) return breakpoint(s, 9, 2489, r0);
  case 9:
    r0 = s.p___17602;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_createParticle__P3194.info = {"start":2851,"length":333,"line":105,"column":8,"endLine":113,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_SprayFactory_createParticle__P3194_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_createParticle__P3194, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  p___17602: undefined,
  angle___17606: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_toString__P2475(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2464_VT)) failedCast(r0);
    s.lastBrkId = 1328;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1328]) return breakpoint(s, 1, 1328, r0);
  case 1:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    s.tmp_4 = sprites_SpriteSet_length__P2467_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 525; s.pc = 2; return s.tmp_4;
  case 2:
    r0 = s.retval;
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, " sprites");
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_toString__P2475.info = {"start":2586,"length":66,"line":97,"column":8,"endLine":99,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"toString","argumentNames":["this"]}

function sprites_SpriteSet_toString__P2475_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_toString__P2475, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function sprites_SpriteSet_length__P2467(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2464_VT)) failedCast(r0);
    s.lastBrkId = 1315;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1315]) return breakpoint(s, 1, 1315, r0);
  case 1:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__length(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_SpriteSet_length__P2467.info = {"start":625,"length":65,"line":26,"column":8,"endLine":28,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"length","argumentNames":["this"]}
sprites_SpriteSet_length__P2467.isGetter = true;

function sprites_SpriteSet_length__P2467_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_length__P2467, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_ParticleSource___draw__P3158(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.current___17649 = undefined;
    s.left___17652 = undefined;
    s.top___17662 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3152_VT)) failedCast(r0);
    s.lastBrkId = 2330;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2330]) return breakpoint(s, 9, 2330, r0);
  case 9:
    r0 = s.arg0.fields["head"];
    s.current___17649 = (r0);
    s.lastBrkId = 2331;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2331]) return breakpoint(s, 10, 2331, r0);
  case 10:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = s.arg1.fields["drawOffsetX"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1158; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.left___17652 = (s.tmp_3);
    s.lastBrkId = 2332;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2332]) return breakpoint(s, 12, 2332, r0);
  case 12:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = 0;
    { step = 4; continue; }
  case 3:
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = s.arg1.fields["drawOffsetY"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1159; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.top___17662 = (s.tmp_3);
    s.lastBrkId = 2333;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2333]) return breakpoint(s, 14, 2333, r0);
  case 14:
  case 5:
    s.lastBrkId = 2334;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2334]) return breakpoint(s, 15, 2334, r0);
  case 15:
    r0 = pxsim_numops_toBoolDecr(s.current___17649);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 2335;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2335]) return breakpoint(s, 16, 2335, r0);
  case 16:
    r0 = s.current___17649.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 2336;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2336]) return breakpoint(s, 17, 2336, r0);
  case 17:
    s.tmp_2 = particles_ParticleSource_drawParticle__P5480_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.current___17649;
    s.tmp_2.arg2 = s.left___17652;
    s.tmp_2.arg3 = s.top___17662;
    s.callLocIdx = 1160; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
  case 6:
  case 7:
    s.lastBrkId = 2337;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2337]) return breakpoint(s, 19, 2337, r0);
  case 19:
    r0 = s.current___17649.fields["next"];
    s.current___17649 = (r0);
    { step = 5; continue; }
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource___draw__P3158.info = {"start":3216,"length":468,"line":112,"column":8,"endLine":122,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"__draw","argumentNames":["this","camera"]}

function particles_ParticleSource___draw__P3158_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource___draw__P3158, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  current___17649: undefined,
  left___17652: undefined,
  top___17662: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_drawParticle__P5480(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C3152_VT)) failedCast(r0);
    s.lastBrkId = 2409;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2409]) return breakpoint(s, 1, 2409, r0);
  case 1:
    s.tmp_0 = particles_ParticleFactory__C3188_v1_4_mk(s);
    r0 = s.arg0.fields["_factory"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_1 = Fx_sub__P159_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg2;
    s.callLocIdx = 1182; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_2 = Fx_sub__P159_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg3;
    s.callLocIdx = 1183; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    if (!checkSubtype(s.tmp_0.arg0, particles_ParticleFactory__C3188_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.drawParticle;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_drawParticle__P5480.info = {"start":8615,"length":174,"line":287,"column":8,"endLine":289,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"drawParticle","argumentNames":["this","p","screenLeft","screenTop"]}

function particles_ParticleSource_drawParticle__P5480_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_drawParticle__P5480, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_ParticleFactory_drawParticle__P3191(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleFactory__C3188_VT)) failedCast(r0);
    s.lastBrkId = 2480;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2480]) return breakpoint(s, 1, 2480, r0);
  case 1:
    s.tmp_0 = r0 = globals.screen___2033;
    s.tmp_2 = Fx_toInt__P172_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1219; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_toInt__P172_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.callLocIdx = 1220; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_3, 1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleFactory_drawParticle__P3191.info = {"start":2265,"length":118,"line":85,"column":8,"endLine":87,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","particle","x","y"]}

function particles_ParticleFactory_drawParticle__P3191_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleFactory_drawParticle__P3191, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function sprites_SpriteMap_toString__P2455(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2447_VT)) failedCast(r0);
    s.lastBrkId = 1313;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1313]) return breakpoint(s, 1, 1313, r0);
  case 1:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_3 = r0;
    r0 = s.arg0.fields["buckets"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__length(s.tmp_6);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, " buckets, ");
    s.tmp_1 = r0;
    s.tmp_10 = helpers_arrayFilter__P110_mk(s);
    r0 = s.arg0.fields["buckets"];
    s.tmp_10.arg0 = r0;
    s.tmp_10.arg1 = length_inline__P17725;
    s.callLocIdx = 522; s.pc = 3; return s.tmp_10;
  case 3:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_Array__length(s.tmp_9);
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_7);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, " filled");
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_toString__P2455.info = {"start":4109,"length":123,"line":112,"column":8,"endLine":114,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"toString","argumentNames":["this"]}

function sprites_SpriteMap_toString__P2455_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_toString__P2455, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  arg0: undefined,
} }





function length_inline__P17725(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
length_inline__P17725.info = {"start":4196,"length":8,"line":113,"column":74,"endLine":113,"endColumn":82,"fileName":"pxt_modules/game/spritemap.ts","functionName":"inline","argumentNames":["b"]}

function length_inline__P17725_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: length_inline__P17725, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_moveSprite__P2542(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tm___19344 = undefined;
    s.maxDist___19352 = undefined;
    s.ms___19372 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2528_VT)) failedCast(r0);
    s.lastBrkId = 1615;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1615]) return breakpoint(s, 13, 1615, r0);
  case 13:
    r0 = s.arg1.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastX"] = (s.tmp_0);
    s.lastBrkId = 1616;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1616]) return breakpoint(s, 14, 1616, r0);
  case 14:
    r0 = s.arg1.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastY"] = (s.tmp_0);
    s.lastBrkId = 1617;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1617]) return breakpoint(s, 15, 1617, r0);
  case 15:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 757; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 1618;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1618]) return breakpoint(s, 17, 1618, r0);
  case 17:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg3;
    s.callLocIdx = 758; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    s.lastBrkId = 1619;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1619]) return breakpoint(s, 19, 1619, r0);
  case 19:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 759; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tm___19344 = (r0);
    s.lastBrkId = 1620;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1620]) return breakpoint(s, 21, 1620, r0);
  case 21:
    s.tmp_0 = r0 = s.tm___19344;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = tiles_TileMap_enabled__P2748_mk(s);
    s.tmp_1.arg0 = s.tm___19344;
    s.callLocIdx = 760; s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1621;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1621]) return breakpoint(s, 23, 1621, r0);
  case 23:
    s.tmp_3 = Fx_toInt__P172_mk(s);
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 761; s.pc = 24; return s.tmp_3;
  case 24:
    r0 = s.retval;
    s.maxDist___19352 = (r0);
    s.lastBrkId = 1622;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1622]) return breakpoint(s, 25, 1622, r0);
  case 25:
    s.tmp_2 = Math_abs__P128_mk(s);
    s.tmp_3 = Fx_toInt__P172_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.callLocIdx = 762; s.pc = 27; return s.tmp_3;
  case 27:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 763; s.pc = 26; return s.tmp_2;
  case 26:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.maxDist___19352);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    s.tmp_5 = Math_abs__P128_mk(s);
    s.tmp_6 = Fx_toInt__P172_mk(s);
    s.tmp_6.arg0 = s.arg3;
    s.callLocIdx = 764; s.pc = 29; return s.tmp_6;
  case 29:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 765; s.pc = 28; return s.tmp_5;
  case 28:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 <= s.maxDist___19352);
  case 4:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1623;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1623]) return breakpoint(s, 30, 1623, r0);
  case 30:
    r0 = pxsim_pxtcore_mkClassInstance(MovingSprite__C2526_VT);
    s.tmp_8 = r0;
    s.tmp_9 = MovingSprite_constructor__P2527_mk(s);
    s.tmp_9.arg0 = s.tmp_8;
    s.tmp_9.arg1 = s.arg1;
    r0 = s.arg1.fields["_vx"];
    s.tmp_9.arg2 = r0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_9.arg3 = r0;
    s.tmp_9.arg4 = s.arg2;
    s.tmp_9.arg5 = s.arg3;
    s.tmp_9.arg6 = s.arg2;
    s.tmp_9.arg7 = s.arg3;
    s.callLocIdx = 766; s.pc = 31; return s.tmp_9;
  case 31:
    r0 = s.retval;
    s.ms___19372 = (s.tmp_8);
    s.lastBrkId = 1624;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1624]) return breakpoint(s, 32, 1624, r0);
  case 32:
    s.tmp_0 = ArcadePhysicsEngine_tilemapCollisions__P4993_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.ms___19372;
    s.tmp_0.arg2 = s.tm___19344;
    s.callLocIdx = 767; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
    { step = 10; continue; }
  case 5:
    s.lastBrkId = 1625;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1625]) return breakpoint(s, 34, 1625, r0);
  case 34:
    s.tmp_1 = tiles_TileMap_isOnWall__P2759_mk(s);
    s.tmp_1.arg0 = s.tm___19344;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 768; s.pc = 35; return s.tmp_1;
  case 35:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    s.tmp_4 = ArcadePhysicsEngine_canResolveClipping__P4995_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = s.arg1;
    s.tmp_4.arg2 = s.tm___19344;
    s.callLocIdx = 769; s.pc = 36; return s.tmp_4;
  case 36:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 7:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 1626;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1626]) return breakpoint(s, 37, 1626, r0);
  case 37:
    s.tmp_6 = r0 = s.arg1;
    r0 = s.tmp_6.fields["flags"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 | 256);
    s.tmp_7 = r0;
    r0 = (s.tmp_6).fields["flags"] = (s.tmp_7);
    { step = 9; continue; }
  case 8:
    s.lastBrkId = 1627;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1627]) return breakpoint(s, 38, 1627, r0);
  case 38:
    s.tmp_0 = r0 = s.arg1;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & -257);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 9:
  case 10:
  case 11:
  case 12:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_moveSprite__P2542.info = {"start":23898,"length":1208,"line":654,"column":4,"endLine":685,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"moveSprite","argumentNames":["this","s","dx","dy"]}

function ArcadePhysicsEngine_moveSprite__P2542_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_moveSprite__P2542, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tm___19344: undefined,
  maxDist___19352: undefined,
  ms___19372: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function ArcadePhysicsEngine_canResolveClipping__P4995(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.hbox___19417 = undefined;
    s.sz___19420 = undefined;
    s.maxMove___19425 = undefined;
    s.origY___19427 = undefined;
    s.origX___19430 = undefined;
    s.l___19433 = undefined;
    s.r___19438 = undefined;
    s.t___19443 = undefined;
    s.b___19448 = undefined;
    s.offset___19453 = undefined;
    s.offset___19478 = undefined;
    s.offset___19509 = undefined;
    s.offset___19534 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2528_VT)) failedCast(r0);
    s.lastBrkId = 1628;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1628]) return breakpoint(s, 20, 1628, r0);
  case 20:
    s.tmp_3 = Sprite_isStatic__P2396_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.callLocIdx = 770; s.pc = 21; return s.tmp_3;
  case 21:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1629;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1629]) return breakpoint(s, 22, 1629, r0);
  case 22:
    s.tmp_4 = Sprite__C2342_v4_1_mk(s);
    s.tmp_4.arg0 = s.arg1;
    if (!checkSubtype(s.tmp_4.arg0, Sprite__C2342_VT)) failedCast(s.tmp_4.arg0);
    s.tmp_4.fn = s.tmp_4.arg0.vtable.methods.setHitbox;
    s.pc = 23; return s.tmp_4;
  case 23:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 1630;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1630]) return breakpoint(s, 24, 1630, r0);
  case 24:
    r0 = s.arg1.fields["_hitbox"];
    s.hbox___19417 = (r0);
    s.lastBrkId = 1631;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1631]) return breakpoint(s, 25, 1631, r0);
  case 25:
    s.tmp_1 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.callLocIdx = 771; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (1 << s.tmp_0);
    s.sz___19420 = (r0);
    s.lastBrkId = 1632;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1632]) return breakpoint(s, 27, 1632, r0);
  case 27:
    s.tmp_0 = ArcadePhysicsEngine_maxStep__P2534_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 772; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    s.maxMove___19425 = (r0);
    s.lastBrkId = 1633;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1633]) return breakpoint(s, 29, 1633, r0);
  case 29:
    r0 = s.arg1.fields["_y"];
    s.origY___19427 = (r0);
    s.lastBrkId = 1634;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1634]) return breakpoint(s, 30, 1634, r0);
  case 30:
    r0 = s.arg1.fields["_x"];
    s.origX___19430 = (r0);
    s.lastBrkId = 1635;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1635]) return breakpoint(s, 31, 1635, r0);
  case 31:
    s.tmp_0 = Fx_toInt__P172_mk(s);
    s.tmp_1 = game_Hitbox_left__P2217_mk(s);
    s.tmp_1.arg0 = s.hbox___19417;
    s.callLocIdx = 773; s.pc = 33; return s.tmp_1;
  case 33:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 774; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.l___19433 = (r0);
    s.lastBrkId = 1636;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1636]) return breakpoint(s, 34, 1636, r0);
  case 34:
    s.tmp_0 = Fx_toInt__P172_mk(s);
    s.tmp_1 = game_Hitbox_right__P2219_mk(s);
    s.tmp_1.arg0 = s.hbox___19417;
    s.callLocIdx = 775; s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 776; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    s.r___19438 = (r0);
    s.lastBrkId = 1637;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1637]) return breakpoint(s, 37, 1637, r0);
  case 37:
    s.tmp_0 = Fx_toInt__P172_mk(s);
    s.tmp_1 = game_Hitbox_top__P2218_mk(s);
    s.tmp_1.arg0 = s.hbox___19417;
    s.callLocIdx = 777; s.pc = 39; return s.tmp_1;
  case 39:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 778; s.pc = 38; return s.tmp_0;
  case 38:
    r0 = s.retval;
    s.t___19443 = (r0);
    s.lastBrkId = 1638;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1638]) return breakpoint(s, 40, 1638, r0);
  case 40:
    s.tmp_0 = Fx_toInt__P172_mk(s);
    s.tmp_1 = game_Hitbox_bottom__P2220_mk(s);
    s.tmp_1.arg0 = s.hbox___19417;
    s.callLocIdx = 779; s.pc = 42; return s.tmp_1;
  case 42:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 780; s.pc = 41; return s.tmp_0;
  case 41:
    r0 = s.retval;
    s.b___19448 = (r0);
    s.lastBrkId = 1639;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1639]) return breakpoint(s, 43, 1639, r0);
  case 43:
    r0 = (s.b___19448 + 1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.sz___19420);
    s.offset___19453 = (r0);
    s.lastBrkId = 1640;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1640]) return breakpoint(s, 44, 1640, r0);
  case 44:
    r0 = (s.offset___19453 <= s.maxMove___19425);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1641;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1641]) return breakpoint(s, 45, 1641, r0);
  case 45:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_sub__P159_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx8__P149_mk(s);
    s.tmp_4.arg0 = s.offset___19453;
    s.callLocIdx = 781; s.pc = 47; return s.tmp_4;
  case 47:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 782; s.pc = 46; return s.tmp_3;
  case 46:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_y"] = (s.tmp_2);
    s.lastBrkId = 1642;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1642]) return breakpoint(s, 48, 1642, r0);
  case 48:
    s.tmp_3 = tiles_TileMap_isOnWall__P2759_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 783; s.pc = 49; return s.tmp_3;
  case 49:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1643;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1643]) return breakpoint(s, 50, 1643, r0);
  case 50:
    r0 = true;
    { step = 19; continue; }
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1644;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1644]) return breakpoint(s, 51, 1644, r0);
  case 51:
    r0 = (s.arg1).fields["_y"] = (s.origY___19427);
  case 4:
  case 5:
  case 6:
    s.lastBrkId = 1645;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1645]) return breakpoint(s, 52, 1645, r0);
  case 52:
    r0 = (s.t___19443 / s.sz___19420);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.floor(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.sz___19420);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.t___19443);
    s.offset___19478 = (r0);
    s.lastBrkId = 1646;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1646]) return breakpoint(s, 53, 1646, r0);
  case 53:
    r0 = (s.offset___19478 <= s.maxMove___19425);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1647;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1647]) return breakpoint(s, 54, 1647, r0);
  case 54:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_y"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx8__P149_mk(s);
    s.tmp_4.arg0 = s.offset___19478;
    s.callLocIdx = 784; s.pc = 56; return s.tmp_4;
  case 56:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 785; s.pc = 55; return s.tmp_3;
  case 55:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_y"] = (s.tmp_2);
    s.lastBrkId = 1648;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1648]) return breakpoint(s, 57, 1648, r0);
  case 57:
    s.tmp_3 = tiles_TileMap_isOnWall__P2759_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 786; s.pc = 58; return s.tmp_3;
  case 58:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1649;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1649]) return breakpoint(s, 59, 1649, r0);
  case 59:
    r0 = true;
    { step = 19; continue; }
    { step = 8; continue; }
  case 7:
    s.lastBrkId = 1650;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1650]) return breakpoint(s, 60, 1650, r0);
  case 60:
    r0 = (s.arg1).fields["_y"] = (s.origY___19427);
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 1651;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1651]) return breakpoint(s, 61, 1651, r0);
  case 61:
    r0 = (s.r___19438 + 1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.sz___19420);
    s.offset___19509 = (r0);
    s.lastBrkId = 1652;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1652]) return breakpoint(s, 62, 1652, r0);
  case 62:
    r0 = (s.offset___19509 <= s.maxMove___19425);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1653;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1653]) return breakpoint(s, 63, 1653, r0);
  case 63:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_sub__P159_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx8__P149_mk(s);
    s.tmp_4.arg0 = s.offset___19509;
    s.callLocIdx = 787; s.pc = 65; return s.tmp_4;
  case 65:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 788; s.pc = 64; return s.tmp_3;
  case 64:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_x"] = (s.tmp_2);
    s.lastBrkId = 1654;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1654]) return breakpoint(s, 66, 1654, r0);
  case 66:
    s.tmp_3 = tiles_TileMap_isOnWall__P2759_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 789; s.pc = 67; return s.tmp_3;
  case 67:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1655;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1655]) return breakpoint(s, 68, 1655, r0);
  case 68:
    r0 = true;
    { step = 19; continue; }
    { step = 12; continue; }
  case 11:
    s.lastBrkId = 1656;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1656]) return breakpoint(s, 69, 1656, r0);
  case 69:
    r0 = (s.arg1).fields["_x"] = (s.origX___19430);
  case 12:
  case 13:
  case 14:
    s.lastBrkId = 1657;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1657]) return breakpoint(s, 70, 1657, r0);
  case 70:
    r0 = (s.l___19433 / s.sz___19420);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.floor(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.sz___19420);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.l___19433);
    s.offset___19534 = (r0);
    s.lastBrkId = 1658;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1658]) return breakpoint(s, 71, 1658, r0);
  case 71:
    r0 = (s.offset___19534 <= s.maxMove___19425);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    s.lastBrkId = 1659;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1659]) return breakpoint(s, 72, 1659, r0);
  case 72:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_x"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx8__P149_mk(s);
    s.tmp_4.arg0 = s.offset___19534;
    s.callLocIdx = 790; s.pc = 74; return s.tmp_4;
  case 74:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 791; s.pc = 73; return s.tmp_3;
  case 73:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_x"] = (s.tmp_2);
    s.lastBrkId = 1660;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1660]) return breakpoint(s, 75, 1660, r0);
  case 75:
    s.tmp_3 = tiles_TileMap_isOnWall__P2759_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 792; s.pc = 76; return s.tmp_3;
  case 76:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1661;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1661]) return breakpoint(s, 77, 1661, r0);
  case 77:
    r0 = true;
    { step = 19; continue; }
    { step = 16; continue; }
  case 15:
    s.lastBrkId = 1662;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1662]) return breakpoint(s, 78, 1662, r0);
  case 78:
    r0 = (s.arg1).fields["_x"] = (s.origX___19430);
  case 16:
  case 17:
  case 18:
    s.lastBrkId = 1663;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1663]) return breakpoint(s, 79, 1663, r0);
  case 79:
    r0 = false;
  case 19:
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_canResolveClipping__P4995.info = {"start":25202,"length":2135,"line":688,"column":4,"endLine":759,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"canResolveClipping","argumentNames":["this","s","tm"]}

function ArcadePhysicsEngine_canResolveClipping__P4995_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_canResolveClipping__P4995, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  hbox___19417: undefined,
  sz___19420: undefined,
  maxMove___19425: undefined,
  origY___19427: undefined,
  origX___19430: undefined,
  l___19433: undefined,
  r___19438: undefined,
  t___19443: undefined,
  b___19448: undefined,
  offset___19453: undefined,
  offset___19478: undefined,
  offset___19509: undefined,
  offset___19534: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_isStatic__P2396(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1109;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1109]) return breakpoint(s, 1, 1109, r0);
  case 1:
    r0 = s.arg0.fields["_image"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.isStatic(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
Sprite_isStatic__P2396.info = {"start":9841,"length":57,"line":355,"column":4,"endLine":357,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"isStatic","argumentNames":["this"]}

function Sprite_isStatic__P2396_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_isStatic__P2396, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_Hitbox_bottom__P2220(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C2209_VT)) failedCast(r0);
    s.lastBrkId = 979;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[979]) return breakpoint(s, 1, 979, r0);
  case 1:
    s.tmp_0 = Fx_sub__P159_mk(s);
    s.tmp_1 = Fx_add__P157_mk(s);
    r0 = s.arg0.fields["height"];
    s.tmp_1.arg0 = r0;
    s.tmp_2 = game_Hitbox_top__P2218_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 233; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 234; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 256;
    s.callLocIdx = 235; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_bottom__P2220.info = {"start":786,"length":139,"line":33,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"bottom","argumentNames":["this"]}
game_Hitbox_bottom__P2220.isGetter = true;

function game_Hitbox_bottom__P2220_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_bottom__P2220, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function game_Hitbox_right__P2219(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C2209_VT)) failedCast(r0);
    s.lastBrkId = 978;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[978]) return breakpoint(s, 1, 978, r0);
  case 1:
    s.tmp_0 = Fx_sub__P159_mk(s);
    s.tmp_1 = Fx_add__P157_mk(s);
    r0 = s.arg0.fields["width"];
    s.tmp_1.arg0 = r0;
    s.tmp_2 = game_Hitbox_left__P2217_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 230; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 231; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 256;
    s.callLocIdx = 232; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_right__P2219.info = {"start":638,"length":138,"line":26,"column":8,"endLine":31,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"right","argumentNames":["this"]}
game_Hitbox_right__P2219.isGetter = true;

function game_Hitbox_right__P2219_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_right__P2219, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function game_Hitbox_top__P2218(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C2209_VT)) failedCast(r0);
    s.lastBrkId = 977;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[977]) return breakpoint(s, 1, 977, r0);
  case 1:
    s.tmp_0 = Fx_add__P157_mk(s);
    r0 = s.arg0.fields["oy"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["parent"];
    r0 = r0.fields["_y"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 229; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_top__P2218.info = {"start":555,"length":73,"line":22,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"top","argumentNames":["this"]}
game_Hitbox_top__P2218.isGetter = true;

function game_Hitbox_top__P2218_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_top__P2218, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_Hitbox_left__P2217(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C2209_VT)) failedCast(r0);
    s.lastBrkId = 976;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[976]) return breakpoint(s, 1, 976, r0);
  case 1:
    s.tmp_0 = Fx_add__P157_mk(s);
    r0 = s.arg0.fields["ox"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["parent"];
    r0 = r0.fields["_x"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 228; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_left__P2217.info = {"start":471,"length":74,"line":18,"column":8,"endLine":20,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"left","argumentNames":["this"]}
game_Hitbox_left__P2217.isGetter = true;

function game_Hitbox_left__P2217_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_left__P2217, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_tilemapCollisions__P4993(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___19678 = undefined;
    s.hbox___19703 = undefined;
    s.tileScale___19706 = undefined;
    s.tileSize___19709 = undefined;
    s.xDiff___19713 = undefined;
    s.yDiff___19720 = undefined;
    s.right___19736 = undefined;
    s.x0___19740 = undefined;
    s.collidedTiles___19755 = undefined;
    s.y___19757 = undefined;
    s.y0___19771 = undefined;
    s.obstacle___19787 = undefined;
    s.collisionDirection___19814 = undefined;
    s.tile___19840 = undefined;
    s.unnamed1324___U14 = undefined;
    s.unnamed1325___U15 = undefined;
    s.down___19931 = undefined;
    s.y0___19935 = undefined;
    s.collidedTiles___19950 = undefined;
    s.x___19952 = undefined;
    s.x0___19962 = undefined;
    s.obstacle___19976 = undefined;
    s.collisionDirection___20003 = undefined;
    s.tile___20029 = undefined;
    s.unnamed1326___U24 = undefined;
    s.unnamed1327___U25 = undefined;
    s.overlappedTiles___20123 = undefined;
    s.x___20125 = undefined;
    s.x0___20135 = undefined;
    s.y___20145 = undefined;
    s.y0___20155 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2528_VT)) failedCast(r0);
    s.lastBrkId = 1511;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1511]) return breakpoint(s, 97, 1511, r0);
  case 97:
    r0 = s.arg1.fields["sprite"];
    s.s___19678 = (r0);
    s.lastBrkId = 1512;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1512]) return breakpoint(s, 98, 1512, r0);
  case 98:
    r0 = s.s___19678.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 256);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1513;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1513]) return breakpoint(s, 99, 1513, r0);
  case 99:
    s.tmp_5 = tiles_TileMap_isOnWall__P2759_mk(s);
    s.tmp_5.arg0 = s.arg2;
    s.tmp_5.arg1 = s.s___19678;
    s.callLocIdx = 655; s.pc = 100; return s.tmp_5;
  case 100:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1514;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1514]) return breakpoint(s, 101, 1514, r0);
  case 101:
    s.tmp_6 = r0 = s.s___19678;
    r0 = s.tmp_6.fields["flags"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 & -257);
    s.tmp_7 = r0;
    r0 = (s.tmp_6).fields["flags"] = (s.tmp_7);
  case 1:
  case 2:
  case 3:
  case 4:
    s.lastBrkId = 1515;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1515]) return breakpoint(s, 102, 1515, r0);
  case 102:
    s.tmp_3 = Sprite_isStatic__P2396_mk(s);
    s.tmp_3.arg0 = s.s___19678;
    s.callLocIdx = 656; s.pc = 103; return s.tmp_3;
  case 103:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1516;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1516]) return breakpoint(s, 104, 1516, r0);
  case 104:
    s.tmp_4 = Sprite__C2342_v4_1_mk(s);
    s.tmp_4.arg0 = s.s___19678;
    if (!checkSubtype(s.tmp_4.arg0, Sprite__C2342_VT)) failedCast(s.tmp_4.arg0);
    s.tmp_4.fn = s.tmp_4.arg0.vtable.methods.setHitbox;
    s.pc = 105; return s.tmp_4;
  case 105:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 1517;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1517]) return breakpoint(s, 106, 1517, r0);
  case 106:
    r0 = s.s___19678.fields["_hitbox"];
    s.hbox___19703 = (r0);
    s.lastBrkId = 1518;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1518]) return breakpoint(s, 107, 1518, r0);
  case 107:
    s.tmp_0 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_0.arg0 = s.arg2;
    s.callLocIdx = 657; s.pc = 108; return s.tmp_0;
  case 108:
    r0 = s.retval;
    s.tileScale___19706 = (r0);
    s.lastBrkId = 1519;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1519]) return breakpoint(s, 109, 1519, r0);
  case 109:
    r0 = (1 << s.tileScale___19706);
    s.tileSize___19709 = (r0);
    s.lastBrkId = 1520;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1520]) return breakpoint(s, 110, 1520, r0);
  case 110:
    s.tmp_0 = Fx_sub__P159_mk(s);
    r0 = s.s___19678.fields["_x"];
    s.tmp_0.arg0 = r0;
    r0 = s.s___19678.fields["_lastX"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 658; s.pc = 111; return s.tmp_0;
  case 111:
    r0 = s.retval;
    s.xDiff___19713 = (r0);
    s.lastBrkId = 1521;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1521]) return breakpoint(s, 112, 1521, r0);
  case 112:
    s.tmp_0 = Fx_sub__P159_mk(s);
    r0 = s.s___19678.fields["_y"];
    s.tmp_0.arg0 = r0;
    r0 = s.s___19678.fields["_lastY"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 659; s.pc = 113; return s.tmp_0;
  case 113:
    r0 = s.retval;
    s.yDiff___19720 = (r0);
    s.lastBrkId = 1522;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1522]) return breakpoint(s, 114, 1522, r0);
  case 114:
    r0 = s.s___19678.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 2818);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 83; continue; }
    s.lastBrkId = 1523;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1523]) return breakpoint(s, 115, 1523, r0);
  case 115:
    r0 = (s.xDiff___19713 !== 0);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 43; continue; }
    s.lastBrkId = 1524;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1524]) return breakpoint(s, 116, 1524, r0);
  case 116:
    r0 = (s.xDiff___19713 > 0);
    s.right___19736 = (r0);
    s.lastBrkId = 1525;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1525]) return breakpoint(s, 117, 1525, r0);
  case 117:
    r0 = pxsim_numops_toBoolDecr(s.right___19736);
    if (!r0) { step = 7; continue; }
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_1 = game_Hitbox_right__P2219_mk(s);
    s.tmp_1.arg0 = s.hbox___19703;
    s.callLocIdx = 660; s.pc = 119; return s.tmp_1;
  case 119:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 256;
    s.callLocIdx = 661; s.pc = 118; return s.tmp_0;
  case 118:
    r0 = s.retval;
    { step = 8; continue; }
  case 7:
    s.tmp_2 = Fx_sub__P159_mk(s);
    s.tmp_3 = game_Hitbox_left__P2217_mk(s);
    s.tmp_3.arg0 = s.hbox___19703;
    s.callLocIdx = 662; s.pc = 121; return s.tmp_3;
  case 121:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 256;
    s.callLocIdx = 663; s.pc = 120; return s.tmp_2;
  case 120:
    r0 = s.retval;
  case 8:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = Fx_toIntShifted__P156_mk(s);
    s.tmp_6 = Fx_add__P157_mk(s);
    s.tmp_6.arg0 = s.tmp_4;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 664; s.pc = 123; return s.tmp_6;
  case 123:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___19706;
    s.callLocIdx = 665; s.pc = 122; return s.tmp_5;
  case 122:
    r0 = s.retval;
    s.x0___19740 = (r0);
    s.lastBrkId = 1526;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1526]) return breakpoint(s, 124, 1526, r0);
  case 124:
    r0 = pxsim_Array__mk();
    s.collidedTiles___19755 = (r0);
    s.lastBrkId = 1527;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1527]) return breakpoint(s, 125, 1527, r0);
  case 125:
    s.tmp_0 = Fx_sub__P159_mk(s);
    s.tmp_1 = game_Hitbox_top__P2218_mk(s);
    s.tmp_1.arg0 = s.hbox___19703;
    s.callLocIdx = 666; s.pc = 127; return s.tmp_1;
  case 127:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.yDiff___19720;
    s.callLocIdx = 667; s.pc = 126; return s.tmp_0;
  case 126:
    r0 = s.retval;
    s.y___19757 = (r0);
    s.lastBrkId = 1528;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1528]) return breakpoint(s, 128, 1528, r0);
  case 128:
  case 9:
    s.lastBrkId = 1529;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1529]) return breakpoint(s, 129, 1529, r0);
  case 129:
    s.tmp_1 = r0 = s.y___19757;
    s.tmp_3 = Fx_iadd__P158_mk(s);
    s.tmp_3.arg0 = s.tileSize___19709;
    s.tmp_4 = Fx_sub__P159_mk(s);
    s.tmp_5 = game_Hitbox_bottom__P2220_mk(s);
    s.tmp_5.arg0 = s.hbox___19703;
    s.callLocIdx = 668; s.pc = 132; return s.tmp_5;
  case 132:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.yDiff___19720;
    s.callLocIdx = 669; s.pc = 131; return s.tmp_4;
  case 131:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 670; s.pc = 130; return s.tmp_3;
  case 130:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 1530;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1530]) return breakpoint(s, 133, 1530, r0);
  case 133:
    s.tmp_6 = Fx_toIntShifted__P156_mk(s);
    s.tmp_7 = Fx_add__P157_mk(s);
    s.tmp_8 = Fx_min__P166_mk(s);
    s.tmp_8.arg0 = s.y___19757;
    s.tmp_9 = Fx_sub__P159_mk(s);
    s.tmp_10 = game_Hitbox_bottom__P2220_mk(s);
    s.tmp_10.arg0 = s.hbox___19703;
    s.callLocIdx = 671; s.pc = 138; return s.tmp_10;
  case 138:
    r0 = s.retval;
    s.tmp_9.arg0 = r0;
    s.tmp_9.arg1 = s.yDiff___19720;
    s.callLocIdx = 672; s.pc = 137; return s.tmp_9;
  case 137:
    r0 = s.retval;
    s.tmp_8.arg1 = r0;
    s.callLocIdx = 673; s.pc = 136; return s.tmp_8;
  case 136:
    r0 = s.retval;
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = 128;
    s.callLocIdx = 674; s.pc = 135; return s.tmp_7;
  case 135:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.tileScale___19706;
    s.callLocIdx = 675; s.pc = 134; return s.tmp_6;
  case 134:
    r0 = s.retval;
    s.y0___19771 = (r0);
    s.lastBrkId = 1531;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1531]) return breakpoint(s, 139, 1531, r0);
  case 139:
    s.tmp_1 = tiles_TileMap_isObstacle__P2757_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.tmp_1.arg1 = s.x0___19740;
    s.tmp_1.arg2 = s.y0___19771;
    s.callLocIdx = 676; s.pc = 140; return s.tmp_1;
  case 140:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 1532;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1532]) return breakpoint(s, 141, 1532, r0);
  case 141:
    s.tmp_2 = tiles_TileMap_getObstacle__P2758_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.tmp_2.arg1 = s.x0___19740;
    s.tmp_2.arg2 = s.y0___19771;
    s.callLocIdx = 677; s.pc = 142; return s.tmp_2;
  case 142:
    r0 = s.retval;
    s.obstacle___19787 = (r0);
    s.lastBrkId = 1533;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1533]) return breakpoint(s, 143, 1533, r0);
  case 143:
    r0 = pxsim_pxtcore_mkAction(1, ArcadePhysicsEngine_tilemapCollisions_inline__P19795);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.obstacle___19787);
    s.tmp_4 = helpers_arraySome__P107_mk(s);
    s.tmp_4.arg0 = s.collidedTiles___19755;
    s.tmp_4.arg1 = s.tmp_0;
    s.callLocIdx = 678; s.pc = 144; return s.tmp_4;
  case 144:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 1534;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1534]) return breakpoint(s, 145, 1534, r0);
  case 145:
    r0 = pxsim_Array__push(s.collidedTiles___19755, s.obstacle___19787);
  case 10:
  case 11:
  case 12:
  case 13:
    s.lastBrkId = 1535;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1535]) return breakpoint(s, 146, 1535, r0);
  case 146:
    s.tmp_0 = Fx_iadd__P158_mk(s);
    s.tmp_0.arg0 = s.tileSize___19709;
    s.tmp_0.arg1 = s.y___19757;
    s.callLocIdx = 679; s.pc = 147; return s.tmp_0;
  case 147:
    r0 = s.retval;
    s.y___19757 = (r0);
    { step = 9; continue; }
  case 14:
    s.lastBrkId = 1536;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1536]) return breakpoint(s, 148, 1536, r0);
  case 148:
    r0 = pxsim_Array__length(s.collidedTiles___19755);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 41; continue; }
    s.lastBrkId = 1537;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1537]) return breakpoint(s, 149, 1537, r0);
  case 149:
    r0 = pxsim_numops_toBoolDecr(s.right___19736);
    if (!r0) { step = 15; continue; }
    r0 = 2;
    { step = 16; continue; }
  case 15:
    r0 = 0;
  case 16:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.collisionDirection___19814 = (s.tmp_1);
    s.lastBrkId = 1538;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1538]) return breakpoint(s, 150, 1538, r0);
  case 150:
    r0 = pxsim_numops_toBoolDecr(s.right___19736);
    if (!r0) { step = 17; continue; }
    s.tmp_0 = Fx_sub__P159_mk(s);
    s.tmp_1 = Fx8__P149_mk(s);
    r0 = (s.x0___19740 << s.tileScale___19706);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 680; s.pc = 152; return s.tmp_1;
  case 152:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.hbox___19703.fields["width"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 681; s.pc = 151; return s.tmp_0;
  case 151:
    r0 = s.retval;
    { step = 18; continue; }
  case 17:
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = (s.x0___19740 + 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 << s.tileScale___19706);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 682; s.pc = 153; return s.tmp_2;
  case 153:
    r0 = s.retval;
  case 18:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = r0 = s.s___19678;
    s.tmp_7 = Fx_sub__P159_mk(s);
    s.tmp_7.arg0 = s.tmp_4;
    r0 = s.hbox___19703.fields["ox"];
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 683; s.pc = 154; return s.tmp_7;
  case 154:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5).fields["_x"] = (s.tmp_6);
    s.lastBrkId = 1539;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1539]) return breakpoint(s, 155, 1539, r0);
  case 155:
    s.tile___19840 = (undefined);
    s.unnamed1324___U14 = (s.collidedTiles___19755);
    s.unnamed1325___U15 = (0);
    s.lastBrkId = 1540;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1540]) return breakpoint(s, 156, 1540, r0);
  case 156:
  case 19:
    s.tmp_0 = r0 = s.unnamed1325___U15;
    r0 = pxsim_Array__length(s.unnamed1324___U14);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 22; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1324___U14, s.unnamed1325___U15);
    s.tile___19840 = (r0);
    s.lastBrkId = 1541;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1541]) return breakpoint(s, 157, 1541, r0);
  case 157:
    s.lastBrkId = 1542;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1542]) return breakpoint(s, 158, 1542, r0);
  case 158:
    r0 = s.s___19678.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 2818);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 1543;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1543]) return breakpoint(s, 159, 1543, r0);
  case 159:
    s.tmp_6 = Sprite_registerObstacle__P2427_mk(s);
    s.tmp_6.arg0 = s.s___19678;
    s.tmp_6.arg1 = s.collisionDirection___19814;
    s.tmp_6.arg2 = s.tile___19840;
    s.tmp_6.arg3 = s.arg2;
    s.callLocIdx = 684; s.pc = 160; return s.tmp_6;
  case 160:
    r0 = s.retval;
  case 20:
  case 21:
    r0 = (s.unnamed1325___U15 + 1);
    s.unnamed1325___U15 = (r0);
    { step = 19; continue; }
  case 22:
    s.unnamed1324___U14 = (undefined);
    s.lastBrkId = 1544;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1544]) return breakpoint(s, 161, 1544, r0);
  case 161:
    r0 = s.s___19678.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 16);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 23; continue; }
    s.lastBrkId = 1545;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1545]) return breakpoint(s, 162, 1545, r0);
  case 162:
    s.tmp_2 = Sprite_destroy__P2429_mk(s);
    s.tmp_2.arg0 = s.s___19678;
    s.tmp_2.arg1 = undefined;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 685; s.pc = 163; return s.tmp_2;
  case 163:
    r0 = s.retval;
    { step = 40; continue; }
  case 23:
    s.lastBrkId = 1546;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1546]) return breakpoint(s, 164, 1546, r0);
  case 164:
    r0 = s.s___19678.fields["_vx"];
    s.tmp_1 = r0;
    r0 = s.arg1.fields["cachedVx"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 24; continue; }
    r0 = s.tmp_0;
    { step = 25; continue; }
  case 24:
    r0 = s.s___19678.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 2818);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 25:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 36; continue; }
    s.lastBrkId = 1547;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1547]) return breakpoint(s, 165, 1547, r0);
  case 165:
    r0 = s.s___19678.fields["flags"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 & 32);
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 34; continue; }
    s.lastBrkId = 1548;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1548]) return breakpoint(s, 166, 1548, r0);
  case 166:
    r0 = pxsim_numops_toBoolDecr(s.right___19736);
    s.tmp_10 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_10);
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBool(s.tmp_9);
    if (r0) { step = 26; continue; }
    r0 = s.tmp_9;
    { step = 27; continue; }
  case 26:
    s.tmp_12 = Sprite_vx__P2359_mk(s);
    s.tmp_12.arg0 = s.s___19678;
    s.callLocIdx = 686; s.pc = 167; return s.tmp_12;
  case 167:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_11 < 0);
  case 27:
    // jmp value (already in r0)
    s.tmp_13 = r0;
    r0 = pxsim_numops_toBool(s.tmp_13);
    if (!r0) { step = 28; continue; }
    r0 = s.tmp_13;
    { step = 31; continue; }
  case 28:
    s.tmp_14 = r0 = s.right___19736;
    r0 = pxsim_numops_toBool(s.tmp_14);
    if (r0) { step = 29; continue; }
    r0 = s.tmp_14;
    { step = 30; continue; }
  case 29:
    s.tmp_16 = Sprite_vx__P2359_mk(s);
    s.tmp_16.arg0 = s.s___19678;
    s.callLocIdx = 687; s.pc = 168; return s.tmp_16;
  case 168:
    r0 = s.retval;
    s.tmp_15 = r0;
    r0 = (s.tmp_15 > 0);
  case 30:
    // jmp value (already in r0)
    s.tmp_17 = r0;
    r0 = s.tmp_17;
  case 31:
    // jmp value (already in r0)
    s.tmp_18 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_18);
    if (!r0) { step = 32; continue; }
    s.lastBrkId = 1549;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1549]) return breakpoint(s, 169, 1549, r0);
  case 169:
    s.tmp_19 = r0 = s.s___19678;
    s.tmp_21 = Fx_neg__P155_mk(s);
    r0 = s.s___19678.fields["_vx"];
    s.tmp_21.arg0 = r0;
    s.callLocIdx = 688; s.pc = 170; return s.tmp_21;
  case 170:
    r0 = s.retval;
    s.tmp_20 = r0;
    r0 = (s.tmp_19).fields["_vx"] = (s.tmp_20);
    s.lastBrkId = 1550;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1550]) return breakpoint(s, 171, 1550, r0);
  case 171:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_neg__P155_mk(s);
    r0 = s.arg1.fields["xStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 689; s.pc = 172; return s.tmp_2;
  case 172:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["xStep"] = (s.tmp_1);
    s.lastBrkId = 1551;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1551]) return breakpoint(s, 173, 1551, r0);
  case 173:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_neg__P155_mk(s);
    r0 = s.arg1.fields["dx"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 690; s.pc = 174; return s.tmp_2;
  case 174:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dx"] = (s.tmp_1);
  case 32:
  case 33:
    { step = 35; continue; }
  case 34:
    s.lastBrkId = 1552;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1552]) return breakpoint(s, 175, 1552, r0);
  case 175:
    r0 = (s.arg1).fields["dx"] = (0);
    s.lastBrkId = 1553;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1553]) return breakpoint(s, 176, 1553, r0);
  case 176:
    r0 = (s.s___19678).fields["_vx"] = (0);
  case 35:
    { step = 39; continue; }
  case 36:
    s.lastBrkId = 1554;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1554]) return breakpoint(s, 177, 1554, r0);
  case 177:
    s.tmp_2 = Math_sign__P129_mk(s);
    s.tmp_3 = Fx_toInt__P172_mk(s);
    r0 = s.s___19678.fields["_vx"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 691; s.pc = 179; return s.tmp_3;
  case 179:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 692; s.pc = 178; return s.tmp_2;
  case 178:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_5 = Math_sign__P129_mk(s);
    s.tmp_6 = Fx_toInt__P172_mk(s);
    r0 = s.arg1.fields["cachedVx"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 693; s.pc = 181; return s.tmp_6;
  case 181:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 694; s.pc = 180; return s.tmp_5;
  case 180:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_1 === s.tmp_4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 37; continue; }
    s.lastBrkId = 1555;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1555]) return breakpoint(s, 182, 1555, r0);
  case 182:
    r0 = (s.arg1).fields["dx"] = (0);
  case 37:
  case 38:
  case 39:
  case 40:
  case 41:
  case 42:
  case 43:
  case 44:
    s.lastBrkId = 1556;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1556]) return breakpoint(s, 183, 1556, r0);
  case 183:
    r0 = (s.yDiff___19720 !== 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 81; continue; }
    s.lastBrkId = 1557;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1557]) return breakpoint(s, 184, 1557, r0);
  case 184:
    r0 = (s.yDiff___19720 > 0);
    s.down___19931 = (r0);
    s.lastBrkId = 1558;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1558]) return breakpoint(s, 185, 1558, r0);
  case 185:
    r0 = pxsim_numops_toBoolDecr(s.down___19931);
    if (!r0) { step = 45; continue; }
    s.tmp_0 = Fx_add__P157_mk(s);
    s.tmp_1 = game_Hitbox_bottom__P2220_mk(s);
    s.tmp_1.arg0 = s.hbox___19703;
    s.callLocIdx = 695; s.pc = 187; return s.tmp_1;
  case 187:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 256;
    s.callLocIdx = 696; s.pc = 186; return s.tmp_0;
  case 186:
    r0 = s.retval;
    { step = 46; continue; }
  case 45:
    s.tmp_2 = Fx_sub__P159_mk(s);
    s.tmp_3 = game_Hitbox_top__P2218_mk(s);
    s.tmp_3.arg0 = s.hbox___19703;
    s.callLocIdx = 697; s.pc = 189; return s.tmp_3;
  case 189:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 256;
    s.callLocIdx = 698; s.pc = 188; return s.tmp_2;
  case 188:
    r0 = s.retval;
  case 46:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = Fx_toIntShifted__P156_mk(s);
    s.tmp_6 = Fx_add__P157_mk(s);
    s.tmp_6.arg0 = s.tmp_4;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 699; s.pc = 191; return s.tmp_6;
  case 191:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___19706;
    s.callLocIdx = 700; s.pc = 190; return s.tmp_5;
  case 190:
    r0 = s.retval;
    s.y0___19935 = (r0);
    s.lastBrkId = 1559;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1559]) return breakpoint(s, 192, 1559, r0);
  case 192:
    r0 = pxsim_Array__mk();
    s.collidedTiles___19950 = (r0);
    s.lastBrkId = 1560;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1560]) return breakpoint(s, 193, 1560, r0);
  case 193:
    s.tmp_0 = game_Hitbox_left__P2217_mk(s);
    s.tmp_0.arg0 = s.hbox___19703;
    s.callLocIdx = 701; s.pc = 194; return s.tmp_0;
  case 194:
    r0 = s.retval;
    s.x___19952 = (r0);
    s.lastBrkId = 1561;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1561]) return breakpoint(s, 195, 1561, r0);
  case 195:
  case 47:
    s.lastBrkId = 1562;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1562]) return breakpoint(s, 196, 1562, r0);
  case 196:
    s.tmp_1 = r0 = s.x___19952;
    s.tmp_3 = Fx_iadd__P158_mk(s);
    s.tmp_3.arg0 = s.tileSize___19709;
    s.tmp_4 = game_Hitbox_right__P2219_mk(s);
    s.tmp_4.arg0 = s.hbox___19703;
    s.callLocIdx = 702; s.pc = 198; return s.tmp_4;
  case 198:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 703; s.pc = 197; return s.tmp_3;
  case 197:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 52; continue; }
    s.lastBrkId = 1563;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1563]) return breakpoint(s, 199, 1563, r0);
  case 199:
    s.tmp_5 = Fx_toIntShifted__P156_mk(s);
    s.tmp_6 = Fx_add__P157_mk(s);
    s.tmp_7 = Fx_min__P166_mk(s);
    s.tmp_7.arg0 = s.x___19952;
    s.tmp_8 = game_Hitbox_right__P2219_mk(s);
    s.tmp_8.arg0 = s.hbox___19703;
    s.callLocIdx = 704; s.pc = 203; return s.tmp_8;
  case 203:
    r0 = s.retval;
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 705; s.pc = 202; return s.tmp_7;
  case 202:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 706; s.pc = 201; return s.tmp_6;
  case 201:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___19706;
    s.callLocIdx = 707; s.pc = 200; return s.tmp_5;
  case 200:
    r0 = s.retval;
    s.x0___19962 = (r0);
    s.lastBrkId = 1564;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1564]) return breakpoint(s, 204, 1564, r0);
  case 204:
    s.tmp_1 = tiles_TileMap_isObstacle__P2757_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.tmp_1.arg1 = s.x0___19962;
    s.tmp_1.arg2 = s.y0___19935;
    s.callLocIdx = 708; s.pc = 205; return s.tmp_1;
  case 205:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 50; continue; }
    s.lastBrkId = 1565;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1565]) return breakpoint(s, 206, 1565, r0);
  case 206:
    s.tmp_2 = tiles_TileMap_getObstacle__P2758_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.tmp_2.arg1 = s.x0___19962;
    s.tmp_2.arg2 = s.y0___19935;
    s.callLocIdx = 709; s.pc = 207; return s.tmp_2;
  case 207:
    r0 = s.retval;
    s.obstacle___19976 = (r0);
    s.lastBrkId = 1566;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1566]) return breakpoint(s, 208, 1566, r0);
  case 208:
    r0 = pxsim_pxtcore_mkAction(1, ArcadePhysicsEngine_tilemapCollisions_inline__P19984);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.obstacle___19976);
    s.tmp_4 = helpers_arraySome__P107_mk(s);
    s.tmp_4.arg0 = s.collidedTiles___19950;
    s.tmp_4.arg1 = s.tmp_0;
    s.callLocIdx = 710; s.pc = 209; return s.tmp_4;
  case 209:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 48; continue; }
    s.lastBrkId = 1567;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1567]) return breakpoint(s, 210, 1567, r0);
  case 210:
    r0 = pxsim_Array__push(s.collidedTiles___19950, s.obstacle___19976);
  case 48:
  case 49:
  case 50:
  case 51:
    s.lastBrkId = 1568;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1568]) return breakpoint(s, 211, 1568, r0);
  case 211:
    s.tmp_0 = Fx_iadd__P158_mk(s);
    s.tmp_0.arg0 = s.tileSize___19709;
    s.tmp_0.arg1 = s.x___19952;
    s.callLocIdx = 711; s.pc = 212; return s.tmp_0;
  case 212:
    r0 = s.retval;
    s.x___19952 = (r0);
    { step = 47; continue; }
  case 52:
    s.lastBrkId = 1569;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1569]) return breakpoint(s, 213, 1569, r0);
  case 213:
    r0 = pxsim_Array__length(s.collidedTiles___19950);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 79; continue; }
    s.lastBrkId = 1570;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1570]) return breakpoint(s, 214, 1570, r0);
  case 214:
    r0 = pxsim_numops_toBoolDecr(s.down___19931);
    if (!r0) { step = 53; continue; }
    r0 = 3;
    { step = 54; continue; }
  case 53:
    r0 = 1;
  case 54:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.collisionDirection___20003 = (s.tmp_1);
    s.lastBrkId = 1571;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1571]) return breakpoint(s, 215, 1571, r0);
  case 215:
    r0 = pxsim_numops_toBoolDecr(s.down___19931);
    if (!r0) { step = 55; continue; }
    s.tmp_0 = Fx_sub__P159_mk(s);
    s.tmp_1 = Fx8__P149_mk(s);
    r0 = (s.y0___19935 << s.tileScale___19706);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 712; s.pc = 217; return s.tmp_1;
  case 217:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.hbox___19703.fields["height"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 713; s.pc = 216; return s.tmp_0;
  case 216:
    r0 = s.retval;
    { step = 56; continue; }
  case 55:
    s.tmp_2 = Fx8__P149_mk(s);
    r0 = (s.y0___19935 + 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 << s.tileScale___19706);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 714; s.pc = 218; return s.tmp_2;
  case 218:
    r0 = s.retval;
  case 56:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = r0 = s.s___19678;
    s.tmp_7 = Fx_sub__P159_mk(s);
    s.tmp_7.arg0 = s.tmp_4;
    r0 = s.hbox___19703.fields["oy"];
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 715; s.pc = 219; return s.tmp_7;
  case 219:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5).fields["_y"] = (s.tmp_6);
    s.lastBrkId = 1572;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1572]) return breakpoint(s, 220, 1572, r0);
  case 220:
    s.tile___20029 = (undefined);
    s.unnamed1326___U24 = (s.collidedTiles___19950);
    s.unnamed1327___U25 = (0);
    s.lastBrkId = 1573;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1573]) return breakpoint(s, 221, 1573, r0);
  case 221:
  case 57:
    s.tmp_0 = r0 = s.unnamed1327___U25;
    r0 = pxsim_Array__length(s.unnamed1326___U24);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 60; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1326___U24, s.unnamed1327___U25);
    s.tile___20029 = (r0);
    s.lastBrkId = 1574;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1574]) return breakpoint(s, 222, 1574, r0);
  case 222:
    s.lastBrkId = 1575;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1575]) return breakpoint(s, 223, 1575, r0);
  case 223:
    r0 = s.s___19678.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 2818);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 58; continue; }
    s.lastBrkId = 1576;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1576]) return breakpoint(s, 224, 1576, r0);
  case 224:
    s.tmp_6 = Sprite_registerObstacle__P2427_mk(s);
    s.tmp_6.arg0 = s.s___19678;
    s.tmp_6.arg1 = s.collisionDirection___20003;
    s.tmp_6.arg2 = s.tile___20029;
    s.tmp_6.arg3 = s.arg2;
    s.callLocIdx = 716; s.pc = 225; return s.tmp_6;
  case 225:
    r0 = s.retval;
  case 58:
  case 59:
    r0 = (s.unnamed1327___U25 + 1);
    s.unnamed1327___U25 = (r0);
    { step = 57; continue; }
  case 60:
    s.unnamed1326___U24 = (undefined);
    s.lastBrkId = 1577;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1577]) return breakpoint(s, 226, 1577, r0);
  case 226:
    r0 = s.s___19678.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 16);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 61; continue; }
    s.lastBrkId = 1578;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1578]) return breakpoint(s, 227, 1578, r0);
  case 227:
    s.tmp_2 = Sprite_destroy__P2429_mk(s);
    s.tmp_2.arg0 = s.s___19678;
    s.tmp_2.arg1 = undefined;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 717; s.pc = 228; return s.tmp_2;
  case 228:
    r0 = s.retval;
    { step = 78; continue; }
  case 61:
    s.lastBrkId = 1579;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1579]) return breakpoint(s, 229, 1579, r0);
  case 229:
    r0 = s.s___19678.fields["_vy"];
    s.tmp_1 = r0;
    r0 = s.arg1.fields["cachedVy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 62; continue; }
    r0 = s.tmp_0;
    { step = 63; continue; }
  case 62:
    r0 = s.s___19678.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 2818);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 63:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 74; continue; }
    s.lastBrkId = 1580;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1580]) return breakpoint(s, 230, 1580, r0);
  case 230:
    r0 = s.s___19678.fields["flags"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 & 32);
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 72; continue; }
    s.lastBrkId = 1581;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1581]) return breakpoint(s, 231, 1581, r0);
  case 231:
    r0 = pxsim_numops_toBoolDecr(s.down___19931);
    s.tmp_10 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_10);
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBool(s.tmp_9);
    if (r0) { step = 64; continue; }
    r0 = s.tmp_9;
    { step = 65; continue; }
  case 64:
    s.tmp_12 = Sprite_vy__P2361_mk(s);
    s.tmp_12.arg0 = s.s___19678;
    s.callLocIdx = 718; s.pc = 232; return s.tmp_12;
  case 232:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_11 < 0);
  case 65:
    // jmp value (already in r0)
    s.tmp_13 = r0;
    r0 = pxsim_numops_toBool(s.tmp_13);
    if (!r0) { step = 66; continue; }
    r0 = s.tmp_13;
    { step = 69; continue; }
  case 66:
    s.tmp_14 = r0 = s.down___19931;
    r0 = pxsim_numops_toBool(s.tmp_14);
    if (r0) { step = 67; continue; }
    r0 = s.tmp_14;
    { step = 68; continue; }
  case 67:
    s.tmp_16 = Sprite_vy__P2361_mk(s);
    s.tmp_16.arg0 = s.s___19678;
    s.callLocIdx = 719; s.pc = 233; return s.tmp_16;
  case 233:
    r0 = s.retval;
    s.tmp_15 = r0;
    r0 = (s.tmp_15 > 0);
  case 68:
    // jmp value (already in r0)
    s.tmp_17 = r0;
    r0 = s.tmp_17;
  case 69:
    // jmp value (already in r0)
    s.tmp_18 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_18);
    if (!r0) { step = 70; continue; }
    s.lastBrkId = 1582;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1582]) return breakpoint(s, 234, 1582, r0);
  case 234:
    s.tmp_19 = r0 = s.s___19678;
    s.tmp_21 = Fx_neg__P155_mk(s);
    r0 = s.s___19678.fields["_vy"];
    s.tmp_21.arg0 = r0;
    s.callLocIdx = 720; s.pc = 235; return s.tmp_21;
  case 235:
    r0 = s.retval;
    s.tmp_20 = r0;
    r0 = (s.tmp_19).fields["_vy"] = (s.tmp_20);
    s.lastBrkId = 1583;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1583]) return breakpoint(s, 236, 1583, r0);
  case 236:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_neg__P155_mk(s);
    r0 = s.arg1.fields["yStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 721; s.pc = 237; return s.tmp_2;
  case 237:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["yStep"] = (s.tmp_1);
    s.lastBrkId = 1584;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1584]) return breakpoint(s, 238, 1584, r0);
  case 238:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = Fx_neg__P155_mk(s);
    r0 = s.arg1.fields["dy"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 722; s.pc = 239; return s.tmp_2;
  case 239:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dy"] = (s.tmp_1);
  case 70:
  case 71:
    { step = 73; continue; }
  case 72:
    s.lastBrkId = 1585;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1585]) return breakpoint(s, 240, 1585, r0);
  case 240:
    r0 = (s.arg1).fields["dy"] = (0);
    s.lastBrkId = 1586;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1586]) return breakpoint(s, 241, 1586, r0);
  case 241:
    r0 = (s.s___19678).fields["_vy"] = (0);
  case 73:
    { step = 77; continue; }
  case 74:
    s.lastBrkId = 1587;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1587]) return breakpoint(s, 242, 1587, r0);
  case 242:
    s.tmp_2 = Math_sign__P129_mk(s);
    s.tmp_3 = Fx_toInt__P172_mk(s);
    r0 = s.s___19678.fields["_vy"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 723; s.pc = 244; return s.tmp_3;
  case 244:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 724; s.pc = 243; return s.tmp_2;
  case 243:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_5 = Math_sign__P129_mk(s);
    s.tmp_6 = Fx_toInt__P172_mk(s);
    r0 = s.arg1.fields["cachedVy"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 725; s.pc = 246; return s.tmp_6;
  case 246:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 726; s.pc = 245; return s.tmp_5;
  case 245:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_1 === s.tmp_4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 75; continue; }
    s.lastBrkId = 1588;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1588]) return breakpoint(s, 247, 1588, r0);
  case 247:
    r0 = (s.arg1).fields["dy"] = (0);
  case 75:
  case 76:
  case 77:
  case 78:
  case 79:
  case 80:
  case 81:
  case 82:
  case 83:
  case 84:
    s.lastBrkId = 1589;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1589]) return breakpoint(s, 248, 1589, r0);
  case 248:
    r0 = s.s___19678.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 1538);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 95; continue; }
    s.lastBrkId = 1590;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1590]) return breakpoint(s, 249, 1590, r0);
  case 249:
    r0 = pxsim_Array__mk();
    s.overlappedTiles___20123 = (r0);
    s.lastBrkId = 1591;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1591]) return breakpoint(s, 250, 1591, r0);
  case 250:
    s.tmp_0 = game_Hitbox_left__P2217_mk(s);
    s.tmp_0.arg0 = s.hbox___19703;
    s.callLocIdx = 727; s.pc = 251; return s.tmp_0;
  case 251:
    r0 = s.retval;
    s.x___20125 = (r0);
    s.lastBrkId = 1592;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1592]) return breakpoint(s, 252, 1592, r0);
  case 252:
  case 85:
    s.lastBrkId = 1593;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1593]) return breakpoint(s, 253, 1593, r0);
  case 253:
    s.tmp_1 = r0 = s.x___20125;
    s.tmp_3 = Fx_iadd__P158_mk(s);
    s.tmp_3.arg0 = s.tileSize___19709;
    s.tmp_4 = game_Hitbox_right__P2219_mk(s);
    s.tmp_4.arg0 = s.hbox___19703;
    s.callLocIdx = 728; s.pc = 255; return s.tmp_4;
  case 255:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 729; s.pc = 254; return s.tmp_3;
  case 254:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 92; continue; }
    s.lastBrkId = 1594;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1594]) return breakpoint(s, 256, 1594, r0);
  case 256:
    s.tmp_5 = Fx_toIntShifted__P156_mk(s);
    s.tmp_6 = Fx_add__P157_mk(s);
    s.tmp_7 = Fx_min__P166_mk(s);
    s.tmp_7.arg0 = s.x___20125;
    s.tmp_8 = game_Hitbox_right__P2219_mk(s);
    s.tmp_8.arg0 = s.hbox___19703;
    s.callLocIdx = 730; s.pc = 260; return s.tmp_8;
  case 260:
    r0 = s.retval;
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 731; s.pc = 259; return s.tmp_7;
  case 259:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 732; s.pc = 258; return s.tmp_6;
  case 258:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___19706;
    s.callLocIdx = 733; s.pc = 257; return s.tmp_5;
  case 257:
    r0 = s.retval;
    s.x0___20135 = (r0);
    s.lastBrkId = 1595;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1595]) return breakpoint(s, 261, 1595, r0);
  case 261:
    s.tmp_0 = game_Hitbox_top__P2218_mk(s);
    s.tmp_0.arg0 = s.hbox___19703;
    s.callLocIdx = 734; s.pc = 262; return s.tmp_0;
  case 262:
    r0 = s.retval;
    s.y___20145 = (r0);
    s.lastBrkId = 1596;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1596]) return breakpoint(s, 263, 1596, r0);
  case 263:
  case 86:
    s.lastBrkId = 1597;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1597]) return breakpoint(s, 264, 1597, r0);
  case 264:
    s.tmp_1 = r0 = s.y___20145;
    s.tmp_3 = Fx_iadd__P158_mk(s);
    s.tmp_3.arg0 = s.tileSize___19709;
    s.tmp_4 = game_Hitbox_bottom__P2220_mk(s);
    s.tmp_4.arg0 = s.hbox___19703;
    s.callLocIdx = 735; s.pc = 266; return s.tmp_4;
  case 266:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 736; s.pc = 265; return s.tmp_3;
  case 265:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 91; continue; }
    s.lastBrkId = 1598;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1598]) return breakpoint(s, 267, 1598, r0);
  case 267:
    s.tmp_5 = Fx_toIntShifted__P156_mk(s);
    s.tmp_6 = Fx_add__P157_mk(s);
    s.tmp_7 = Fx_min__P166_mk(s);
    s.tmp_7.arg0 = s.y___20145;
    s.tmp_8 = game_Hitbox_bottom__P2220_mk(s);
    s.tmp_8.arg0 = s.hbox___19703;
    s.callLocIdx = 737; s.pc = 271; return s.tmp_8;
  case 271:
    r0 = s.retval;
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 738; s.pc = 270; return s.tmp_7;
  case 270:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 128;
    s.callLocIdx = 739; s.pc = 269; return s.tmp_6;
  case 269:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.tileScale___19706;
    s.callLocIdx = 740; s.pc = 268; return s.tmp_5;
  case 268:
    r0 = s.retval;
    s.y0___20155 = (r0);
    s.lastBrkId = 1599;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1599]) return breakpoint(s, 272, 1599, r0);
  case 272:
    s.tmp_3 = tiles_TileMap_isObstacle__P2757_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.x0___20135;
    s.tmp_3.arg2 = s.y0___20155;
    s.callLocIdx = 741; s.pc = 273; return s.tmp_3;
  case 273:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 87; continue; }
    r0 = s.tmp_0;
    { step = 88; continue; }
  case 87:
    r0 = s.s___19678.fields["flags"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 & 2048);
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    s.tmp_6 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
  case 88:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_9);
    if (!r0) { step = 89; continue; }
    s.lastBrkId = 1600;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1600]) return breakpoint(s, 274, 1600, r0);
  case 274:
    s.tmp_10 = r0 = s.overlappedTiles___20123;
    s.tmp_12 = tiles_TileMap_getTile__P2750_mk(s);
    s.tmp_12.arg0 = s.arg2;
    s.tmp_12.arg1 = s.x0___20135;
    s.tmp_12.arg2 = s.y0___20155;
    s.callLocIdx = 742; s.pc = 275; return s.tmp_12;
  case 275:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = pxsim_Array__push(s.tmp_10, s.tmp_11);
  case 89:
  case 90:
    s.lastBrkId = 1601;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1601]) return breakpoint(s, 276, 1601, r0);
  case 276:
    s.tmp_0 = Fx_iadd__P158_mk(s);
    s.tmp_0.arg0 = s.tileSize___19709;
    s.tmp_0.arg1 = s.y___20145;
    s.callLocIdx = 743; s.pc = 277; return s.tmp_0;
  case 277:
    r0 = s.retval;
    s.y___20145 = (r0);
    { step = 86; continue; }
  case 91:
    s.lastBrkId = 1602;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1602]) return breakpoint(s, 278, 1602, r0);
  case 278:
    s.tmp_0 = Fx_iadd__P158_mk(s);
    s.tmp_0.arg0 = s.tileSize___19709;
    s.tmp_0.arg1 = s.x___20125;
    s.callLocIdx = 744; s.pc = 279; return s.tmp_0;
  case 279:
    r0 = s.retval;
    s.x___20125 = (r0);
    { step = 85; continue; }
  case 92:
    s.lastBrkId = 1603;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1603]) return breakpoint(s, 280, 1603, r0);
  case 280:
    r0 = pxsim_Array__length(s.overlappedTiles___20123);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 93; continue; }
    s.lastBrkId = 1604;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1604]) return breakpoint(s, 281, 1604, r0);
  case 281:
    s.tmp_1 = ArcadePhysicsEngine_tilemapOverlaps__P4994_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.s___19678;
    s.tmp_1.arg2 = s.overlappedTiles___20123;
    s.callLocIdx = 745; s.pc = 282; return s.tmp_1;
  case 282:
    r0 = s.retval;
  case 93:
  case 94:
  case 95:
  case 96:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapCollisions__P4993.info = {"start":12929,"length":9654,"line":379,"column":4,"endLine":618,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"tilemapCollisions","argumentNames":["this","movingSprite","tm"]}

function ArcadePhysicsEngine_tilemapCollisions__P4993_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapCollisions__P4993, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  s___19678: undefined,
  hbox___19703: undefined,
  tileScale___19706: undefined,
  tileSize___19709: undefined,
  xDiff___19713: undefined,
  yDiff___19720: undefined,
  right___19736: undefined,
  x0___19740: undefined,
  collidedTiles___19755: undefined,
  y___19757: undefined,
  y0___19771: undefined,
  obstacle___19787: undefined,
  collisionDirection___19814: undefined,
  tile___19840: undefined,
  unnamed1324___U14: undefined,
  unnamed1325___U15: undefined,
  down___19931: undefined,
  y0___19935: undefined,
  collidedTiles___19950: undefined,
  x___19952: undefined,
  x0___19962: undefined,
  obstacle___19976: undefined,
  collisionDirection___20003: undefined,
  tile___20029: undefined,
  unnamed1326___U24: undefined,
  unnamed1327___U25: undefined,
  overlappedTiles___20123: undefined,
  x___20125: undefined,
  x0___20135: undefined,
  y___20145: undefined,
  y0___20155: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function ArcadePhysicsEngine_tilemapCollisions_inline__P19795(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["tileIndex"];
    s.tmp_0 = r0;
    r0 = s.caps[0].fields["tileIndex"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 === s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapCollisions_inline__P19795.info = {"start":15147,"length":39,"line":441,"column":48,"endLine":441,"endColumn":87,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["o"]}

function ArcadePhysicsEngine_tilemapCollisions_inline__P19795_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapCollisions_inline__P19795, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_tilemapCollisions_inline__P19984(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["tileIndex"];
    s.tmp_0 = r0;
    r0 = s.caps[0].fields["tileIndex"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 === s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapCollisions_inline__P19984.info = {"start":18668,"length":39,"line":522,"column":48,"endLine":522,"endColumn":87,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["o"]}

function ArcadePhysicsEngine_tilemapCollisions_inline__P19984_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapCollisions_inline__P19984, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_tilemapOverlaps__P4994(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.alreadyHandled___20202 = undefined;
    s.tile___20205 = undefined;
    s.unnamed1328___U2 = undefined;
    s.unnamed1329___U3 = undefined;
    s.tileOverlapHandlers___20226 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2528_VT)) failedCast(r0);
    s.lastBrkId = 1605;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1605]) return breakpoint(s, 8, 1605, r0);
  case 8:
    r0 = pxsim_Array__mk();
    s.alreadyHandled___20202 = (r0);
    s.lastBrkId = 1606;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1606]) return breakpoint(s, 9, 1606, r0);
  case 9:
    s.tile___20205 = (undefined);
    s.unnamed1328___U2 = (s.arg2);
    s.unnamed1329___U3 = (0);
    s.lastBrkId = 1607;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1607]) return breakpoint(s, 10, 1607, r0);
  case 10:
  case 1:
    s.tmp_0 = r0 = s.unnamed1329___U3;
    r0 = pxsim_Array__length(s.unnamed1328___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 7; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1328___U2, s.unnamed1329___U3);
    s.tile___20205 = (r0);
    s.lastBrkId = 1608;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1608]) return breakpoint(s, 11, 1608, r0);
  case 11:
    s.lastBrkId = 1609;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1609]) return breakpoint(s, 12, 1609, r0);
  case 12:
    r0 = pxsim_pxtcore_mkAction(1, ArcadePhysicsEngine_tilemapOverlaps_inline__P20209);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_2, 0, s.tile___20205);
    s.tmp_4 = helpers_arraySome__P107_mk(s);
    s.tmp_4.arg0 = s.alreadyHandled___20202;
    s.tmp_4.arg1 = s.tmp_2;
    s.callLocIdx = 750; s.pc = 13; return s.tmp_4;
  case 13:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 1610;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1610]) return breakpoint(s, 14, 1610, r0);
  case 14:
    { step = 6; continue; }
  case 2:
  case 3:
    s.lastBrkId = 1611;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1611]) return breakpoint(s, 15, 1611, r0);
  case 15:
    r0 = pxsim_Array__push(s.alreadyHandled___20202, s.tile___20205);
    s.lastBrkId = 1612;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1612]) return breakpoint(s, 16, 1612, r0);
  case 16:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 751; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    r0 = r0.fields["tileOverlapHandlers"];
    s.tileOverlapHandlers___20226 = (r0);
    s.lastBrkId = 1613;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1613]) return breakpoint(s, 18, 1613, r0);
  case 18:
    r0 = pxsim_numops_toBoolDecr(s.tileOverlapHandlers___20226);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1614;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1614]) return breakpoint(s, 19, 1614, r0);
  case 19:
    r0 = pxsim_pxtcore_mkAction(2, forEach_inline__P20234);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.tile___20205);
    r0 = pxsim_pxtcore_mkAction(2, ArcadePhysicsEngine_tilemapOverlaps_inline__P20250);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 1, s.tile___20205);
    s.tmp_2 = helpers_arrayForEach__P109_mk(s);
    s.tmp_3 = helpers_arrayFilter__P110_mk(s);
    s.tmp_3.arg0 = s.tileOverlapHandlers___20226;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 754; s.pc = 21; return s.tmp_3;
  case 21:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 756; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
  case 4:
  case 5:
  case 6:
    r0 = (s.unnamed1329___U3 + 1);
    s.unnamed1329___U3 = (r0);
    { step = 1; continue; }
  case 7:
    s.unnamed1328___U2 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapOverlaps__P4994.info = {"start":22860,"length":707,"line":626,"column":4,"endLine":642,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"tilemapOverlaps","argumentNames":["this","sprite","overlappedTiles"]}

function ArcadePhysicsEngine_tilemapOverlaps__P4994_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapOverlaps__P4994, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  alreadyHandled___20202: undefined,
  tile___20205: undefined,
  unnamed1328___U2: undefined,
  unnamed1329___U3: undefined,
  tileOverlapHandlers___20226: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function ArcadePhysicsEngine_tilemapOverlaps_inline__P20209(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_2 = tiles_Location_column__P2697_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 746; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = tiles_Location_column__P2697_mk(s);
    s.tmp_4.arg0 = s.caps[0];
    s.callLocIdx = 747; s.pc = 4; return s.tmp_4;
  case 4:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 === s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_6 = tiles_Location_row__P2698_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 748; s.pc = 5; return s.tmp_6;
  case 5:
    r0 = s.retval;
    s.tmp_5 = r0;
    s.tmp_8 = tiles_Location_row__P2698_mk(s);
    s.tmp_8.arg0 = s.caps[0];
    s.callLocIdx = 749; s.pc = 6; return s.tmp_8;
  case 6:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_5 === s.tmp_7);
  case 2:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = s.tmp_9;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapOverlaps_inline__P20209.info = {"start":23075,"length":51,"line":630,"column":36,"endLine":630,"endColumn":87,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["l"]}

function ArcadePhysicsEngine_tilemapOverlaps_inline__P20209_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapOverlaps_inline__P20209, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
} }





function forEach_inline__P20234(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["spriteKind"];
    s.tmp_1 = r0;
    s.tmp_3 = Sprite_kind__P2408_mk(s);
    s.tmp_3.arg0 = s.caps[0];
    s.callLocIdx = 752; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 == s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["tileKind"];
    s.tmp_4 = r0;
    s.tmp_6 = tiles_getTileImage__P2769_mk(s);
    s.tmp_6.arg0 = s.caps[1];
    s.callLocIdx = 753; s.pc = 4; return s.tmp_6;
  case 4:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.equals(s.tmp_4, s.tmp_5);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P20234.info = {"start":23395,"length":81,"line":638,"column":28,"endLine":638,"endColumn":109,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P20234_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P20234, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_tilemapOverlaps_inline__P20250(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    s.tmp_0.arg2 = s.caps[1];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 3);
      s.callLocIdx = 755; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 3); s.callLocIdx = 755; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 755; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 755; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapOverlaps_inline__P20250.info = {"start":23507,"length":28,"line":639,"column":29,"endLine":639,"endColumn":57,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function ArcadePhysicsEngine_tilemapOverlaps_inline__P20250_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapOverlaps_inline__P20250, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function tiles_getTileImage__P2769(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___20258 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1868;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1868]) return breakpoint(s, 6, 1868, r0);
  case 6:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 884; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.scene___20258 = (r0);
    s.lastBrkId = 1869;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1869]) return breakpoint(s, 8, 1869, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.scene___20258.fields["tileMap"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1870;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1870]) return breakpoint(s, 9, 1870, r0);
  case 9:
    r0 = pxsim.image.ofBuffer(_hex20268);
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1871;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1871]) return breakpoint(s, 10, 1871, r0);
  case 10:
    s.tmp_5 = tiles_TileMap_getTileImage__P2760_mk(s);
    r0 = s.scene___20258.fields["tileMap"];
    s.tmp_5.arg0 = r0;
    s.tmp_6 = tiles_Location_tileSet__P2705_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 885; s.pc = 12; return s.tmp_6;
  case 12:
    r0 = s.retval;
    s.tmp_5.arg1 = r0;
    s.callLocIdx = 886; s.pc = 11; return s.tmp_5;
  case 11:
    r0 = s.retval;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
tiles_getTileImage__P2769.info = {"start":21871,"length":207,"line":673,"column":4,"endLine":677,"endColumn":5,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileImage","argumentNames":["loc"]}

function tiles_getTileImage__P2769_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_getTileImage__P2769, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  scene___20258: undefined,
  arg0: undefined,
} }

const _hex20268 = pxsim.BufferMethods.createBufferFromHex("8704000000000000")




function tiles_TileMap_getTileImage__P2760(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2736_VT)) failedCast(r0);
    s.lastBrkId = 1867;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1867]) return breakpoint(s, 1, 1867, r0);
  case 1:
    s.tmp_0 = tiles_TileMapData_getTileImage__P2727_mk(s);
    s.tmp_1 = tiles_TileMap_data__P2741_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 882; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 883; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getTileImage__P2760.info = {"start":17510,"length":96,"line":553,"column":8,"endLine":555,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileImage","argumentNames":["this","index"]}

function tiles_TileMap_getTileImage__P2760_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getTileImage__P2760, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMapData_getTileImage__P2727(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.size___17985 = undefined;
    s.cachedImage___17989 = undefined;
    s.originalImage___17995 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2718_VT)) failedCast(r0);
    s.lastBrkId = 1778;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1778]) return breakpoint(s, 9, 1778, r0);
  case 9:
    s.tmp_1 = tiles_TileMapData_scale__P2722_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 819; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (1 << s.tmp_0);
    s.size___17985 = (r0);
    s.lastBrkId = 1779;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1779]) return breakpoint(s, 11, 1779, r0);
  case 11:
    r0 = s.arg0.fields["cachedTileView"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.arg1);
    s.cachedImage___17989 = (r0);
    s.lastBrkId = 1780;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1780]) return breakpoint(s, 12, 1780, r0);
  case 12:
    r0 = pxsim_numops_toBoolDecr(s.cachedImage___17989);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1781;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1781]) return breakpoint(s, 13, 1781, r0);
  case 13:
    r0 = s.arg0.fields["tileset"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.arg1);
    s.originalImage___17995 = (r0);
    s.lastBrkId = 1782;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1782]) return breakpoint(s, 14, 1782, r0);
  case 14:
    r0 = pxsim_numops_toBoolDecr(s.originalImage___17995);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1783;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1783]) return breakpoint(s, 15, 1783, r0);
  case 15:
    r0 = pxsim_ImageMethods.width(s.originalImage___17995);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.size___17985);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_ImageMethods.height(s.originalImage___17995);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 <= s.size___17985);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1784;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1784]) return breakpoint(s, 16, 1784, r0);
  case 16:
    s.cachedImage___17989 = (s.originalImage___17995);
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1785;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1785]) return breakpoint(s, 17, 1785, r0);
  case 17:
    r0 = pxsim.image.create(s.size___17985, s.size___17985);
    s.cachedImage___17989 = (r0);
    s.lastBrkId = 1786;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1786]) return breakpoint(s, 18, 1786, r0);
  case 18:
    r0 = pxsim_ImageMethods.drawImage(s.cachedImage___17989, s.originalImage___17995, 0, 0);
  case 4:
    s.lastBrkId = 1787;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1787]) return breakpoint(s, 19, 1787, r0);
  case 19:
    r0 = s.arg0.fields["cachedTileView"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.arg1, s.cachedImage___17989);
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 1788;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1788]) return breakpoint(s, 20, 1788, r0);
  case 20:
    r0 = s.cachedImage___17989;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_getTileImage__P2727.info = {"start":7354,"length":717,"line":251,"column":8,"endLine":268,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileImage","argumentNames":["this","index"]}

function tiles_TileMapData_getTileImage__P2727_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_getTileImage__P2727, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  size___17985: undefined,
  cachedImage___17989: undefined,
  originalImage___17995: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMapData_scale__P2722(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2718_VT)) failedCast(r0);
    s.lastBrkId = 1772;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1772]) return breakpoint(s, 1, 1772, r0);
  case 1:
    r0 = s.arg0.fields["_scale"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMapData_scale__P2722.info = {"start":6564,"length":66,"line":222,"column":8,"endLine":224,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this"]}
tiles_TileMapData_scale__P2722.isGetter = true;

function tiles_TileMapData_scale__P2722_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_scale__P2722, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_Location_tileSet__P2705(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2694_VT)) failedCast(r0);
    s.lastBrkId = 1763;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1763]) return breakpoint(s, 1, 1763, r0);
  case 1:
    s.tmp_0 = tiles_TileMap_getTileIndex__P2751_mk(s);
    s.tmp_1 = tiles_Location_tileMap__P2696_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 814; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_col"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["_row"];
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 815; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_tileSet__P2705.info = {"start":2323,"length":101,"line":86,"column":8,"endLine":88,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"tileSet","argumentNames":["this"]}
tiles_Location_tileSet__P2705.isGetter = true;

function tiles_Location_tileSet__P2705_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_tileSet__P2705, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function tiles_TileMap_getTileIndex__P2751(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2736_VT)) failedCast(r0);
    s.lastBrkId = 1806;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1806]) return breakpoint(s, 1, 1806, r0);
  case 1:
    s.tmp_0 = tiles_TileMapData_getTile__P2724_mk(s);
    s.tmp_1 = tiles_TileMap_data__P2741_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 837; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.callLocIdx = 838; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getTileIndex__P2751.info = {"start":11191,"length":105,"line":384,"column":8,"endLine":386,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileIndex","argumentNames":["this","col","row"]}

function tiles_TileMap_getTileIndex__P2751_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getTileIndex__P2751, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMapData_getTile__P2724(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2718_VT)) failedCast(r0);
    s.lastBrkId = 1775;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1775]) return breakpoint(s, 4, 1775, r0);
  case 4:
    s.tmp_1 = tiles_TileMapData_isOutsideMap__P2730_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.callLocIdx = 817; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1776;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1776]) return breakpoint(s, 6, 1776, r0);
  case 6:
    r0 = 0;
    { step = 3; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1777;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1777]) return breakpoint(s, 7, 1777, r0);
  case 7:
    r0 = s.arg0.fields["data"];
    s.tmp_2 = r0;
    r0 = (s.arg1 | 0);
    s.tmp_5 = r0;
    r0 = (4 + s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.arg2 | 0);
    s.tmp_7 = r0;
    s.tmp_9 = tiles_TileMapData_width__P2720_mk(s);
    s.tmp_9.arg0 = s.arg0;
    s.callLocIdx = 818; s.pc = 8; return s.tmp_9;
  case 8:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_7 * s.tmp_8);
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_3 = r0;
    r0 = pxsim.BufferMethods.getUint8(s.tmp_2, s.tmp_3);
  case 3:
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_getTile__P2724.info = {"start":6752,"length":200,"line":231,"column":8,"endLine":235,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTile","argumentNames":["this","col","row"]}

function tiles_TileMapData_getTile__P2724_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_getTile__P2724, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMapData_isOutsideMap__P2730(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2718_VT)) failedCast(r0);
    s.lastBrkId = 1790;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1790]) return breakpoint(s, 7, 1790, r0);
  case 7:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = tiles_TileMapData_width__P2720_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 820; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >= s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_4;
    { step = 4; continue; }
  case 3:
    r0 = (s.arg2 < 0);
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_5;
    { step = 6; continue; }
  case 5:
    s.tmp_6 = r0 = s.arg2;
    s.tmp_8 = tiles_TileMapData_height__P2721_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 821; s.pc = 9; return s.tmp_8;
  case 9:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_6 >= s.tmp_7);
  case 6:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = s.tmp_9;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_isOutsideMap__P2730.info = {"start":8335,"length":132,"line":278,"column":8,"endLine":280,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isOutsideMap","argumentNames":["this","col","row"]}

function tiles_TileMapData_isOutsideMap__P2730_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_isOutsideMap__P2730, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_Location_tileMap__P2696(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2694_VT)) failedCast(r0);
    s.lastBrkId = 1754;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1754]) return breakpoint(s, 1, 1754, r0);
  case 1:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 805; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_tileMap__P2696.info = {"start":491,"length":73,"line":24,"column":8,"endLine":26,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"tileMap","argumentNames":["this"]}
tiles_Location_tileMap__P2696.isGetter = true;

function tiles_Location_tileMap__P2696_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_tileMap__P2696, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function tiles_Location_row__P2698(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2694_VT)) failedCast(r0);
    s.lastBrkId = 1756;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1756]) return breakpoint(s, 1, 1756, r0);
  case 1:
    r0 = s.arg0.fields["_row"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_row__P2698.info = {"start":877,"length":51,"line":38,"column":8,"endLine":40,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"row","argumentNames":["this"]}
tiles_Location_row__P2698.isGetter = true;

function tiles_Location_row__P2698_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_row__P2698, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_Location_column__P2697(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2694_VT)) failedCast(r0);
    s.lastBrkId = 1755;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1755]) return breakpoint(s, 1, 1755, r0);
  case 1:
    r0 = s.arg0.fields["_col"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_column__P2697.info = {"start":695,"length":54,"line":31,"column":8,"endLine":33,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"column","argumentNames":["this"]}
tiles_Location_column__P2697.isGetter = true;

function tiles_Location_column__P2697_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_column__P2697, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_TileMap_getObstacle__P2758(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.index___20421 = undefined;
    s.tile___20433 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2736_VT)) failedCast(r0);
    s.lastBrkId = 1848;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1848]) return breakpoint(s, 3, 1848, r0);
  case 3:
    s.tmp_1 = tiles_TileMapData_isOutsideMap__P2730_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.callLocIdx = 862; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = tiles_TileMapData_getTile__P2724_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg1;
    s.tmp_2.arg2 = s.arg2;
    s.callLocIdx = 863; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.index___20421 = (s.tmp_3);
    s.lastBrkId = 1849;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1849]) return breakpoint(s, 6, 1849, r0);
  case 6:
    s.tmp_0 = tiles_TileMapData_getTileImage__P2727_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.index___20421;
    s.callLocIdx = 864; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.tile___20433 = (r0);
    s.lastBrkId = 1850;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1850]) return breakpoint(s, 8, 1850, r0);
  case 8:
    r0 = pxsim_pxtcore_mkClassInstance(sprites_StaticObstacle__C2499_VT);
    s.tmp_0 = r0;
    s.tmp_1 = sprites_StaticObstacle_constructor__P2505_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.tile___20433;
    s.tmp_2 = r0 = s.arg2;
    s.tmp_4 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 865; s.pc = 10; return s.tmp_4;
  case 10:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 << s.tmp_3);
    s.tmp_1.arg2 = r0;
    s.tmp_5 = r0 = s.arg1;
    s.tmp_7 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.callLocIdx = 866; s.pc = 11; return s.tmp_7;
  case 11:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5 << s.tmp_6);
    s.tmp_1.arg3 = r0;
    s.tmp_8 = tiles_TileMap_layer__P2746_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 867; s.pc = 12; return s.tmp_8;
  case 12:
    r0 = s.retval;
    s.tmp_1.arg4 = r0;
    s.tmp_1.arg5 = s.index___20421;
    s.callLocIdx = 868; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getObstacle__P2758.info = {"start":16453,"length":410,"line":522,"column":8,"endLine":532,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getObstacle","argumentNames":["this","col","row"]}

function tiles_TileMap_getObstacle__P2758_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getObstacle__P2758, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  index___20421: undefined,
  tile___20433: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMap_layer__P2746(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2736_VT)) failedCast(r0);
    s.lastBrkId = 1803;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1803]) return breakpoint(s, 1, 1803, r0);
  case 1:
    r0 = s.arg0.fields["_layer"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_layer__P2746.info = {"start":9967,"length":63,"line":341,"column":8,"endLine":343,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"layer","argumentNames":["this"]}
tiles_TileMap_layer__P2746.isGetter = true;

function tiles_TileMap_layer__P2746_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_layer__P2746, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_StaticObstacle_constructor__P2505(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2499_VT)) failedCast(r0);
    s.lastBrkId = 1335;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1335]) return breakpoint(s, 1, 1335, r0);
  case 1:
    r0 = (s.arg0).fields["image"] = (s.arg1);
    s.lastBrkId = 1336;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1336]) return breakpoint(s, 2, 1336, r0);
  case 2:
    r0 = (s.arg0).fields["layer"] = (s.arg4);
    s.lastBrkId = 1337;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1337]) return breakpoint(s, 3, 1337, r0);
  case 3:
    r0 = (s.arg0).fields["top"] = (s.arg2);
    s.lastBrkId = 1338;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1338]) return breakpoint(s, 4, 1338, r0);
  case 4:
    r0 = (s.arg0).fields["left"] = (s.arg3);
    s.lastBrkId = 1339;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1339]) return breakpoint(s, 5, 1339, r0);
  case 5:
    r0 = (s.arg0).fields["tileIndex"] = (s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_constructor__P2505.info = {"start":563,"length":261,"line":28,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"inline","argumentNames":["this","image","top","left","layer","tileIndex"]}

function sprites_StaticObstacle_constructor__P2505_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_constructor__P2505, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function tiles_TileMap_isObstacle__P2757(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2736_VT)) failedCast(r0);
    s.lastBrkId = 1843;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1843]) return breakpoint(s, 6, 1843, r0);
  case 6:
    s.tmp_3 = tiles_TileMap_enabled__P2748_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 859; s.pc = 7; return s.tmp_3;
  case 7:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1844;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1844]) return breakpoint(s, 8, 1844, r0);
  case 8:
    r0 = false;
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1845;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1845]) return breakpoint(s, 9, 1845, r0);
  case 9:
    s.tmp_5 = tiles_TileMapData_isOutsideMap__P2730_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.arg1;
    s.tmp_5.arg2 = s.arg2;
    s.callLocIdx = 860; s.pc = 10; return s.tmp_5;
  case 10:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1846;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1846]) return breakpoint(s, 11, 1846, r0);
  case 11:
    r0 = true;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1847;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1847]) return breakpoint(s, 12, 1847, r0);
  case 12:
    s.tmp_6 = tiles_TileMapData_isWall__P2729_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.arg1;
    s.tmp_6.arg2 = s.arg2;
    s.callLocIdx = 861; s.pc = 13; return s.tmp_6;
  case 13:
    r0 = s.retval;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_isObstacle__P2757.info = {"start":16232,"length":211,"line":515,"column":8,"endLine":520,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isObstacle","argumentNames":["this","col","row"]}

function tiles_TileMap_isObstacle__P2757_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_isObstacle__P2757, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMapData_isWall__P2729(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2718_VT)) failedCast(r0);
    s.lastBrkId = 1789;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1789]) return breakpoint(s, 1, 1789, r0);
  case 1:
    r0 = s.arg0.fields["layers"];
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_1, s.arg1, s.arg2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 === 2);
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_isWall__P2729.info = {"start":8218,"length":107,"line":274,"column":8,"endLine":276,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isWall","argumentNames":["this","col","row"]}

function tiles_TileMapData_isWall__P2729_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_isWall__P2729, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMap_getTile__P2750(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2736_VT)) failedCast(r0);
    s.lastBrkId = 1805;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1805]) return breakpoint(s, 1, 1805, r0);
  case 1:
    r0 = pxsim_pxtcore_mkClassInstance(tiles_Location__C2694_VT);
    s.tmp_0 = r0;
    s.tmp_1 = tiles_Location_constructor__P2695_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.tmp_1.arg3 = s.arg0;
    s.callLocIdx = 836; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getTile__P2750.info = {"start":11070,"length":111,"line":380,"column":8,"endLine":382,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTile","argumentNames":["this","col","row"]}

function tiles_TileMap_getTile__P2750_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getTile__P2750, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_Location_constructor__P2695(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2694_VT)) failedCast(r0);
    s.lastBrkId = 1752;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1752]) return breakpoint(s, 1, 1752, r0);
  case 1:
    r0 = (s.arg0).fields["_col"] = (s.arg1);
    s.lastBrkId = 1753;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1753]) return breakpoint(s, 2, 1753, r0);
  case 2:
    r0 = (s.arg0).fields["_row"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_Location_constructor__P2695.info = {"start":360,"length":121,"line":19,"column":8,"endLine":22,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["this","col","row","map"]}

function tiles_Location_constructor__P2695_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_constructor__P2695, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite_registerObstacle__P2427(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.collisionHandlers___20334 = undefined;
    s.wallCollisionHandlers___20341 = undefined;
    s.wallHandlersToRun___20366 = undefined;
    s.asTileLocation___20379 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1188;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1188]) return breakpoint(s, 9, 1188, r0);
  case 9:
    r0 = s.arg0.fields["_obstacles"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.arg1, s.arg2);
    s.lastBrkId = 1189;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1189]) return breakpoint(s, 10, 1189, r0);
  case 10:
    s.tmp_1 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 422; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    r0 = r0.fields["collisionHandlers"];
    s.tmp_0 = r0;
    s.tmp_3 = if_tileIndex_1_mk(s);
    s.tmp_3.arg0 = s.arg2;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "tileIndex");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["tileIndex"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["tileIndex"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 423; s.pc = 12; return s.tmp_3; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_2);
    s.collisionHandlers___20334 = (r0);
    s.lastBrkId = 1190;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1190]) return breakpoint(s, 13, 1190, r0);
  case 13:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 424; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    r0 = r0.fields["wallCollisionHandlers"];
    s.wallCollisionHandlers___20341 = (r0);
    s.lastBrkId = 1191;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1191]) return breakpoint(s, 15, 1191, r0);
  case 15:
    r0 = pxsim_numops_toBoolDecr(s.collisionHandlers___20334);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1192;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1192]) return breakpoint(s, 16, 1192, r0);
  case 16:
    r0 = pxsim_pxtcore_mkAction(1, forEach_inline__P20349);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtcore_mkAction(1, Sprite_registerObstacle_inline__P20355);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    s.tmp_2 = helpers_arrayForEach__P109_mk(s);
    s.tmp_3 = helpers_arrayFilter__P110_mk(s);
    s.tmp_3.arg0 = s.collisionHandlers___20334;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 426; s.pc = 18; return s.tmp_3;
  case 18:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 428; s.pc = 17; return s.tmp_2;
  case 17:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 1193;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1193]) return breakpoint(s, 19, 1193, r0);
  case 19:
    r0 = pxsim_numops_toBoolDecr(s.wallCollisionHandlers___20341);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1194;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1194]) return breakpoint(s, 20, 1194, r0);
  case 20:
    s.tmp_0 = r0 = s.arg3;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    s.tmp_1 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 429; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.arg3 = (s.tmp_2);
    s.lastBrkId = 1195;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1195]) return breakpoint(s, 22, 1195, r0);
  case 22:
    r0 = pxsim_pxtcore_mkAction(1, wallHandlersToRun_inline__P20368);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = helpers_arrayFilter__P110_mk(s);
    s.tmp_1.arg0 = s.wallCollisionHandlers___20341;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 431; s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
    s.wallHandlersToRun___20366 = (r0);
    s.lastBrkId = 1196;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1196]) return breakpoint(s, 24, 1196, r0);
  case 24:
    r0 = pxsim_Array__length(s.wallHandlersToRun___20366);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1197;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1197]) return breakpoint(s, 25, 1197, r0);
  case 25:
    s.tmp_1 = tiles_TileMap_getTile__P2750_mk(s);
    s.tmp_1.arg0 = s.arg3;
    s.tmp_3 = if_left_1_mk(s);
    s.tmp_3.arg0 = s.arg2;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "left");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["left"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["left"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 432; s.pc = 27; return s.tmp_3; }
    }
  case 27:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_5 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_5.arg0 = s.arg3;
    s.callLocIdx = 433; s.pc = 28; return s.tmp_5;
  case 28:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_2 >> s.tmp_4);
    s.tmp_1.arg1 = r0;
    s.tmp_7 = if_top_1_mk(s);
    s.tmp_7.arg0 = s.arg2;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "top");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["top"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["top"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 434; s.pc = 29; return s.tmp_7; }
    }
  case 29:
    r0 = s.retval;
    s.tmp_6 = r0;
    s.tmp_9 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_9.arg0 = s.arg3;
    s.callLocIdx = 435; s.pc = 30; return s.tmp_9;
  case 30:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_6 >> s.tmp_8);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 436; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
    s.asTileLocation___20379 = (r0);
    s.lastBrkId = 1198;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1198]) return breakpoint(s, 31, 1198, r0);
  case 31:
    r0 = pxsim_pxtcore_mkAction(2, Sprite_registerObstacle_inline__P20395);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.asTileLocation___20379);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_1.arg0 = s.wallHandlersToRun___20366;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 438; s.pc = 32; return s.tmp_1;
  case 32:
    r0 = s.retval;
  case 5:
  case 6:
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_registerObstacle__P2427.info = {"start":24992,"length":965,"line":817,"column":4,"endLine":837,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"registerObstacle","argumentNames":["this","direction","other","tm"]}

function Sprite_registerObstacle__P2427_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_registerObstacle__P2427, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  collisionHandlers___20334: undefined,
  wallCollisionHandlers___20341: undefined,
  wallHandlersToRun___20366: undefined,
  asTileLocation___20379: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function forEach_inline__P20349(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_0 = r0;
    s.tmp_2 = Sprite_kind__P2408_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 425; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 == s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P20349.info = {"start":25390,"length":26,"line":824,"column":24,"endLine":824,"endColumn":50,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P20349_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P20349, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Sprite_registerObstacle_inline__P20355(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_2_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 2);
      s.callLocIdx = 427; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 2); s.callLocIdx = 427; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 427; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 427; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_registerObstacle_inline__P20355.info = {"start":25443,"length":20,"line":825,"column":25,"endLine":825,"endColumn":45,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function Sprite_registerObstacle_inline__P20355_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_registerObstacle_inline__P20355, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function wallHandlersToRun_inline__P20368(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["spriteKind"];
    s.tmp_0 = r0;
    s.tmp_2 = Sprite_kind__P2408_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 430; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 == s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
wallHandlersToRun_inline__P20368.info = {"start":25649,"length":32,"line":830,"column":24,"endLine":830,"endColumn":56,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function wallHandlersToRun_inline__P20368_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: wallHandlersToRun_inline__P20368, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Sprite_registerObstacle_inline__P20395(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    s.tmp_0.arg2 = s.caps[1];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 3);
      s.callLocIdx = 437; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 3); s.callLocIdx = 437; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 437; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 437; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_registerObstacle_inline__P20395.info = {"start":25889,"length":36,"line":834,"column":29,"endLine":834,"endColumn":65,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function Sprite_registerObstacle_inline__P20395_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_registerObstacle_inline__P20395, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Math_sign__P129(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 197;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[197]) return breakpoint(s, 6, 197, r0);
  case 6:
    r0 = (s.arg0 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 198;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[198]) return breakpoint(s, 7, 198, r0);
  case 7:
    r0 = 0;
    { step = 5; continue; }
  case 1:
  case 2:
    s.lastBrkId = 199;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[199]) return breakpoint(s, 8, 199, r0);
  case 8:
    r0 = (s.arg0 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 200;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[200]) return breakpoint(s, 9, 200, r0);
  case 9:
    r0 = 1;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 201;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[201]) return breakpoint(s, 10, 201, r0);
  case 10:
    r0 = -1;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
Math_sign__P129.info = {"start":16355,"length":125,"line":547,"column":4,"endLine":551,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"sign","argumentNames":["x"]}

function Math_sign__P129_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_sign__P129, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function helpers_arraySome__P107(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___20403 = undefined;
    s.i___20406 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 66;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[66]) return breakpoint(s, 6, 66, r0);
  case 6:
    r0 = pxsim_Array__length(s.arg0);
    s.len___20403 = (r0);
    s.lastBrkId = 67;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[67]) return breakpoint(s, 7, 67, r0);
  case 7:
    s.i___20406 = (0);
    s.lastBrkId = 68;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[68]) return breakpoint(s, 8, 68, r0);
  case 8:
  case 1:
    s.lastBrkId = 69;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[69]) return breakpoint(s, 9, 69, r0);
  case 9:
    r0 = (s.i___20406 < s.len___20403);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 70;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[70]) return breakpoint(s, 10, 70, r0);
  case 10:
    s.tmp_2 = lambda_3_mk(s);
    s.tmp_2.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___20406);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.i___20406;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.callLocIdx = 4; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 71;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[71]) return breakpoint(s, 12, 71, r0);
  case 12:
    r0 = true;
    { step = 5; continue; }
  case 2:
  case 3:
    s.lastBrkId = 72;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[72]) return breakpoint(s, 13, 72, r0);
  case 13:
    r0 = (s.i___20406 + 1);
    s.i___20406 = (r0);
    { step = 1; continue; }
  case 4:
    s.lastBrkId = 73;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[73]) return breakpoint(s, 14, 73, r0);
  case 14:
    r0 = false;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySome__P107.info = {"start":6833,"length":296,"line":238,"column":4,"endLine":244,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySome","argumentNames":["arr","callbackfn"]}

function helpers_arraySome__P107_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySome__P107, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  len___20403: undefined,
  i___20406: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_isOnWall__P2759(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.hbox___19600 = undefined;
    s.left___19603 = undefined;
    s.right___19609 = undefined;
    s.top___19615 = undefined;
    s.bottom___19621 = undefined;
    s.col___19627 = undefined;
    s.row___19633 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2736_VT)) failedCast(r0);
    s.lastBrkId = 1851;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1851]) return breakpoint(s, 8, 1851, r0);
  case 8:
    r0 = s.arg1.fields["_hitbox"];
    s.hbox___19600 = (r0);
    s.lastBrkId = 1852;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1852]) return breakpoint(s, 9, 1852, r0);
  case 9:
    s.tmp_0 = Fx_toIntShifted__P156_mk(s);
    s.tmp_1 = game_Hitbox_left__P2217_mk(s);
    s.tmp_1.arg0 = s.hbox___19600;
    s.callLocIdx = 869; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 870; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 871; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.left___19603 = (r0);
    s.lastBrkId = 1853;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1853]) return breakpoint(s, 13, 1853, r0);
  case 13:
    s.tmp_0 = Fx_toIntShifted__P156_mk(s);
    s.tmp_1 = game_Hitbox_right__P2219_mk(s);
    s.tmp_1.arg0 = s.hbox___19600;
    s.callLocIdx = 872; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 873; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 874; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.right___19609 = (r0);
    s.lastBrkId = 1854;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1854]) return breakpoint(s, 17, 1854, r0);
  case 17:
    s.tmp_0 = Fx_toIntShifted__P156_mk(s);
    s.tmp_1 = game_Hitbox_top__P2218_mk(s);
    s.tmp_1.arg0 = s.hbox___19600;
    s.callLocIdx = 875; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 876; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 877; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.top___19615 = (r0);
    s.lastBrkId = 1855;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1855]) return breakpoint(s, 21, 1855, r0);
  case 21:
    s.tmp_0 = Fx_toIntShifted__P156_mk(s);
    s.tmp_1 = game_Hitbox_bottom__P2220_mk(s);
    s.tmp_1.arg0 = s.hbox___19600;
    s.callLocIdx = 878; s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 879; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 880; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.bottom___19621 = (r0);
    s.lastBrkId = 1856;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1856]) return breakpoint(s, 25, 1856, r0);
  case 25:
    s.col___19627 = (s.left___19603);
    s.lastBrkId = 1857;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1857]) return breakpoint(s, 26, 1857, r0);
  case 26:
  case 1:
    s.lastBrkId = 1858;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1858]) return breakpoint(s, 27, 1858, r0);
  case 27:
    r0 = (s.col___19627 <= s.right___19609);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 1859;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1859]) return breakpoint(s, 28, 1859, r0);
  case 28:
    s.row___19633 = (s.top___19615);
    s.lastBrkId = 1860;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1860]) return breakpoint(s, 29, 1860, r0);
  case 29:
  case 2:
    s.lastBrkId = 1861;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1861]) return breakpoint(s, 30, 1861, r0);
  case 30:
    r0 = (s.row___19633 <= s.bottom___19621);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1862;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1862]) return breakpoint(s, 31, 1862, r0);
  case 31:
    s.tmp_2 = tiles_TileMap_isObstacle__P2757_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.col___19627;
    s.tmp_2.arg2 = s.row___19633;
    s.callLocIdx = 881; s.pc = 32; return s.tmp_2;
  case 32:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1863;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1863]) return breakpoint(s, 33, 1863, r0);
  case 33:
    r0 = true;
    { step = 7; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1864;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1864]) return breakpoint(s, 34, 1864, r0);
  case 34:
    r0 = (s.row___19633 + 1);
    s.row___19633 = (r0);
    { step = 2; continue; }
  case 5:
    s.lastBrkId = 1865;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1865]) return breakpoint(s, 35, 1865, r0);
  case 35:
    r0 = (s.col___19627 + 1);
    s.col___19627 = (r0);
    { step = 1; continue; }
  case 6:
    s.lastBrkId = 1866;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1866]) return breakpoint(s, 36, 1866, r0);
  case 36:
    r0 = false;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_isOnWall__P2759.info = {"start":16873,"length":627,"line":534,"column":8,"endLine":551,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isOnWall","argumentNames":["this","s"]}

function tiles_TileMap_isOnWall__P2759_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_isOnWall__P2759, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  hbox___19600: undefined,
  left___19603: undefined,
  right___19609: undefined,
  top___19615: undefined,
  bottom___19621: undefined,
  col___19627: undefined,
  row___19633: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function MovingSprite_constructor__P2527(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, MovingSprite__C2526_VT)) failedCast(r0);
    r0 = (s.arg0).fields["sprite"] = (s.arg1);
    r0 = (s.arg0).fields["cachedVx"] = (s.arg2);
    r0 = (s.arg0).fields["cachedVy"] = (s.arg3);
    r0 = (s.arg0).fields["dx"] = (s.arg4);
    r0 = (s.arg0).fields["dy"] = (s.arg5);
    r0 = (s.arg0).fields["xStep"] = (s.arg6);
    r0 = (s.arg0).fields["yStep"] = (s.arg7);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
MovingSprite_constructor__P2527.info = {"start":949,"length":313,"line":33,"column":4,"endLine":44,"endColumn":9,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["this","sprite","cachedVx","cachedVy","dx","dy","xStep","yStep"]}

function MovingSprite_constructor__P2527_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: MovingSprite_constructor__P2527, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
} }





function ArcadePhysicsEngine_move__P2540(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.dtMs___20477 = undefined;
    s.dt2___20483 = undefined;
    s.scene___20487 = undefined;
    s.tileMap___20490 = undefined;
    s.movingSprites___20493 = undefined;
    s.MAX_STEP_COUNT___20524 = undefined;
    s.overlapHandlers___20536 = undefined;
    s.selected___20543 = undefined;
    s.buffers___20544 = undefined;
    s.count___20548 = undefined;
    s.currMovers___20558 = undefined;
    s.remainingMovers___20565 = undefined;
    s.ms___20570 = undefined;
    s.unnamed1318___U13 = undefined;
    s.unnamed1319___U14 = undefined;
    s.s___20572 = undefined;
    s.stepX___20665 = undefined;
    s.stepY___20679 = undefined;
    s.bounce___20742 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2528_VT)) failedCast(r0);
    s.lastBrkId = 1364;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1364]) return breakpoint(s, 53, 1364, r0);
  case 53:
    s.tmp_0 = Math_min__P131_mk(s);
    s.tmp_0.arg0 = 100;
    r0 = (s.arg1 * 1000);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 547; s.pc = 54; return s.tmp_0;
  case 54:
    r0 = s.retval;
    s.dtMs___20477 = (r0);
    s.lastBrkId = 1365;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1365]) return breakpoint(s, 55, 1365, r0);
  case 55:
    r0 = pxsim.Math_.idiv(s.dtMs___20477, 2);
    s.dt2___20483 = (r0);
    s.lastBrkId = 1366;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1366]) return breakpoint(s, 56, 1366, r0);
  case 56:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 548; s.pc = 57; return s.tmp_0;
  case 57:
    r0 = s.retval;
    s.scene___20487 = (r0);
    s.lastBrkId = 1367;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1367]) return breakpoint(s, 58, 1367, r0);
  case 58:
    r0 = s.scene___20487.fields["tileMap"];
    s.tileMap___20490 = (r0);
    s.lastBrkId = 1368;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1368]) return breakpoint(s, 59, 1368, r0);
  case 59:
    r0 = pxsim_pxtcore_mkAction(3, movingSprites_inline__P20495);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.dtMs___20477);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.dt2___20483);
    s.tmp_1 = helpers_arrayMap__P106_mk(s);
    r0 = s.arg0.fields["sprites"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 550; s.pc = 60; return s.tmp_1;
  case 60:
    r0 = s.retval;
    s.movingSprites___20493 = (r0);
    s.lastBrkId = 1369;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1369]) return breakpoint(s, 61, 1369, r0);
  case 61:
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    r0 = s.arg0.fields["sprites"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = ArcadePhysicsEngine_move_inline__P20507;
    s.callLocIdx = 554; s.pc = 62; return s.tmp_0;
  case 62:
    r0 = s.retval;
    s.lastBrkId = 1372;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1372]) return breakpoint(s, 63, 1372, r0);
  case 63:
    s.tmp_0 = sprites_SpriteMap_clear__P2453_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 555; s.pc = 64; return s.tmp_0;
  case 64:
    r0 = s.retval;
    s.lastBrkId = 1373;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1373]) return breakpoint(s, 65, 1373, r0);
  case 65:
    s.tmp_0 = sprites_SpriteMap_resizeBuckets__P2452_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["sprites"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 556; s.pc = 66; return s.tmp_0;
  case 66:
    r0 = s.retval;
    s.lastBrkId = 1374;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1374]) return breakpoint(s, 67, 1374, r0);
  case 67:
    s.tmp_0 = Fx_toInt__P172_mk(s);
    s.tmp_1 = Fx_idiv__P163_mk(s);
    s.tmp_2 = Fx_imul__P161_mk(s);
    s.tmp_3 = Fx_div__P162_mk(s);
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_3.arg0 = r0;
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 557; s.pc = 71; return s.tmp_3;
  case 71:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.dtMs___20477;
    s.callLocIdx = 558; s.pc = 70; return s.tmp_2;
  case 70:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 1000;
    s.callLocIdx = 559; s.pc = 69; return s.tmp_1;
  case 69:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 560; s.pc = 68; return s.tmp_0;
  case 68:
    r0 = s.retval;
    s.MAX_STEP_COUNT___20524 = (r0);
    s.lastBrkId = 1375;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1375]) return breakpoint(s, 72, 1375, r0);
  case 72:
    s.tmp_0 = helpers_arraySlice__P115_mk(s);
    r0 = s.scene___20487.fields["overlapHandlers"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = undefined;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 561; s.pc = 73; return s.tmp_0;
  case 73:
    r0 = s.retval;
    s.overlapHandlers___20536 = (r0);
    s.lastBrkId = 1376;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1376]) return breakpoint(s, 74, 1376, r0);
  case 74:
    s.selected___20543 = (0);
    s.lastBrkId = 1377;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1377]) return breakpoint(s, 75, 1377, r0);
  case 75:
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.movingSprites___20493);
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.buffers___20544 = (s.tmp_0);
    s.lastBrkId = 1378;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1378]) return breakpoint(s, 76, 1378, r0);
  case 76:
    s.count___20548 = (0);
    s.lastBrkId = 1379;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1379]) return breakpoint(s, 77, 1379, r0);
  case 77:
  case 1:
    s.lastBrkId = 1380;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1380]) return breakpoint(s, 78, 1380, r0);
  case 78:
    r0 = (s.count___20548 < s.MAX_STEP_COUNT___20524);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_Array__getAt(s.buffers___20544, s.selected___20543);
    s.tmp_2 = r0;
    r0 = pxsim_Array__length(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 52; continue; }
    s.lastBrkId = 1381;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1381]) return breakpoint(s, 79, 1381, r0);
  case 79:
    r0 = pxsim_Array__getAt(s.buffers___20544, s.selected___20543);
    s.currMovers___20558 = (r0);
    s.lastBrkId = 1382;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1382]) return breakpoint(s, 80, 1382, r0);
  case 80:
    r0 = (s.selected___20543 ^ 1);
    s.selected___20543 = (r0);
    s.lastBrkId = 1383;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1383]) return breakpoint(s, 81, 1383, r0);
  case 81:
    r0 = pxsim_Array__getAt(s.buffers___20544, s.selected___20543);
    s.remainingMovers___20565 = (r0);
    s.lastBrkId = 1384;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1384]) return breakpoint(s, 82, 1384, r0);
  case 82:
    s.ms___20570 = (undefined);
    s.unnamed1318___U13 = (s.currMovers___20558);
    s.unnamed1319___U14 = (0);
    s.lastBrkId = 1385;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1385]) return breakpoint(s, 83, 1385, r0);
  case 83:
  case 4:
    s.tmp_0 = r0 = s.unnamed1319___U14;
    r0 = pxsim_Array__length(s.unnamed1318___U13);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 49; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1318___U13, s.unnamed1319___U14);
    s.ms___20570 = (r0);
    s.lastBrkId = 1386;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1386]) return breakpoint(s, 84, 1386, r0);
  case 84:
    s.lastBrkId = 1387;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1387]) return breakpoint(s, 85, 1387, r0);
  case 85:
    r0 = s.ms___20570.fields["sprite"];
    s.s___20572 = (r0);
    s.lastBrkId = 1388;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1388]) return breakpoint(s, 86, 1388, r0);
  case 86:
    r0 = s.ms___20570.fields["cachedVx"];
    s.tmp_1 = r0;
    r0 = s.s___20572.fields["_vx"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 !== s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1389;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1389]) return breakpoint(s, 87, 1389, r0);
  case 87:
    r0 = s.s___20572.fields["_vx"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 == 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1390;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1390]) return breakpoint(s, 88, 1390, r0);
  case 88:
    r0 = (s.ms___20570).fields["dx"] = (0);
    { step = 14; continue; }
  case 5:
    s.lastBrkId = 1391;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1391]) return breakpoint(s, 89, 1391, r0);
  case 89:
    r0 = s.s___20572.fields["_vx"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    r0 = s.ms___20570.fields["cachedVx"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
  case 7:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 8; continue; }
    r0 = s.tmp_3;
    { step = 11; continue; }
  case 8:
    r0 = s.s___20572.fields["_vx"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 > 0);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_4;
    { step = 10; continue; }
  case 9:
    r0 = s.ms___20570.fields["cachedVx"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 < 0);
  case 10:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 11:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 1392;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1392]) return breakpoint(s, 90, 1392, r0);
  case 90:
    s.tmp_9 = r0 = s.ms___20570;
    s.tmp_11 = Fx_neg__P155_mk(s);
    r0 = s.ms___20570.fields["dx"];
    s.tmp_11.arg0 = r0;
    s.callLocIdx = 562; s.pc = 91; return s.tmp_11;
  case 91:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_9).fields["dx"] = (s.tmp_10);
    s.lastBrkId = 1393;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1393]) return breakpoint(s, 92, 1393, r0);
  case 92:
    s.tmp_0 = r0 = s.ms___20570;
    s.tmp_2 = Fx_neg__P155_mk(s);
    r0 = s.ms___20570.fields["xStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 563; s.pc = 93; return s.tmp_2;
  case 93:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["xStep"] = (s.tmp_1);
  case 12:
  case 13:
  case 14:
    s.lastBrkId = 1394;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1394]) return breakpoint(s, 94, 1394, r0);
  case 94:
    r0 = s.s___20572.fields["_vx"];
    s.tmp_0 = r0;
    r0 = (s.ms___20570).fields["cachedVx"] = (s.tmp_0);
  case 15:
  case 16:
    s.lastBrkId = 1395;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1395]) return breakpoint(s, 95, 1395, r0);
  case 95:
    r0 = s.ms___20570.fields["cachedVy"];
    s.tmp_1 = r0;
    r0 = s.s___20572.fields["_vy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 !== s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 27; continue; }
    s.lastBrkId = 1396;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1396]) return breakpoint(s, 96, 1396, r0);
  case 96:
    r0 = s.s___20572.fields["_vy"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 == 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 17; continue; }
    s.lastBrkId = 1397;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1397]) return breakpoint(s, 97, 1397, r0);
  case 97:
    r0 = (s.ms___20570).fields["dy"] = (0);
    { step = 26; continue; }
  case 17:
    s.lastBrkId = 1398;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1398]) return breakpoint(s, 98, 1398, r0);
  case 98:
    r0 = s.s___20572.fields["_vy"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 18; continue; }
    r0 = s.tmp_0;
    { step = 19; continue; }
  case 18:
    r0 = s.ms___20570.fields["cachedVy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
  case 19:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 20; continue; }
    r0 = s.tmp_3;
    { step = 23; continue; }
  case 20:
    r0 = s.s___20572.fields["_vy"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 > 0);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 21; continue; }
    r0 = s.tmp_4;
    { step = 22; continue; }
  case 21:
    r0 = s.ms___20570.fields["cachedVy"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 < 0);
  case 22:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 23:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 24; continue; }
    s.lastBrkId = 1399;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1399]) return breakpoint(s, 99, 1399, r0);
  case 99:
    s.tmp_9 = r0 = s.ms___20570;
    s.tmp_11 = Fx_neg__P155_mk(s);
    r0 = s.ms___20570.fields["dy"];
    s.tmp_11.arg0 = r0;
    s.callLocIdx = 564; s.pc = 100; return s.tmp_11;
  case 100:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_9).fields["dy"] = (s.tmp_10);
    s.lastBrkId = 1400;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1400]) return breakpoint(s, 101, 1400, r0);
  case 101:
    s.tmp_0 = r0 = s.ms___20570;
    s.tmp_2 = Fx_neg__P155_mk(s);
    r0 = s.ms___20570.fields["yStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 565; s.pc = 102; return s.tmp_2;
  case 102:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["yStep"] = (s.tmp_1);
  case 24:
  case 25:
  case 26:
    s.lastBrkId = 1401;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1401]) return breakpoint(s, 103, 1401, r0);
  case 103:
    r0 = s.s___20572.fields["_vy"];
    s.tmp_0 = r0;
    r0 = (s.ms___20570).fields["cachedVy"] = (s.tmp_0);
  case 27:
  case 28:
    s.lastBrkId = 1402;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1402]) return breakpoint(s, 104, 1402, r0);
  case 104:
    s.tmp_2 = Fx_abs__P165_mk(s);
    r0 = s.ms___20570.fields["xStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 566; s.pc = 105; return s.tmp_2;
  case 105:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_abs__P165_mk(s);
    r0 = s.ms___20570.fields["dx"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 567; s.pc = 106; return s.tmp_4;
  case 106:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 29; continue; }
    r0 = s.ms___20570.fields["dx"];
    { step = 30; continue; }
  case 29:
    r0 = s.ms___20570.fields["xStep"];
  case 30:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.stepX___20665 = (s.tmp_5);
    s.lastBrkId = 1403;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1403]) return breakpoint(s, 107, 1403, r0);
  case 107:
    s.tmp_2 = Fx_abs__P165_mk(s);
    r0 = s.ms___20570.fields["yStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 568; s.pc = 108; return s.tmp_2;
  case 108:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_abs__P165_mk(s);
    r0 = s.ms___20570.fields["dy"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 569; s.pc = 109; return s.tmp_4;
  case 109:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 31; continue; }
    r0 = s.ms___20570.fields["dy"];
    { step = 32; continue; }
  case 31:
    r0 = s.ms___20570.fields["yStep"];
  case 32:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.stepY___20679 = (s.tmp_5);
    s.lastBrkId = 1404;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1404]) return breakpoint(s, 110, 1404, r0);
  case 110:
    s.tmp_0 = r0 = s.ms___20570;
    s.tmp_2 = Fx_sub__P159_mk(s);
    r0 = s.ms___20570.fields["dx"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.stepX___20665;
    s.callLocIdx = 570; s.pc = 111; return s.tmp_2;
  case 111:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dx"] = (s.tmp_1);
    s.lastBrkId = 1405;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1405]) return breakpoint(s, 112, 1405, r0);
  case 112:
    s.tmp_0 = r0 = s.ms___20570;
    s.tmp_2 = Fx_sub__P159_mk(s);
    r0 = s.ms___20570.fields["dy"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.stepY___20679;
    s.callLocIdx = 571; s.pc = 113; return s.tmp_2;
  case 113:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dy"] = (s.tmp_1);
    s.lastBrkId = 1406;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1406]) return breakpoint(s, 114, 1406, r0);
  case 114:
    r0 = s.s___20572.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.s___20572).fields["_lastX"] = (s.tmp_0);
    s.lastBrkId = 1407;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1407]) return breakpoint(s, 115, 1407, r0);
  case 115:
    r0 = s.s___20572.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.s___20572).fields["_lastY"] = (s.tmp_0);
    s.lastBrkId = 1408;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1408]) return breakpoint(s, 116, 1408, r0);
  case 116:
    s.tmp_0 = r0 = s.s___20572;
    s.tmp_2 = Fx_add__P157_mk(s);
    r0 = s.s___20572.fields["_x"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.stepX___20665;
    s.callLocIdx = 572; s.pc = 117; return s.tmp_2;
  case 117:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.lastBrkId = 1409;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1409]) return breakpoint(s, 118, 1409, r0);
  case 118:
    s.tmp_0 = r0 = s.s___20572;
    s.tmp_2 = Fx_add__P157_mk(s);
    r0 = s.s___20572.fields["_y"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.stepY___20679;
    s.callLocIdx = 573; s.pc = 119; return s.tmp_2;
  case 119:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    s.lastBrkId = 1410;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1410]) return breakpoint(s, 120, 1410, r0);
  case 120:
    r0 = s.s___20572.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 4610);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 33; continue; }
    s.lastBrkId = 1411;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1411]) return breakpoint(s, 121, 1411, r0);
  case 121:
    s.tmp_4 = sprites_SpriteMap_insertAABB__P2454_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.s___20572;
    s.callLocIdx = 574; s.pc = 122; return s.tmp_4;
  case 122:
    r0 = s.retval;
  case 33:
  case 34:
    s.lastBrkId = 1412;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1412]) return breakpoint(s, 123, 1412, r0);
  case 123:
    s.tmp_0 = r0 = s.tileMap___20490;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 35; continue; }
    r0 = s.tmp_0;
    { step = 36; continue; }
  case 35:
    s.tmp_1 = tiles_TileMap_enabled__P2748_mk(s);
    s.tmp_1.arg0 = s.tileMap___20490;
    s.callLocIdx = 575; s.pc = 124; return s.tmp_1;
  case 124:
    r0 = s.retval;
  case 36:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 37; continue; }
    s.lastBrkId = 1413;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1413]) return breakpoint(s, 125, 1413, r0);
  case 125:
    s.tmp_3 = ArcadePhysicsEngine_tilemapCollisions__P4993_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.ms___20570;
    s.tmp_3.arg2 = s.tileMap___20490;
    s.callLocIdx = 576; s.pc = 126; return s.tmp_3;
  case 126:
    r0 = s.retval;
  case 37:
  case 38:
    s.lastBrkId = 1414;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1414]) return breakpoint(s, 127, 1414, r0);
  case 127:
    r0 = s.s___20572.fields["flags"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 & 32);
    s.bounce___20742 = (r0);
    s.lastBrkId = 1415;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1415]) return breakpoint(s, 128, 1415, r0);
  case 128:
    r0 = s.s___20572.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 8);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 39; continue; }
    r0 = s.tmp_0;
    { step = 42; continue; }
  case 39:
    s.tmp_2 = r0 = s.bounce___20742;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 40; continue; }
    r0 = s.tmp_2;
    { step = 41; continue; }
  case 40:
    r0 = pxsim_numops_toBoolDecr(s.tileMap___20490);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 41:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
  case 42:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 43; continue; }
    s.lastBrkId = 1416;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1416]) return breakpoint(s, 129, 1416, r0);
  case 129:
    s.tmp_6 = ArcadePhysicsEngine_screenEdgeCollisions__P4992_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.tmp_6.arg1 = s.ms___20570;
    s.tmp_6.arg2 = s.bounce___20742;
    r0 = s.scene___20487.fields["camera"];
    s.tmp_6.arg3 = r0;
    s.callLocIdx = 577; s.pc = 130; return s.tmp_6;
  case 130:
    r0 = s.retval;
  case 43:
  case 44:
    s.lastBrkId = 1417;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1417]) return breakpoint(s, 131, 1417, r0);
  case 131:
    s.tmp_2 = Fx_abs__P165_mk(s);
    r0 = s.ms___20570.fields["dx"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 578; s.pc = 132; return s.tmp_2;
  case 132:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > globals.MIN_MOVE_GAP___2522);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 45; continue; }
    r0 = s.tmp_0;
    { step = 46; continue; }
  case 45:
    s.tmp_4 = Fx_abs__P165_mk(s);
    r0 = s.ms___20570.fields["dy"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 579; s.pc = 133; return s.tmp_4;
  case 133:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > globals.MIN_MOVE_GAP___2522);
  case 46:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 47; continue; }
    s.lastBrkId = 1418;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1418]) return breakpoint(s, 134, 1418, r0);
  case 134:
    r0 = pxsim_Array__push(s.remainingMovers___20565, s.ms___20570);
  case 47:
  case 48:
    r0 = (s.unnamed1319___U14 + 1);
    s.unnamed1319___U14 = (r0);
    { step = 4; continue; }
  case 49:
    s.unnamed1318___U13 = (undefined);
    s.lastBrkId = 1419;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1419]) return breakpoint(s, 135, 1419, r0);
  case 135:
    s.tmp_0 = ArcadePhysicsEngine_spriteCollisions__P4991_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.currMovers___20558;
    s.tmp_0.arg2 = s.overlapHandlers___20536;
    s.callLocIdx = 580; s.pc = 136; return s.tmp_0;
  case 136:
    r0 = s.retval;
    s.lastBrkId = 1420;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1420]) return breakpoint(s, 137, 1420, r0);
  case 137:
  case 50:
    s.lastBrkId = 1421;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1421]) return breakpoint(s, 138, 1421, r0);
  case 138:
    r0 = pxsim_Array__length(s.currMovers___20558);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 51; continue; }
    s.lastBrkId = 1422;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1422]) return breakpoint(s, 139, 1422, r0);
  case 139:
    r0 = pxsim_Array_.pop(s.currMovers___20558);
    { step = 50; continue; }
  case 51:
    s.lastBrkId = 1423;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1423]) return breakpoint(s, 140, 1423, r0);
  case 140:
    r0 = (s.count___20548 + 1);
    s.count___20548 = (r0);
    { step = 1; continue; }
  case 52:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_move__P2540.info = {"start":2822,"length":4105,"line":112,"column":4,"endLine":215,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"move","argumentNames":["this","dt"]}

function ArcadePhysicsEngine_move__P2540_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_move__P2540, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  dtMs___20477: undefined,
  dt2___20483: undefined,
  scene___20487: undefined,
  tileMap___20490: undefined,
  movingSprites___20493: undefined,
  MAX_STEP_COUNT___20524: undefined,
  overlapHandlers___20536: undefined,
  selected___20543: undefined,
  buffers___20544: undefined,
  count___20548: undefined,
  currMovers___20558: undefined,
  remainingMovers___20565: undefined,
  ms___20570: undefined,
  unnamed1318___U13: undefined,
  unnamed1319___U14: undefined,
  s___20572: undefined,
  stepX___20665: undefined,
  stepY___20679: undefined,
  bounce___20742: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function movingSprites_inline__P20495(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = ArcadePhysicsEngine_createMovingSprite__P4990_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.caps[1];
    s.tmp_0.arg3 = s.caps[2];
    s.callLocIdx = 549; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
movingSprites_inline__P20495.info = {"start":3181,"length":52,"line":121,"column":17,"endLine":121,"endColumn":69,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["sprite"]}

function movingSprites_inline__P20495_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: movingSprites_inline__P20495, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_move_inline__P20507(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1370;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1370]) return breakpoint(s, 5, 1370, r0);
  case 5:
    s.tmp_1 = Sprite_vx__P2359_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 551; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = Sprite_vy__P2361_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 552; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1371;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1371]) return breakpoint(s, 8, 1371, r0);
  case 8:
    s.tmp_4 = Sprite_clearObstacles__P2426_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 553; s.pc = 9; return s.tmp_4;
  case 9:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_move_inline__P20507.info = {"start":3316,"length":66,"line":124,"column":29,"endLine":126,"endColumn":9,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["s"]}

function ArcadePhysicsEngine_move_inline__P20507_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_move_inline__P20507, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_screenEdgeCollisions__P4992(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___21315 = undefined;
    s.offset___21330 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2528_VT)) failedCast(r0);
    s.lastBrkId = 1489;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1489]) return breakpoint(s, 21, 1489, r0);
  case 21:
    r0 = s.arg1.fields["sprite"];
    s.s___21315 = (r0);
    s.lastBrkId = 1490;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1490]) return breakpoint(s, 22, 1490, r0);
  case 22:
    s.tmp_3 = Sprite_isStatic__P2396_mk(s);
    s.tmp_3.arg0 = s.s___21315;
    s.callLocIdx = 624; s.pc = 23; return s.tmp_3;
  case 23:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1491;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1491]) return breakpoint(s, 24, 1491, r0);
  case 24:
    s.tmp_4 = Sprite__C2342_v4_1_mk(s);
    s.tmp_4.arg0 = s.s___21315;
    if (!checkSubtype(s.tmp_4.arg0, Sprite__C2342_VT)) failedCast(s.tmp_4.arg0);
    s.tmp_4.fn = s.tmp_4.arg0.vtable.methods.setHitbox;
    s.pc = 25; return s.tmp_4;
  case 25:
    r0 = s.retval;
  case 1:
  case 2:
    s.lastBrkId = 1492;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1492]) return breakpoint(s, 26, 1492, r0);
  case 26:
    s.tmp_3 = scene_Camera_isUpdated__P2798_mk(s);
    s.tmp_3.arg0 = s.arg3;
    s.callLocIdx = 625; s.pc = 27; return s.tmp_3;
  case 27:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1493;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1493]) return breakpoint(s, 28, 1493, r0);
  case 28:
    s.tmp_4 = scene_Camera_update__P2799_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.callLocIdx = 626; s.pc = 29; return s.tmp_4;
  case 29:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 1494;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1494]) return breakpoint(s, 30, 1494, r0);
  case 30:
    s.tmp_1 = Fx_toFloat__P173_mk(s);
    s.tmp_2 = game_Hitbox_left__P2217_mk(s);
    r0 = s.s___21315.fields["_hitbox"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 627; s.pc = 32; return s.tmp_2;
  case 32:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 628; s.pc = 31; return s.tmp_1;
  case 31:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_4 = scene_Camera_offsetX__P2787_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.callLocIdx = 629; s.pc = 33; return s.tmp_4;
  case 33:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_0 - s.tmp_3);
    s.offset___21330 = (r0);
    s.lastBrkId = 1495;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1495]) return breakpoint(s, 34, 1495, r0);
  case 34:
    r0 = (s.offset___21330 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1496;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1496]) return breakpoint(s, 35, 1496, r0);
  case 35:
    s.tmp_1 = Sprite_left__P2401_mk(s);
    s.tmp_2 = r0 = s.s___21315;
    s.tmp_1.arg0 = r0;
    s.tmp_4 = Sprite_left__P2400_mk(s);
    s.tmp_4.arg0 = s.tmp_2;
    s.callLocIdx = 630; s.pc = 37; return s.tmp_4;
  case 37:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - s.offset___21330);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 631; s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.lastBrkId = 1497;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1497]) return breakpoint(s, 38, 1497, r0);
  case 38:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1498;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1498]) return breakpoint(s, 39, 1498, r0);
  case 39:
    s.tmp_0 = Sprite_vx__P2360_mk(s);
    s.tmp_0.arg0 = s.s___21315;
    s.tmp_2 = Sprite_vx__P2359_mk(s);
    s.tmp_2.arg0 = s.s___21315;
    s.callLocIdx = 632; s.pc = 41; return s.tmp_2;
  case 41:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 633; s.pc = 40; return s.tmp_0;
  case 40:
    r0 = s.retval;
  case 5:
  case 6:
    { step = 12; continue; }
  case 7:
    s.lastBrkId = 1499;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1499]) return breakpoint(s, 42, 1499, r0);
  case 42:
    s.tmp_3 = Fx_toFloat__P173_mk(s);
    s.tmp_4 = game_Hitbox_right__P2219_mk(s);
    r0 = s.s___21315.fields["_hitbox"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 634; s.pc = 44; return s.tmp_4;
  case 44:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 635; s.pc = 43; return s.tmp_3;
  case 43:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_6 = scene_Camera_offsetX__P2787_mk(s);
    s.tmp_6.arg0 = s.arg3;
    s.callLocIdx = 636; s.pc = 45; return s.tmp_6;
  case 45:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_2 - s.tmp_5);
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___2033);
    s.tmp_7 = r0;
    r0 = (s.tmp_1 - s.tmp_7);
    s.tmp_0 = r0;
    s.offset___21330 = (r0);
    r0 = (s.tmp_0 > 0);
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 1500;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1500]) return breakpoint(s, 46, 1500, r0);
  case 46:
    s.tmp_9 = Sprite_right__P2403_mk(s);
    s.tmp_10 = r0 = s.s___21315;
    s.tmp_9.arg0 = r0;
    s.tmp_12 = Sprite_right__P2402_mk(s);
    s.tmp_12.arg0 = s.tmp_10;
    s.callLocIdx = 637; s.pc = 48; return s.tmp_12;
  case 48:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_11 - s.offset___21330);
    s.tmp_9.arg1 = r0;
    s.callLocIdx = 638; s.pc = 47; return s.tmp_9;
  case 47:
    r0 = s.retval;
    s.lastBrkId = 1501;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1501]) return breakpoint(s, 49, 1501, r0);
  case 49:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 1502;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1502]) return breakpoint(s, 50, 1502, r0);
  case 50:
    s.tmp_0 = Sprite_vx__P2360_mk(s);
    s.tmp_0.arg0 = s.s___21315;
    s.tmp_2 = Sprite_vx__P2359_mk(s);
    s.tmp_2.arg0 = s.s___21315;
    s.callLocIdx = 639; s.pc = 52; return s.tmp_2;
  case 52:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 640; s.pc = 51; return s.tmp_0;
  case 51:
    r0 = s.retval;
  case 8:
  case 9:
  case 10:
  case 11:
  case 12:
    s.lastBrkId = 1503;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1503]) return breakpoint(s, 53, 1503, r0);
  case 53:
    s.tmp_2 = Fx_toFloat__P173_mk(s);
    s.tmp_3 = game_Hitbox_top__P2218_mk(s);
    r0 = s.s___21315.fields["_hitbox"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 641; s.pc = 55; return s.tmp_3;
  case 55:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 642; s.pc = 54; return s.tmp_2;
  case 54:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_5 = scene_Camera_offsetY__P2789_mk(s);
    s.tmp_5.arg0 = s.arg3;
    s.callLocIdx = 643; s.pc = 56; return s.tmp_5;
  case 56:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_1 - s.tmp_4);
    s.tmp_0 = r0;
    s.offset___21330 = (r0);
    r0 = (s.tmp_0 < 0);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1504;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1504]) return breakpoint(s, 57, 1504, r0);
  case 57:
    s.tmp_7 = Sprite_top__P2405_mk(s);
    s.tmp_8 = r0 = s.s___21315;
    s.tmp_7.arg0 = r0;
    s.tmp_10 = Sprite_top__P2404_mk(s);
    s.tmp_10.arg0 = s.tmp_8;
    s.callLocIdx = 644; s.pc = 59; return s.tmp_10;
  case 59:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_9 - s.offset___21330);
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 645; s.pc = 58; return s.tmp_7;
  case 58:
    r0 = s.retval;
    s.lastBrkId = 1505;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1505]) return breakpoint(s, 60, 1505, r0);
  case 60:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1506;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1506]) return breakpoint(s, 61, 1506, r0);
  case 61:
    s.tmp_0 = Sprite_vy__P2362_mk(s);
    s.tmp_0.arg0 = s.s___21315;
    s.tmp_2 = Sprite_vy__P2361_mk(s);
    s.tmp_2.arg0 = s.s___21315;
    s.callLocIdx = 646; s.pc = 63; return s.tmp_2;
  case 63:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 647; s.pc = 62; return s.tmp_0;
  case 62:
    r0 = s.retval;
  case 13:
  case 14:
    { step = 20; continue; }
  case 15:
    s.lastBrkId = 1507;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1507]) return breakpoint(s, 64, 1507, r0);
  case 64:
    s.tmp_3 = Fx_toFloat__P173_mk(s);
    s.tmp_4 = game_Hitbox_bottom__P2220_mk(s);
    r0 = s.s___21315.fields["_hitbox"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 648; s.pc = 66; return s.tmp_4;
  case 66:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 649; s.pc = 65; return s.tmp_3;
  case 65:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_6 = scene_Camera_offsetY__P2789_mk(s);
    s.tmp_6.arg0 = s.arg3;
    s.callLocIdx = 650; s.pc = 67; return s.tmp_6;
  case 67:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_2 - s.tmp_5);
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___2033);
    s.tmp_7 = r0;
    r0 = (s.tmp_1 - s.tmp_7);
    s.tmp_0 = r0;
    s.offset___21330 = (r0);
    r0 = (s.tmp_0 > 0);
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 1508;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1508]) return breakpoint(s, 68, 1508, r0);
  case 68:
    s.tmp_9 = Sprite_bottom__P2407_mk(s);
    s.tmp_10 = r0 = s.s___21315;
    s.tmp_9.arg0 = r0;
    s.tmp_12 = Sprite_bottom__P2406_mk(s);
    s.tmp_12.arg0 = s.tmp_10;
    s.callLocIdx = 651; s.pc = 70; return s.tmp_12;
  case 70:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_11 - s.offset___21330);
    s.tmp_9.arg1 = r0;
    s.callLocIdx = 652; s.pc = 69; return s.tmp_9;
  case 69:
    r0 = s.retval;
    s.lastBrkId = 1509;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1509]) return breakpoint(s, 71, 1509, r0);
  case 71:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 16; continue; }
    s.lastBrkId = 1510;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1510]) return breakpoint(s, 72, 1510, r0);
  case 72:
    s.tmp_0 = Sprite_vy__P2362_mk(s);
    s.tmp_0.arg0 = s.s___21315;
    s.tmp_2 = Sprite_vy__P2361_mk(s);
    s.tmp_2.arg0 = s.s___21315;
    s.callLocIdx = 653; s.pc = 74; return s.tmp_2;
  case 74:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 654; s.pc = 73; return s.tmp_0;
  case 73:
    r0 = s.retval;
  case 16:
  case 17:
  case 18:
  case 19:
  case 20:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_screenEdgeCollisions__P4992.info = {"start":12018,"length":905,"line":355,"column":4,"endLine":377,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"screenEdgeCollisions","argumentNames":["this","movingSprite","bounce","camera"]}

function ArcadePhysicsEngine_screenEdgeCollisions__P4992_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_screenEdgeCollisions__P4992, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  s___21315: undefined,
  offset___21330: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function scene_Camera_isUpdated__P2798(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2782_VT)) failedCast(r0);
    s.lastBrkId = 1890;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1890]) return breakpoint(s, 5, 1890, r0);
  case 5:
    r0 = s.arg0.fields["sprite"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 1:
    s.tmp_5 = Sprite_x__P2355_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 897; s.pc = 6; return s.tmp_5;
  case 6:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = s.arg0.fields["_lastUpdatedSpriteX"];
    s.tmp_6 = r0;
    r0 = (s.tmp_4 === s.tmp_6);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_3;
    { step = 3; continue; }
  case 2:
    s.tmp_8 = Sprite_y__P2357_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_8.arg0 = r0;
    s.callLocIdx = 898; s.pc = 7; return s.tmp_8;
  case 7:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = s.arg0.fields["_lastUpdatedSpriteY"];
    s.tmp_9 = r0;
    r0 = (s.tmp_7 === s.tmp_9);
  case 3:
    // jmp value (already in r0)
    s.tmp_10 = r0;
    r0 = s.tmp_10;
  case 4:
    // jmp value (already in r0)
    s.tmp_11 = r0;
    r0 = s.tmp_11;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_isUpdated__P2798.info = {"start":2403,"length":150,"line":79,"column":8,"endLine":81,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"isUpdated","argumentNames":["this"]}

function scene_Camera_isUpdated__P2798_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_isUpdated__P2798, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  arg0: undefined,
} }





function Sprite_bottom__P2407(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1126;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1126]) return breakpoint(s, 1, 1126, r0);
  case 1:
    s.tmp_0 = Sprite_top__P2405_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Sprite_height__P2399_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 372; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 373; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_bottom__P2407.info = {"start":12204,"length":73,"line":440,"column":4,"endLine":442,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"bottom","argumentNames":["this","value"]}

function Sprite_bottom__P2407_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_bottom__P2407, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_bottom__P2406(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1125;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1125]) return breakpoint(s, 1, 1125, r0);
  case 1:
    s.tmp_1 = Sprite_top__P2404_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 370; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = Sprite_height__P2399_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 371; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_bottom__P2406.info = {"start":12052,"length":59,"line":435,"column":4,"endLine":437,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"bottom","argumentNames":["this"]}
Sprite_bottom__P2406.isGetter = true;

function Sprite_bottom__P2406_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_bottom__P2406, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function Sprite_right__P2403(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1121;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1121]) return breakpoint(s, 1, 1121, r0);
  case 1:
    s.tmp_0 = Sprite_left__P2401_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Sprite_width__P2398_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 364; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 365; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_right__P2403.info = {"start":11367,"length":71,"line":410,"column":4,"endLine":412,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"right","argumentNames":["this","value"]}

function Sprite_right__P2403_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_right__P2403, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_right__P2402(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1120;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1120]) return breakpoint(s, 1, 1120, r0);
  case 1:
    s.tmp_1 = Sprite_left__P2400_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 362; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = Sprite_width__P2398_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 363; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_right__P2402.info = {"start":11218,"length":57,"line":405,"column":4,"endLine":407,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"right","argumentNames":["this"]}
Sprite_right__P2402.isGetter = true;

function Sprite_right__P2402_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_right__P2402, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_spriteCollisions__P4991(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ms___20799 = undefined;
    s.unnamed1320___U1 = undefined;
    s.unnamed1321___U2 = undefined;
    s.sprite___20801 = undefined;
    s.overSprites___20808 = undefined;
    s.overlapper___20816 = undefined;
    s.unnamed1322___U6 = undefined;
    s.unnamed1323___U7 = undefined;
    s.thisKind___20822 = undefined;
    s.otherKind___20826 = undefined;
    s.higher___20839 = undefined;
    s.lower___20848 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2528_VT)) failedCast(r0);
    s.lastBrkId = 1461;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1461]) return breakpoint(s, 22, 1461, r0);
  case 22:
    s.lastBrkId = 1462;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1462]) return breakpoint(s, 23, 1462, r0);
  case 23:
    r0 = pxsim_Array__length(s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1463;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1463]) return breakpoint(s, 24, 1463, r0);
  case 24:
    { step = 21; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1464;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1464]) return breakpoint(s, 25, 1464, r0);
  case 25:
    s.ms___20799 = (undefined);
    s.unnamed1320___U1 = (s.arg1);
    s.unnamed1321___U2 = (0);
    s.lastBrkId = 1465;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1465]) return breakpoint(s, 26, 1465, r0);
  case 26:
  case 3:
    s.tmp_0 = r0 = s.unnamed1321___U2;
    r0 = pxsim_Array__length(s.unnamed1320___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 20; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1320___U1, s.unnamed1321___U2);
    s.ms___20799 = (r0);
    s.lastBrkId = 1466;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1466]) return breakpoint(s, 27, 1466, r0);
  case 27:
    s.lastBrkId = 1467;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1467]) return breakpoint(s, 28, 1467, r0);
  case 28:
    r0 = s.ms___20799.fields["sprite"];
    s.sprite___20801 = (r0);
    s.lastBrkId = 1468;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1468]) return breakpoint(s, 29, 1468, r0);
  case 29:
    r0 = s.sprite___20801.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4610);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1469;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1469]) return breakpoint(s, 30, 1469, r0);
  case 30:
    { step = 19; continue; }
  case 4:
  case 5:
    s.lastBrkId = 1470;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1470]) return breakpoint(s, 31, 1470, r0);
  case 31:
    s.tmp_2 = sprites_SpriteMap_overlaps__P2450_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_2.arg0 = r0;
    r0 = s.ms___20799.fields["sprite"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 618; s.pc = 32; return s.tmp_2;
  case 32:
    r0 = s.retval;
    s.overSprites___20808 = (r0);
    s.lastBrkId = 1471;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1471]) return breakpoint(s, 33, 1471, r0);
  case 33:
    s.overlapper___20816 = (undefined);
    s.unnamed1322___U6 = (s.overSprites___20808);
    s.unnamed1323___U7 = (0);
    s.lastBrkId = 1472;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1472]) return breakpoint(s, 34, 1472, r0);
  case 34:
  case 6:
    s.tmp_0 = r0 = s.unnamed1323___U7;
    r0 = pxsim_Array__length(s.unnamed1322___U6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 18; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1322___U6, s.unnamed1323___U7);
    s.overlapper___20816 = (r0);
    s.lastBrkId = 1473;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1473]) return breakpoint(s, 35, 1473, r0);
  case 35:
    s.lastBrkId = 1474;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1474]) return breakpoint(s, 36, 1474, r0);
  case 36:
    r0 = s.overlapper___20816.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 4610);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1475;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1475]) return breakpoint(s, 37, 1475, r0);
  case 37:
    { step = 17; continue; }
  case 7:
  case 8:
    s.lastBrkId = 1476;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1476]) return breakpoint(s, 38, 1476, r0);
  case 38:
    s.tmp_4 = Sprite_kind__P2408_mk(s);
    s.tmp_4.arg0 = s.sprite___20801;
    s.callLocIdx = 619; s.pc = 39; return s.tmp_4;
  case 39:
    r0 = s.retval;
    s.thisKind___20822 = (r0);
    s.lastBrkId = 1477;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1477]) return breakpoint(s, 40, 1477, r0);
  case 40:
    s.tmp_0 = Sprite_kind__P2408_mk(s);
    s.tmp_0.arg0 = s.overlapper___20816;
    s.callLocIdx = 620; s.pc = 41; return s.tmp_0;
  case 41:
    r0 = s.retval;
    s.otherKind___20826 = (r0);
    s.lastBrkId = 1478;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1478]) return breakpoint(s, 42, 1478, r0);
  case 42:
    r0 = s.sprite___20801.fields["_kindsOverlappedWith"];
    s.tmp_2 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_2, s.otherKind___20826, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1479;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1479]) return breakpoint(s, 43, 1479, r0);
  case 43:
    { step = 17; continue; }
  case 9:
  case 10:
    s.lastBrkId = 1480;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1480]) return breakpoint(s, 44, 1480, r0);
  case 44:
    r0 = s.sprite___20801.fields["id"];
    s.tmp_4 = r0;
    r0 = s.overlapper___20816.fields["id"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 > s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 11; continue; }
    r0 = s.sprite___20801;
    { step = 12; continue; }
  case 11:
    r0 = s.overlapper___20816;
  case 12:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    s.higher___20839 = (s.tmp_6);
    s.lastBrkId = 1481;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1481]) return breakpoint(s, 45, 1481, r0);
  case 45:
    r0 = (s.higher___20839 === s.sprite___20801);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    r0 = s.overlapper___20816;
    { step = 14; continue; }
  case 13:
    r0 = s.sprite___20801;
  case 14:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.lower___20848 = (s.tmp_1);
    s.lastBrkId = 1482;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1482]) return breakpoint(s, 46, 1482, r0);
  case 46:
    r0 = s.higher___20839.fields["_overlappers"];
    s.tmp_2 = r0;
    r0 = s.lower___20848.fields["id"];
    s.tmp_3 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_2, s.tmp_3, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1483;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1483]) return breakpoint(s, 47, 1483, r0);
  case 47:
    r0 = pxsim_pxtcore_mkAction(2, forEach_inline__P20868);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 0, s.thisKind___20822);
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 1, s.otherKind___20826);
    r0 = pxsim_pxtcore_mkAction(5, ArcadePhysicsEngine_spriteCollisions_inline__P20892);
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 0, s.higher___20839);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 1, s.lower___20848);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 2, s.sprite___20801);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 3, s.overlapper___20816);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 4, s.thisKind___20822);
    s.tmp_6 = helpers_arrayForEach__P109_mk(s);
    s.tmp_7 = helpers_arrayFilter__P110_mk(s);
    s.tmp_7.arg0 = s.arg2;
    s.tmp_7.arg1 = s.tmp_4;
    s.callLocIdx = 621; s.pc = 49; return s.tmp_7;
  case 49:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.tmp_5;
    s.callLocIdx = 623; s.pc = 48; return s.tmp_6;
  case 48:
    r0 = s.retval;
  case 15:
  case 16:
  case 17:
    r0 = (s.unnamed1323___U7 + 1);
    s.unnamed1323___U7 = (r0);
    { step = 6; continue; }
  case 18:
    s.unnamed1322___U6 = (undefined);
  case 19:
    r0 = (s.unnamed1321___U2 + 1);
    s.unnamed1321___U2 = (r0);
    { step = 3; continue; }
  case 20:
    s.unnamed1320___U1 = (undefined);
  case 21:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_spriteCollisions__P4991.info = {"start":9744,"length":2268,"line":309,"column":4,"endLine":353,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"spriteCollisions","argumentNames":["this","movedSprites","handlers"]}

function ArcadePhysicsEngine_spriteCollisions__P4991_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_spriteCollisions__P4991, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  ms___20799: undefined,
  unnamed1320___U1: undefined,
  unnamed1321___U2: undefined,
  sprite___20801: undefined,
  overSprites___20808: undefined,
  overlapper___20816: undefined,
  unnamed1322___U6: undefined,
  unnamed1323___U7: undefined,
  thisKind___20822: undefined,
  otherKind___20826: undefined,
  higher___20839: undefined,
  lower___20848: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function forEach_inline__P20868(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === s.caps[0]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["otherKind"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 === s.caps[1]);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_3;
    { step = 6; continue; }
  case 3:
    r0 = s.arg0.fields["kind"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 === s.caps[1]);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_4;
    { step = 5; continue; }
  case 4:
    r0 = s.arg0.fields["otherKind"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 === s.caps[0]);
  case 5:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 6:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = s.tmp_8;
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P20868.info = {"start":11113,"length":137,"line":335,"column":32,"endLine":336,"endColumn":81,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P20868_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P20868, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_spriteCollisions_inline__P20892(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 1484;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1484]) return breakpoint(s, 1, 1484, r0);
  case 1:
    r0 = s.caps[0].fields["_overlappers"];
    s.tmp_0 = r0;
    r0 = s.caps[1].fields["id"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.lastBrkId = 1485;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1485]) return breakpoint(s, 2, 1485, r0);
  case 2:
    r0 = pxsim_pxtcore_mkAction(6, ArcadePhysicsEngine_spriteCollisions_inline__P20902);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.caps[2]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.caps[3]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.caps[4]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 4, s.caps[0]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 5, s.caps[1]);
    r0 = pxsim.control.runInParallel(s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_spriteCollisions_inline__P20892.info = {"start":11310,"length":652,"line":338,"column":33,"endLine":349,"endColumn":25,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function ArcadePhysicsEngine_spriteCollisions_inline__P20892_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_spriteCollisions_inline__P20892, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_spriteCollisions_inline__P20902(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.lastBrkId = 1486;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1486]) return breakpoint(s, 7, 1486, r0);
  case 7:
    r0 = s.caps[0].fields["flags"];
    s.tmp_4 = r0;
    r0 = s.caps[1].fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 | s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 4610);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1487;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1487]) return breakpoint(s, 8, 1487, r0);
  case 8:
    r0 = s.caps[2].fields["kind"];
    s.tmp_7 = r0;
    r0 = (s.caps[3] === s.tmp_7);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 1; continue; }
    r0 = s.caps[0];
    { step = 2; continue; }
  case 1:
    r0 = s.caps[1];
  case 2:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = s.caps[2].fields["kind"];
    s.tmp_10 = r0;
    r0 = (s.caps[3] === s.tmp_10);
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_9);
    if (!r0) { step = 3; continue; }
    r0 = s.caps[1];
    { step = 4; continue; }
  case 3:
    r0 = s.caps[0];
  case 4:
    // jmp value (already in r0)
    s.tmp_11 = r0;
    s.tmp_12 = if_handler_3_mk(s);
    s.tmp_12.arg0 = s.caps[2];
    s.tmp_12.arg1 = s.tmp_8;
    s.tmp_12.arg2 = s.tmp_11;
    if (!s.tmp_12.arg0.vtable.iface) {
      setupLambda(s.tmp_12, pxsim_pxtrt.mapGetByString(s.tmp_12.arg0, "handler"), 3);
      s.callLocIdx = 622; s.pc = 9; return s.tmp_12;
    } else {
      s.tmp_12.fn = s.tmp_12.arg0.vtable.iface["handler"];
      if (s.tmp_12.fn == null) { setupLambda(s.tmp_12, s.tmp_12.arg0.fields["handler"], 3); s.callLocIdx = 622; s.pc = 9; return s.tmp_12; }
      else if (s.tmp_12.fn.isGetter) { s.tmp_12.stage2Call = true; s.callLocIdx = 622; s.pc = 9; return s.tmp_12;; }
     else { s.callLocIdx = 622; s.pc = 9; return s.tmp_12; }
    }
  case 9:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 1488;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1488]) return breakpoint(s, 10, 1488, r0);
  case 10:
    r0 = s.caps[4].fields["_overlappers"];
    s.tmp_0 = r0;
    r0 = s.caps[5].fields["id"];
    s.tmp_1 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_spriteCollisions_inline__P20902.info = {"start":11431,"length":503,"line":340,"column":50,"endLine":348,"endColumn":29,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":[]}

function ArcadePhysicsEngine_spriteCollisions_inline__P20902_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_spriteCollisions_inline__P20902, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
} }





function sprites_SpriteMap_overlaps__P2450(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.n___20936 = undefined;
    s.o___20940 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2447_VT)) failedCast(r0);
    s.lastBrkId = 1249;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1249]) return breakpoint(s, 1, 1249, r0);
  case 1:
    s.tmp_0 = sprites_SpriteMap_neighbors__P2449_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 495; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.n___20936 = (r0);
    s.lastBrkId = 1250;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1250]) return breakpoint(s, 3, 1250, r0);
  case 3:
    r0 = pxsim_pxtcore_mkAction(1, o_inline__P20942);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    s.tmp_1 = helpers_arrayFilter__P110_mk(s);
    s.tmp_1.arg0 = s.n___20936;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 497; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.o___20940 = (r0);
    s.lastBrkId = 1251;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1251]) return breakpoint(s, 5, 1251, r0);
  case 5:
    r0 = s.o___20940;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_overlaps__P2450.info = {"start":923,"length":189,"line":30,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"overlaps","argumentNames":["this","sprite"]}

function sprites_SpriteMap_overlaps__P2450_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_overlaps__P2450, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  n___20936: undefined,
  o___20940: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function o_inline__P20942(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Sprite_overlapsWith__P2421_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 496; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
o_inline__P20942.info = {"start":1037,"length":41,"line":32,"column":31,"endLine":32,"endColumn":72,"fileName":"pxt_modules/game/spritemap.ts","functionName":"inline","argumentNames":["neighbor"]}

function o_inline__P20942_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: o_inline__P20942, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_SpriteMap_neighbors__P2449(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.n___21207 = undefined;
    s.layer___21209 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2447_VT)) failedCast(r0);
    s.lastBrkId = 1241;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1241]) return breakpoint(s, 1, 1241, r0);
  case 1:
    r0 = pxsim_Array__mk();
    s.n___21207 = (r0);
    s.lastBrkId = 1242;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1242]) return breakpoint(s, 2, 1242, r0);
  case 2:
    r0 = s.arg1.fields["layer"];
    s.layer___21209 = (r0);
    s.lastBrkId = 1243;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1243]) return breakpoint(s, 3, 1243, r0);
  case 3:
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P4955_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_left__P2400_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 483; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_top__P2404_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 484; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___21209;
    s.tmp_0.arg4 = s.n___21207;
    s.callLocIdx = 485; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.lastBrkId = 1244;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1244]) return breakpoint(s, 7, 1244, r0);
  case 7:
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P4955_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_left__P2400_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 486; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_bottom__P2406_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 487; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___21209;
    s.tmp_0.arg4 = s.n___21207;
    s.callLocIdx = 488; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.lastBrkId = 1245;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1245]) return breakpoint(s, 11, 1245, r0);
  case 11:
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P4955_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_right__P2402_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 489; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_top__P2404_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 490; s.pc = 14; return s.tmp_2;
  case 14:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___21209;
    s.tmp_0.arg4 = s.n___21207;
    s.callLocIdx = 491; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.lastBrkId = 1246;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1246]) return breakpoint(s, 15, 1246, r0);
  case 15:
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P4955_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_right__P2402_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 492; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_bottom__P2406_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 493; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___21209;
    s.tmp_0.arg4 = s.n___21207;
    s.callLocIdx = 494; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.lastBrkId = 1247;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1247]) return breakpoint(s, 19, 1247, r0);
  case 19:
    r0 = pxsim_Array_.removeElement(s.n___21207, s.arg1);
    s.lastBrkId = 1248;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1248]) return breakpoint(s, 20, 1248, r0);
  case 20:
    r0 = s.n___21207;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_neighbors__P2449.info = {"start":376,"length":442,"line":15,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"neighbors","argumentNames":["this","sprite"]}

function sprites_SpriteMap_neighbors__P2449_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_neighbors__P2449, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  n___21207: undefined,
  layer___21209: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteMap_mergeAtKey__P4955(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.k___21252 = undefined;
    s.bucket___21257 = undefined;
    s.sprite___21264 = undefined;
    s.unnamed1316___U3 = undefined;
    s.unnamed1317___U4 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2447_VT)) failedCast(r0);
    s.lastBrkId = 1305;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1305]) return breakpoint(s, 9, 1305, r0);
  case 9:
    s.tmp_0 = sprites_SpriteMap_key__P4953_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.callLocIdx = 521; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.k___21252 = (r0);
    s.lastBrkId = 1306;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1306]) return breakpoint(s, 11, 1306, r0);
  case 11:
    r0 = s.arg0.fields["buckets"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.k___21252);
    s.bucket___21257 = (r0);
    s.lastBrkId = 1307;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1307]) return breakpoint(s, 12, 1307, r0);
  case 12:
    r0 = pxsim_numops_toBoolDecr(s.bucket___21257);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1308;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1308]) return breakpoint(s, 13, 1308, r0);
  case 13:
    s.sprite___21264 = (undefined);
    s.unnamed1316___U3 = (s.bucket___21257);
    s.unnamed1317___U4 = (0);
    s.lastBrkId = 1309;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1309]) return breakpoint(s, 14, 1309, r0);
  case 14:
  case 1:
    s.tmp_0 = r0 = s.unnamed1317___U4;
    r0 = pxsim_Array__length(s.unnamed1316___U3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1316___U3, s.unnamed1317___U4);
    s.sprite___21264 = (r0);
    s.lastBrkId = 1310;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1310]) return breakpoint(s, 15, 1310, r0);
  case 15:
    s.lastBrkId = 1311;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1311]) return breakpoint(s, 16, 1311, r0);
  case 16:
    r0 = s.sprite___21264.fields["layer"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & s.arg3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_2;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_Array_.indexOf(s.arg4, s.sprite___21264, undefined);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 < 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1312;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1312]) return breakpoint(s, 17, 1312, r0);
  case 17:
    r0 = pxsim_Array__push(s.arg4, s.sprite___21264);
  case 4:
  case 5:
    r0 = (s.unnamed1317___U4 + 1);
    s.unnamed1317___U4 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed1316___U3 = (undefined);
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_mergeAtKey__P4955.info = {"start":3715,"length":384,"line":101,"column":8,"endLine":110,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"mergeAtKey","argumentNames":["this","x","y","layer","n"]}

function sprites_SpriteMap_mergeAtKey__P4955_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_mergeAtKey__P4955, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  k___21252: undefined,
  bucket___21257: undefined,
  sprite___21264: undefined,
  unnamed1316___U3: undefined,
  unnamed1317___U4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function sprites_SpriteMap_key__P4953(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.xi___21285 = undefined;
    s.yi___21295 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2447_VT)) failedCast(r0);
    s.lastBrkId = 1283;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1283]) return breakpoint(s, 1, 1283, r0);
  case 1:
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg0.fields["columnCount"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.arg1, s.tmp_1);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 509; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.xi___21285 = (r0);
    s.lastBrkId = 1284;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1284]) return breakpoint(s, 3, 1284, r0);
  case 3:
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg0.fields["rowCount"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.arg2, s.tmp_1);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 510; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.yi___21295 = (r0);
    s.lastBrkId = 1285;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1285]) return breakpoint(s, 5, 1285, r0);
  case 5:
    s.tmp_0 = r0 = s.xi___21285;
    r0 = s.arg0.fields["columnCount"];
    s.tmp_2 = r0;
    r0 = (s.yi___21295 * s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_key__P4953.info = {"start":2592,"length":270,"line":76,"column":8,"endLine":80,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"key","argumentNames":["this","x","y"]}

function sprites_SpriteMap_key__P4953_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_key__P4953, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  xi___21285: undefined,
  yi___21295: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_overlapsWith__P2421(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.A___21020 = undefined;
    s.B___21021 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1166;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1166]) return breakpoint(s, 28, 1166, r0);
  case 28:
    s.lastBrkId = 1167;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1167]) return breakpoint(s, 29, 1167, r0);
  case 29:
    r0 = (s.arg1 == s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1168;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1168]) return breakpoint(s, 30, 1168, r0);
  case 30:
    r0 = false;
    { step = 27; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1169;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1169]) return breakpoint(s, 31, 1169, r0);
  case 31:
    r0 = s.arg0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 4610);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1170;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1170]) return breakpoint(s, 32, 1170, r0);
  case 32:
    r0 = false;
    { step = 27; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1171;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1171]) return breakpoint(s, 33, 1171, r0);
  case 33:
    r0 = s.arg1.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 4610);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1172;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1172]) return breakpoint(s, 34, 1172, r0);
  case 34:
    r0 = false;
    { step = 27; continue; }
  case 5:
  case 6:
    s.lastBrkId = 1173;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1173]) return breakpoint(s, 35, 1173, r0);
  case 35:
    r0 = s.arg0.fields["flags"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 & 8192);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_5;
    { step = 8; continue; }
  case 7:
    r0 = s.arg1.fields["flags"];
    s.tmp_7 = r0;
    r0 = (s.tmp_7 & 8192);
  case 8:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1174;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1174]) return breakpoint(s, 36, 1174, r0);
  case 36:
    s.tmp_9 = game_Hitbox_overlapsWith__P2224_mk(s);
    r0 = s.arg1.fields["_hitbox"];
    s.tmp_9.arg0 = r0;
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_9.arg1 = r0;
    s.callLocIdx = 391; s.pc = 37; return s.tmp_9;
  case 37:
    r0 = s.retval;
    { step = 27; continue; }
  case 9:
  case 10:
    s.lastBrkId = 1175;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1175]) return breakpoint(s, 38, 1175, r0);
  case 38:
    s.tmp_13 = game_Hitbox_overlapsWith__P2224_mk(s);
    r0 = s.arg1.fields["_hitbox"];
    s.tmp_13.arg0 = r0;
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_13.arg1 = r0;
    s.callLocIdx = 392; s.pc = 39; return s.tmp_13;
  case 39:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_12);
    s.tmp_11 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_11);
    s.tmp_10 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_10);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1176;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1176]) return breakpoint(s, 40, 1176, r0);
  case 40:
    r0 = false;
    { step = 27; continue; }
  case 11:
  case 12:
    s.lastBrkId = 1177;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1177]) return breakpoint(s, 41, 1177, r0);
  case 41:
    s.tmp_17 = Sprite_isScaled__P4946_mk(s);
    s.tmp_17.arg0 = s.arg0;
    s.callLocIdx = 393; s.pc = 42; return s.tmp_17;
  case 42:
    r0 = s.retval;
    s.tmp_16 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_16);
    s.tmp_15 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_15);
    s.tmp_14 = r0;
    r0 = pxsim_numops_toBool(s.tmp_14);
    if (r0) { step = 13; continue; }
    r0 = s.tmp_14;
    { step = 14; continue; }
  case 13:
    s.tmp_20 = Sprite_isScaled__P4946_mk(s);
    s.tmp_20.arg0 = s.arg1;
    s.callLocIdx = 394; s.pc = 43; return s.tmp_20;
  case 43:
    r0 = s.retval;
    s.tmp_19 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_19);
    s.tmp_18 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_18);
  case 14:
    // jmp value (already in r0)
    s.tmp_21 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_21);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1178;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1178]) return breakpoint(s, 44, 1178, r0);
  case 44:
    r0 = s.arg1.fields["_image"];
    s.tmp_22 = r0;
    r0 = s.arg0.fields["_image"];
    s.tmp_23 = r0;
    s.tmp_26 = Sprite_left__P2400_mk(s);
    s.tmp_26.arg0 = s.arg0;
    s.callLocIdx = 395; s.pc = 45; return s.tmp_26;
  case 45:
    r0 = s.retval;
    s.tmp_25 = r0;
    s.tmp_28 = Sprite_left__P2400_mk(s);
    s.tmp_28.arg0 = s.arg1;
    s.callLocIdx = 396; s.pc = 46; return s.tmp_28;
  case 46:
    r0 = s.retval;
    s.tmp_27 = r0;
    r0 = (s.tmp_25 - s.tmp_27);
    s.tmp_24 = r0;
    s.tmp_31 = Sprite_top__P2404_mk(s);
    s.tmp_31.arg0 = s.arg0;
    s.callLocIdx = 397; s.pc = 47; return s.tmp_31;
  case 47:
    r0 = s.retval;
    s.tmp_30 = r0;
    s.tmp_33 = Sprite_top__P2404_mk(s);
    s.tmp_33.arg0 = s.arg1;
    s.callLocIdx = 398; s.pc = 48; return s.tmp_33;
  case 48:
    r0 = s.retval;
    s.tmp_32 = r0;
    r0 = (s.tmp_30 - s.tmp_32);
    s.tmp_29 = r0;
    r0 = pxsim_ImageMethods.overlapsWith(s.tmp_22, s.tmp_23, s.tmp_24, s.tmp_29);
    { step = 27; continue; }
    { step = 26; continue; }
  case 15:
    s.lastBrkId = 1179;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1179]) return breakpoint(s, 49, 1179, r0);
  case 49:
    s.tmp_36 = Sprite_sx__P2371_mk(s);
    s.tmp_36.arg0 = s.arg0;
    s.callLocIdx = 399; s.pc = 50; return s.tmp_36;
  case 50:
    r0 = s.retval;
    s.tmp_35 = r0;
    r0 = (s.tmp_35 == 0);
    s.tmp_34 = r0;
    r0 = pxsim_numops_toBool(s.tmp_34);
    if (!r0) { step = 16; continue; }
    r0 = s.tmp_34;
    { step = 17; continue; }
  case 16:
    s.tmp_38 = Sprite_sy__P2373_mk(s);
    s.tmp_38.arg0 = s.arg0;
    s.callLocIdx = 400; s.pc = 51; return s.tmp_38;
  case 51:
    r0 = s.retval;
    s.tmp_37 = r0;
    r0 = (s.tmp_37 == 0);
  case 17:
    // jmp value (already in r0)
    s.tmp_39 = r0;
    r0 = pxsim_numops_toBool(s.tmp_39);
    if (!r0) { step = 18; continue; }
    r0 = s.tmp_39;
    { step = 19; continue; }
  case 18:
    s.tmp_41 = Sprite_sx__P2371_mk(s);
    s.tmp_41.arg0 = s.arg1;
    s.callLocIdx = 401; s.pc = 52; return s.tmp_41;
  case 52:
    r0 = s.retval;
    s.tmp_40 = r0;
    r0 = (s.tmp_40 == 0);
  case 19:
    // jmp value (already in r0)
    s.tmp_42 = r0;
    r0 = pxsim_numops_toBool(s.tmp_42);
    if (!r0) { step = 20; continue; }
    r0 = s.tmp_42;
    { step = 21; continue; }
  case 20:
    s.tmp_44 = Sprite_sy__P2373_mk(s);
    s.tmp_44.arg0 = s.arg1;
    s.callLocIdx = 402; s.pc = 53; return s.tmp_44;
  case 53:
    r0 = s.retval;
    s.tmp_43 = r0;
    r0 = (s.tmp_43 == 0);
  case 21:
    // jmp value (already in r0)
    s.tmp_45 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_45);
    if (!r0) { step = 22; continue; }
    s.lastBrkId = 1180;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1180]) return breakpoint(s, 54, 1180, r0);
  case 54:
    r0 = false;
    { step = 27; continue; }
  case 22:
  case 23:
    s.lastBrkId = 1181;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1181]) return breakpoint(s, 55, 1181, r0);
  case 55:
    s.tmp_49 = Sprite_sx__P2371_mk(s);
    s.tmp_49.arg0 = s.arg0;
    s.callLocIdx = 403; s.pc = 56; return s.tmp_49;
  case 56:
    r0 = s.retval;
    s.tmp_48 = r0;
    s.tmp_51 = Sprite_sy__P2373_mk(s);
    s.tmp_51.arg0 = s.arg0;
    s.callLocIdx = 404; s.pc = 57; return s.tmp_51;
  case 57:
    r0 = s.retval;
    s.tmp_50 = r0;
    r0 = (s.tmp_48 * s.tmp_50);
    s.tmp_47 = r0;
    s.tmp_54 = Sprite_sx__P2371_mk(s);
    s.tmp_54.arg0 = s.arg1;
    s.callLocIdx = 405; s.pc = 58; return s.tmp_54;
  case 58:
    r0 = s.retval;
    s.tmp_53 = r0;
    s.tmp_56 = Sprite_sy__P2373_mk(s);
    s.tmp_56.arg0 = s.arg1;
    s.callLocIdx = 406; s.pc = 59; return s.tmp_56;
  case 59:
    r0 = s.retval;
    s.tmp_55 = r0;
    r0 = (s.tmp_53 * s.tmp_55);
    s.tmp_52 = r0;
    r0 = (s.tmp_47 < s.tmp_52);
    s.tmp_46 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_46);
    if (!r0) { step = 24; continue; }
    s.lastBrkId = 1182;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1182]) return breakpoint(s, 60, 1182, r0);
  case 60:
    s.A___21020 = (s.arg0);
    s.lastBrkId = 1183;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1183]) return breakpoint(s, 61, 1183, r0);
  case 61:
    s.B___21021 = (s.arg1);
    { step = 25; continue; }
  case 24:
    s.lastBrkId = 1184;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1184]) return breakpoint(s, 62, 1184, r0);
  case 62:
    s.A___21020 = (s.arg1);
    s.lastBrkId = 1185;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1185]) return breakpoint(s, 63, 1185, r0);
  case 63:
    s.B___21021 = (s.arg0);
  case 25:
    s.lastBrkId = 1186;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1186]) return breakpoint(s, 64, 1186, r0);
  case 64:
    s.tmp_0 = helpers_imageBlit__P1954_mk(s);
    s.tmp_1 = Sprite_image__P2391_mk(s);
    s.tmp_1.arg0 = s.A___21020;
    s.callLocIdx = 407; s.pc = 66; return s.tmp_1;
  case 66:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_4 = Sprite_left__P2400_mk(s);
    s.tmp_4.arg0 = s.B___21021;
    s.callLocIdx = 408; s.pc = 67; return s.tmp_4;
  case 67:
    r0 = s.retval;
    s.tmp_3 = r0;
    s.tmp_6 = Sprite_left__P2400_mk(s);
    s.tmp_6.arg0 = s.A___21020;
    s.callLocIdx = 409; s.pc = 68; return s.tmp_6;
  case 68:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_3 - s.tmp_5);
    s.tmp_2 = r0;
    s.tmp_8 = Sprite_sx__P2371_mk(s);
    s.tmp_8.arg0 = s.A___21020;
    s.callLocIdx = 410; s.pc = 69; return s.tmp_8;
  case 69:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_2 / s.tmp_7);
    s.tmp_0.arg1 = r0;
    s.tmp_11 = Sprite_top__P2404_mk(s);
    s.tmp_11.arg0 = s.B___21021;
    s.callLocIdx = 411; s.pc = 70; return s.tmp_11;
  case 70:
    r0 = s.retval;
    s.tmp_10 = r0;
    s.tmp_13 = Sprite_top__P2404_mk(s);
    s.tmp_13.arg0 = s.A___21020;
    s.callLocIdx = 412; s.pc = 71; return s.tmp_13;
  case 71:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = (s.tmp_10 - s.tmp_12);
    s.tmp_9 = r0;
    s.tmp_15 = Sprite_sy__P2373_mk(s);
    s.tmp_15.arg0 = s.A___21020;
    s.callLocIdx = 413; s.pc = 72; return s.tmp_15;
  case 72:
    r0 = s.retval;
    s.tmp_14 = r0;
    r0 = (s.tmp_9 / s.tmp_14);
    s.tmp_0.arg2 = r0;
    s.tmp_17 = Sprite_width__P2398_mk(s);
    s.tmp_17.arg0 = s.B___21021;
    s.callLocIdx = 414; s.pc = 73; return s.tmp_17;
  case 73:
    r0 = s.retval;
    s.tmp_16 = r0;
    s.tmp_19 = Sprite_sx__P2371_mk(s);
    s.tmp_19.arg0 = s.A___21020;
    s.callLocIdx = 415; s.pc = 74; return s.tmp_19;
  case 74:
    r0 = s.retval;
    s.tmp_18 = r0;
    r0 = (s.tmp_16 / s.tmp_18);
    s.tmp_0.arg3 = r0;
    s.tmp_21 = Sprite_height__P2399_mk(s);
    s.tmp_21.arg0 = s.B___21021;
    s.callLocIdx = 416; s.pc = 75; return s.tmp_21;
  case 75:
    r0 = s.retval;
    s.tmp_20 = r0;
    s.tmp_23 = Sprite_sy__P2373_mk(s);
    s.tmp_23.arg0 = s.A___21020;
    s.callLocIdx = 417; s.pc = 76; return s.tmp_23;
  case 76:
    r0 = s.retval;
    s.tmp_22 = r0;
    r0 = (s.tmp_20 / s.tmp_22);
    s.tmp_0.arg4 = r0;
    s.tmp_24 = Sprite_image__P2391_mk(s);
    s.tmp_24.arg0 = s.B___21021;
    s.callLocIdx = 418; s.pc = 77; return s.tmp_24;
  case 77:
    r0 = s.retval;
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = 0;
    s.tmp_0.arg7 = 0;
    s.tmp_26 = Sprite_image__P2391_mk(s);
    s.tmp_26.arg0 = s.B___21021;
    s.callLocIdx = 419; s.pc = 78; return s.tmp_26;
  case 78:
    r0 = s.retval;
    s.tmp_25 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_25);
    s.tmp_0.arg8 = r0;
    s.tmp_28 = Sprite_image__P2391_mk(s);
    s.tmp_28.arg0 = s.B___21021;
    s.callLocIdx = 420; s.pc = 79; return s.tmp_28;
  case 79:
    r0 = s.retval;
    s.tmp_27 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_27);
    s.tmp_0.arg9 = r0;
    s.tmp_0.arg10 = true;
    s.tmp_0.arg11 = true;
    s.callLocIdx = 421; s.pc = 65; return s.tmp_0;
  case 65:
    r0 = s.retval;
    { step = 27; continue; }
  case 26:
    r0 = undefined;
  case 27:
    return leave(s, r0)
  default: oops()
} } }
Sprite_overlapsWith__P2421.info = {"start":20623,"length":1735,"line":689,"column":4,"endLine":738,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"overlapsWith","argumentNames":["this","other"]}

function Sprite_overlapsWith__P2421_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_overlapsWith__P2421, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  tmp_24: undefined,
  tmp_25: undefined,
  tmp_26: undefined,
  tmp_27: undefined,
  tmp_28: undefined,
  tmp_29: undefined,
  tmp_30: undefined,
  tmp_31: undefined,
  tmp_32: undefined,
  tmp_33: undefined,
  tmp_34: undefined,
  tmp_35: undefined,
  tmp_36: undefined,
  tmp_37: undefined,
  tmp_38: undefined,
  tmp_39: undefined,
  tmp_40: undefined,
  tmp_41: undefined,
  tmp_42: undefined,
  tmp_43: undefined,
  tmp_44: undefined,
  tmp_45: undefined,
  tmp_46: undefined,
  tmp_47: undefined,
  tmp_48: undefined,
  tmp_49: undefined,
  tmp_50: undefined,
  tmp_51: undefined,
  tmp_52: undefined,
  tmp_53: undefined,
  tmp_54: undefined,
  tmp_55: undefined,
  tmp_56: undefined,
  A___21020: undefined,
  B___21021: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_isScaled__P4946(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1114;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1114]) return breakpoint(s, 3, 1114, r0);
  case 3:
    r0 = s.arg0.fields["_sx"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== 256);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_sy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 !== 256);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.tmp_3;
    return leave(s, r0)
  default: oops()
} } }
Sprite_isScaled__P4946.info = {"start":10166,"length":100,"line":369,"column":4,"endLine":371,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"isScaled","argumentNames":["this"]}

function Sprite_isScaled__P4946_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_isScaled__P4946, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function game_Hitbox_overlapsWith__P2224(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C2209_VT)) failedCast(r0);
    s.lastBrkId = 1002;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1002]) return breakpoint(s, 18, 1002, r0);
  case 18:
    s.tmp_0 = game_Hitbox_updateIfInvalid__P2223_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 257; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.lastBrkId = 1003;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1003]) return breakpoint(s, 20, 1003, r0);
  case 20:
    s.tmp_0 = game_Hitbox_updateIfInvalid__P2223_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.callLocIdx = 258; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    s.lastBrkId = 1004;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1004]) return breakpoint(s, 22, 1004, r0);
  case 22:
    s.tmp_1 = game_Hitbox_contains__P2222_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = game_Hitbox_left__P2217_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 259; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.tmp_3 = game_Hitbox_top__P2218_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.callLocIdx = 260; s.pc = 25; return s.tmp_3;
  case 25:
    r0 = s.retval;
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 261; s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1005;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1005]) return breakpoint(s, 26, 1005, r0);
  case 26:
    r0 = true;
    { step = 17; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1006;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1006]) return breakpoint(s, 27, 1006, r0);
  case 27:
    s.tmp_5 = game_Hitbox_contains__P2222_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_6 = game_Hitbox_left__P2217_mk(s);
    s.tmp_6.arg0 = s.arg1;
    s.callLocIdx = 262; s.pc = 29; return s.tmp_6;
  case 29:
    r0 = s.retval;
    s.tmp_5.arg1 = r0;
    s.tmp_7 = game_Hitbox_bottom__P2220_mk(s);
    s.tmp_7.arg0 = s.arg1;
    s.callLocIdx = 263; s.pc = 30; return s.tmp_7;
  case 30:
    r0 = s.retval;
    s.tmp_5.arg2 = r0;
    s.callLocIdx = 264; s.pc = 28; return s.tmp_5;
  case 28:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1007;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1007]) return breakpoint(s, 31, 1007, r0);
  case 31:
    r0 = true;
    { step = 17; continue; }
  case 3:
  case 4:
    s.lastBrkId = 1008;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1008]) return breakpoint(s, 32, 1008, r0);
  case 32:
    s.tmp_9 = game_Hitbox_contains__P2222_mk(s);
    s.tmp_9.arg0 = s.arg0;
    s.tmp_10 = game_Hitbox_right__P2219_mk(s);
    s.tmp_10.arg0 = s.arg1;
    s.callLocIdx = 265; s.pc = 34; return s.tmp_10;
  case 34:
    r0 = s.retval;
    s.tmp_9.arg1 = r0;
    s.tmp_11 = game_Hitbox_top__P2218_mk(s);
    s.tmp_11.arg0 = s.arg1;
    s.callLocIdx = 266; s.pc = 35; return s.tmp_11;
  case 35:
    r0 = s.retval;
    s.tmp_9.arg2 = r0;
    s.callLocIdx = 267; s.pc = 33; return s.tmp_9;
  case 33:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1009;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1009]) return breakpoint(s, 36, 1009, r0);
  case 36:
    r0 = true;
    { step = 17; continue; }
  case 5:
  case 6:
    s.lastBrkId = 1010;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1010]) return breakpoint(s, 37, 1010, r0);
  case 37:
    s.tmp_13 = game_Hitbox_contains__P2222_mk(s);
    s.tmp_13.arg0 = s.arg0;
    s.tmp_14 = game_Hitbox_right__P2219_mk(s);
    s.tmp_14.arg0 = s.arg1;
    s.callLocIdx = 268; s.pc = 39; return s.tmp_14;
  case 39:
    r0 = s.retval;
    s.tmp_13.arg1 = r0;
    s.tmp_15 = game_Hitbox_bottom__P2220_mk(s);
    s.tmp_15.arg0 = s.arg1;
    s.callLocIdx = 269; s.pc = 40; return s.tmp_15;
  case 40:
    r0 = s.retval;
    s.tmp_13.arg2 = r0;
    s.callLocIdx = 270; s.pc = 38; return s.tmp_13;
  case 38:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_12);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1011;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1011]) return breakpoint(s, 41, 1011, r0);
  case 41:
    r0 = true;
    { step = 17; continue; }
  case 7:
  case 8:
    s.lastBrkId = 1012;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1012]) return breakpoint(s, 42, 1012, r0);
  case 42:
    s.tmp_17 = game_Hitbox_contains__P2222_mk(s);
    s.tmp_17.arg0 = s.arg1;
    s.tmp_18 = game_Hitbox_left__P2217_mk(s);
    s.tmp_18.arg0 = s.arg0;
    s.callLocIdx = 271; s.pc = 44; return s.tmp_18;
  case 44:
    r0 = s.retval;
    s.tmp_17.arg1 = r0;
    s.tmp_19 = game_Hitbox_top__P2218_mk(s);
    s.tmp_19.arg0 = s.arg0;
    s.callLocIdx = 272; s.pc = 45; return s.tmp_19;
  case 45:
    r0 = s.retval;
    s.tmp_17.arg2 = r0;
    s.callLocIdx = 273; s.pc = 43; return s.tmp_17;
  case 43:
    r0 = s.retval;
    s.tmp_16 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_16);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1013;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1013]) return breakpoint(s, 46, 1013, r0);
  case 46:
    r0 = true;
    { step = 17; continue; }
  case 9:
  case 10:
    s.lastBrkId = 1014;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1014]) return breakpoint(s, 47, 1014, r0);
  case 47:
    s.tmp_21 = game_Hitbox_contains__P2222_mk(s);
    s.tmp_21.arg0 = s.arg1;
    s.tmp_22 = game_Hitbox_left__P2217_mk(s);
    s.tmp_22.arg0 = s.arg0;
    s.callLocIdx = 274; s.pc = 49; return s.tmp_22;
  case 49:
    r0 = s.retval;
    s.tmp_21.arg1 = r0;
    s.tmp_23 = game_Hitbox_bottom__P2220_mk(s);
    s.tmp_23.arg0 = s.arg0;
    s.callLocIdx = 275; s.pc = 50; return s.tmp_23;
  case 50:
    r0 = s.retval;
    s.tmp_21.arg2 = r0;
    s.callLocIdx = 276; s.pc = 48; return s.tmp_21;
  case 48:
    r0 = s.retval;
    s.tmp_20 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_20);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1015;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1015]) return breakpoint(s, 51, 1015, r0);
  case 51:
    r0 = true;
    { step = 17; continue; }
  case 11:
  case 12:
    s.lastBrkId = 1016;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1016]) return breakpoint(s, 52, 1016, r0);
  case 52:
    s.tmp_25 = game_Hitbox_contains__P2222_mk(s);
    s.tmp_25.arg0 = s.arg1;
    s.tmp_26 = game_Hitbox_right__P2219_mk(s);
    s.tmp_26.arg0 = s.arg0;
    s.callLocIdx = 277; s.pc = 54; return s.tmp_26;
  case 54:
    r0 = s.retval;
    s.tmp_25.arg1 = r0;
    s.tmp_27 = game_Hitbox_top__P2218_mk(s);
    s.tmp_27.arg0 = s.arg0;
    s.callLocIdx = 278; s.pc = 55; return s.tmp_27;
  case 55:
    r0 = s.retval;
    s.tmp_25.arg2 = r0;
    s.callLocIdx = 279; s.pc = 53; return s.tmp_25;
  case 53:
    r0 = s.retval;
    s.tmp_24 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_24);
    if (!r0) { step = 13; continue; }
    s.lastBrkId = 1017;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1017]) return breakpoint(s, 56, 1017, r0);
  case 56:
    r0 = true;
    { step = 17; continue; }
  case 13:
  case 14:
    s.lastBrkId = 1018;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1018]) return breakpoint(s, 57, 1018, r0);
  case 57:
    s.tmp_29 = game_Hitbox_contains__P2222_mk(s);
    s.tmp_29.arg0 = s.arg1;
    s.tmp_30 = game_Hitbox_right__P2219_mk(s);
    s.tmp_30.arg0 = s.arg0;
    s.callLocIdx = 280; s.pc = 59; return s.tmp_30;
  case 59:
    r0 = s.retval;
    s.tmp_29.arg1 = r0;
    s.tmp_31 = game_Hitbox_bottom__P2220_mk(s);
    s.tmp_31.arg0 = s.arg0;
    s.callLocIdx = 281; s.pc = 60; return s.tmp_31;
  case 60:
    r0 = s.retval;
    s.tmp_29.arg2 = r0;
    s.callLocIdx = 282; s.pc = 58; return s.tmp_29;
  case 58:
    r0 = s.retval;
    s.tmp_28 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_28);
    if (!r0) { step = 15; continue; }
    s.lastBrkId = 1019;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1019]) return breakpoint(s, 61, 1019, r0);
  case 61:
    r0 = true;
    { step = 17; continue; }
  case 15:
  case 16:
    s.lastBrkId = 1020;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1020]) return breakpoint(s, 62, 1020, r0);
  case 62:
    r0 = false;
  case 17:
    return leave(s, r0)
  default: oops()
} } }
game_Hitbox_overlapsWith__P2224.info = {"start":2515,"length":695,"line":87,"column":8,"endLine":99,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"overlapsWith","argumentNames":["this","other"]}

function game_Hitbox_overlapsWith__P2224_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_overlapsWith__P2224, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  tmp_24: undefined,
  tmp_25: undefined,
  tmp_26: undefined,
  tmp_27: undefined,
  tmp_28: undefined,
  tmp_29: undefined,
  tmp_30: undefined,
  tmp_31: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_Hitbox_contains__P2222(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C2209_VT)) failedCast(r0);
    s.lastBrkId = 981;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[981]) return breakpoint(s, 7, 981, r0);
  case 7:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = game_Hitbox_left__P2217_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 237; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >= s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_4 = r0 = s.arg1;
    s.tmp_6 = game_Hitbox_right__P2219_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 238; s.pc = 9; return s.tmp_6;
  case 9:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 <= s.tmp_5);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBool(s.tmp_7);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_7;
    { step = 4; continue; }
  case 3:
    s.tmp_8 = r0 = s.arg2;
    s.tmp_10 = game_Hitbox_top__P2218_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 239; s.pc = 10; return s.tmp_10;
  case 10:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_8 >= s.tmp_9);
  case 4:
    // jmp value (already in r0)
    s.tmp_11 = r0;
    r0 = pxsim_numops_toBool(s.tmp_11);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_11;
    { step = 6; continue; }
  case 5:
    s.tmp_12 = r0 = s.arg2;
    s.tmp_14 = game_Hitbox_bottom__P2220_mk(s);
    s.tmp_14.arg0 = s.arg0;
    s.callLocIdx = 240; s.pc = 11; return s.tmp_14;
  case 11:
    r0 = s.retval;
    s.tmp_13 = r0;
    r0 = (s.tmp_12 <= s.tmp_13);
  case 6:
    // jmp value (already in r0)
    s.tmp_15 = r0;
    r0 = s.tmp_15;
    return leave(s, r0)
  default: oops()
} } }
game_Hitbox_contains__P2222.info = {"start":1034,"length":144,"line":44,"column":8,"endLine":46,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"contains","argumentNames":["this","x","y"]}

function game_Hitbox_contains__P2222_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_contains__P2222, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_imageBlit__P1954(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.arg8 = (s.lambdaArgs[8]);
      s.arg9 = (s.lambdaArgs[9]);
      s.arg10 = (s.lambdaArgs[10]);
      s.arg11 = (s.lambdaArgs[11]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 572;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[572]) return breakpoint(s, 7, 572, r0);
  case 7:
    s.tmp_0 = r0 = globals._blitArgs___4775;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__mk();
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    globals._blitArgs___4775 = (s.tmp_1);
    s.lastBrkId = 573;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[573]) return breakpoint(s, 8, 573, r0);
  case 8:
    s.tmp_0 = r0 = globals._blitArgs___4775;
    r0 = (s.arg1 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 0, s.tmp_1);
    s.lastBrkId = 574;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[574]) return breakpoint(s, 9, 574, r0);
  case 9:
    s.tmp_0 = r0 = globals._blitArgs___4775;
    r0 = (s.arg2 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 1, s.tmp_1);
    s.lastBrkId = 575;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[575]) return breakpoint(s, 10, 575, r0);
  case 10:
    s.tmp_0 = r0 = globals._blitArgs___4775;
    r0 = (s.arg3 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 2, s.tmp_1);
    s.lastBrkId = 576;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[576]) return breakpoint(s, 11, 576, r0);
  case 11:
    s.tmp_0 = r0 = globals._blitArgs___4775;
    r0 = (s.arg4 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 3, s.tmp_1);
    s.lastBrkId = 577;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[577]) return breakpoint(s, 12, 577, r0);
  case 12:
    s.tmp_0 = r0 = globals._blitArgs___4775;
    r0 = (s.arg6 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 4, s.tmp_1);
    s.lastBrkId = 578;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[578]) return breakpoint(s, 13, 578, r0);
  case 13:
    s.tmp_0 = r0 = globals._blitArgs___4775;
    r0 = (s.arg7 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 5, s.tmp_1);
    s.lastBrkId = 579;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[579]) return breakpoint(s, 14, 579, r0);
  case 14:
    s.tmp_0 = r0 = globals._blitArgs___4775;
    r0 = (s.arg8 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 6, s.tmp_1);
    s.lastBrkId = 580;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[580]) return breakpoint(s, 15, 580, r0);
  case 15:
    s.tmp_0 = r0 = globals._blitArgs___4775;
    r0 = (s.arg9 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 7, s.tmp_1);
    s.lastBrkId = 581;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[581]) return breakpoint(s, 16, 581, r0);
  case 16:
    r0 = pxsim_numops_toBoolDecr(s.arg10);
    if (!r0) { step = 3; continue; }
    r0 = 1;
    { step = 4; continue; }
  case 3:
    r0 = 0;
  case 4:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(globals._blitArgs___4775, 8, s.tmp_0);
    s.lastBrkId = 582;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[582]) return breakpoint(s, 17, 582, r0);
  case 17:
    r0 = pxsim_numops_toBoolDecr(s.arg11);
    if (!r0) { step = 5; continue; }
    r0 = 1;
    { step = 6; continue; }
  case 5:
    r0 = 0;
  case 6:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(globals._blitArgs___4775, 9, s.tmp_0);
    s.lastBrkId = 583;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[583]) return breakpoint(s, 18, 583, r0);
  case 18:
    r0 = pxsim_ImageMethods._blit(s.arg0, s.arg5, globals._blitArgs___4775);
    return leave(s, r0)
  default: oops()
} } }
helpers_imageBlit__P1954.info = {"start":4459,"length":642,"line":154,"column":4,"endLine":167,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"imageBlit","argumentNames":["img","xDst","yDst","wDst","hDst","src","xSrc","ySrc","wSrc","hSrc","transparent","check"]}

function helpers_imageBlit__P1954_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageBlit__P1954, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
  arg8: undefined,
  arg9: undefined,
  arg10: undefined,
  arg11: undefined,
} }





function ArcadePhysicsEngine_createMovingSprite__P4990(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ovx___21636 = undefined;
    s.ovy___21641 = undefined;
    s.fx___21668 = undefined;
    s.c___21675 = undefined;
    s.fy___21718 = undefined;
    s.c___21725 = undefined;
    s.dx___21764 = undefined;
    s.dy___21777 = undefined;
    s.xStep___21790 = undefined;
    s.yStep___21792 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2528_VT)) failedCast(r0);
    s.lastBrkId = 1424;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1424]) return breakpoint(s, 25, 1424, r0);
  case 25:
    s.tmp_0 = ArcadePhysicsEngine_constrain__P4996_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = s.arg1.fields["_vx"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 581; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.ovx___21636 = (r0);
    s.lastBrkId = 1425;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1425]) return breakpoint(s, 27, 1425, r0);
  case 27:
    s.tmp_0 = ArcadePhysicsEngine_constrain__P4996_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 582; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    s.ovy___21641 = (r0);
    s.lastBrkId = 1426;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1426]) return breakpoint(s, 29, 1426, r0);
  case 29:
    r0 = s.arg1.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastX"] = (s.tmp_0);
    s.lastBrkId = 1427;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1427]) return breakpoint(s, 30, 1427, r0);
  case 30:
    r0 = s.arg1.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastY"] = (s.tmp_0);
    s.lastBrkId = 1428;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1428]) return breakpoint(s, 31, 1428, r0);
  case 31:
    r0 = s.arg1.fields["_ax"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1429;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1429]) return breakpoint(s, 32, 1429, r0);
  case 32:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx_idiv__P163_mk(s);
    s.tmp_5 = Fx_imul__P161_mk(s);
    r0 = s.arg1.fields["_ax"];
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.arg2;
    s.callLocIdx = 583; s.pc = 35; return s.tmp_5;
  case 35:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 1000;
    s.callLocIdx = 584; s.pc = 34; return s.tmp_4;
  case 34:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 585; s.pc = 33; return s.tmp_3;
  case 33:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vx"] = (s.tmp_2);
    { step = 8; continue; }
  case 1:
    s.lastBrkId = 1430;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1430]) return breakpoint(s, 36, 1430, r0);
  case 36:
    r0 = s.arg1.fields["_fx"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.lastBrkId = 1431;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1431]) return breakpoint(s, 37, 1431, r0);
  case 37:
    s.tmp_1 = Fx_idiv__P163_mk(s);
    s.tmp_2 = Fx_imul__P161_mk(s);
    r0 = s.arg1.fields["_fx"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 586; s.pc = 39; return s.tmp_2;
  case 39:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 1000;
    s.callLocIdx = 587; s.pc = 38; return s.tmp_1;
  case 38:
    r0 = s.retval;
    s.fx___21668 = (r0);
    s.lastBrkId = 1432;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1432]) return breakpoint(s, 40, 1432, r0);
  case 40:
    s.tmp_0 = Fx_compare__P164_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.fx___21668;
    s.callLocIdx = 588; s.pc = 41; return s.tmp_0;
  case 41:
    r0 = s.retval;
    s.c___21675 = (r0);
    s.lastBrkId = 1433;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1433]) return breakpoint(s, 42, 1433, r0);
  case 42:
    r0 = (s.c___21675 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 1434;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1434]) return breakpoint(s, 43, 1434, r0);
  case 43:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_min__P166_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_4 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.fx___21668;
    s.callLocIdx = 589; s.pc = 45; return s.tmp_4;
  case 45:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 590; s.pc = 44; return s.tmp_3;
  case 44:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vx"] = (s.tmp_2);
    { step = 5; continue; }
  case 2:
    s.lastBrkId = 1435;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1435]) return breakpoint(s, 46, 1435, r0);
  case 46:
    r0 = (s.c___21675 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1436;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1436]) return breakpoint(s, 47, 1436, r0);
  case 47:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_max__P167_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_4 = Fx_sub__P159_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.fx___21668;
    s.callLocIdx = 591; s.pc = 49; return s.tmp_4;
  case 49:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 592; s.pc = 48; return s.tmp_3;
  case 48:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vx"] = (s.tmp_2);
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1437;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1437]) return breakpoint(s, 50, 1437, r0);
  case 50:
    r0 = (s.arg1).fields["_vx"] = (0);
  case 4:
  case 5:
  case 6:
  case 7:
  case 8:
    s.lastBrkId = 1438;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1438]) return breakpoint(s, 51, 1438, r0);
  case 51:
    r0 = s.arg1.fields["_ay"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1439;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1439]) return breakpoint(s, 52, 1439, r0);
  case 52:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_3.arg0 = r0;
    s.tmp_4 = Fx_idiv__P163_mk(s);
    s.tmp_5 = Fx_imul__P161_mk(s);
    r0 = s.arg1.fields["_ay"];
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.arg2;
    s.callLocIdx = 593; s.pc = 55; return s.tmp_5;
  case 55:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 1000;
    s.callLocIdx = 594; s.pc = 54; return s.tmp_4;
  case 54:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 595; s.pc = 53; return s.tmp_3;
  case 53:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vy"] = (s.tmp_2);
    { step = 16; continue; }
  case 9:
    s.lastBrkId = 1440;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1440]) return breakpoint(s, 56, 1440, r0);
  case 56:
    r0 = s.arg1.fields["_fy"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 1441;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1441]) return breakpoint(s, 57, 1441, r0);
  case 57:
    s.tmp_1 = Fx_idiv__P163_mk(s);
    s.tmp_2 = Fx_imul__P161_mk(s);
    r0 = s.arg1.fields["_fy"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 596; s.pc = 59; return s.tmp_2;
  case 59:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 1000;
    s.callLocIdx = 597; s.pc = 58; return s.tmp_1;
  case 58:
    r0 = s.retval;
    s.fy___21718 = (r0);
    s.lastBrkId = 1442;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1442]) return breakpoint(s, 60, 1442, r0);
  case 60:
    s.tmp_0 = Fx_compare__P164_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.fy___21718;
    s.callLocIdx = 598; s.pc = 61; return s.tmp_0;
  case 61:
    r0 = s.retval;
    s.c___21725 = (r0);
    s.lastBrkId = 1443;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1443]) return breakpoint(s, 62, 1443, r0);
  case 62:
    r0 = (s.c___21725 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.lastBrkId = 1444;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1444]) return breakpoint(s, 63, 1444, r0);
  case 63:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_min__P166_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_4 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.fy___21718;
    s.callLocIdx = 599; s.pc = 65; return s.tmp_4;
  case 65:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 600; s.pc = 64; return s.tmp_3;
  case 64:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vy"] = (s.tmp_2);
    { step = 13; continue; }
  case 10:
    s.lastBrkId = 1445;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1445]) return breakpoint(s, 66, 1445, r0);
  case 66:
    r0 = (s.c___21725 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1446;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1446]) return breakpoint(s, 67, 1446, r0);
  case 67:
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_max__P167_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_4 = Fx_sub__P159_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.fy___21718;
    s.callLocIdx = 601; s.pc = 69; return s.tmp_4;
  case 69:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 602; s.pc = 68; return s.tmp_3;
  case 68:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vy"] = (s.tmp_2);
    { step = 12; continue; }
  case 11:
    s.lastBrkId = 1447;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1447]) return breakpoint(s, 70, 1447, r0);
  case 70:
    r0 = (s.arg1).fields["_vy"] = (0);
  case 12:
  case 13:
  case 14:
  case 15:
  case 16:
    s.lastBrkId = 1448;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1448]) return breakpoint(s, 71, 1448, r0);
  case 71:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = ArcadePhysicsEngine_constrain__P4996_mk(s);
    s.tmp_2.arg0 = s.arg0;
    r0 = s.arg1.fields["_vx"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 603; s.pc = 72; return s.tmp_2;
  case 72:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vx"] = (s.tmp_1);
    s.lastBrkId = 1449;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1449]) return breakpoint(s, 73, 1449, r0);
  case 73:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = ArcadePhysicsEngine_constrain__P4996_mk(s);
    s.tmp_2.arg0 = s.arg0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 604; s.pc = 74; return s.tmp_2;
  case 74:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
    s.lastBrkId = 1450;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1450]) return breakpoint(s, 75, 1450, r0);
  case 75:
    s.tmp_0 = Fx8__P149_mk(s);
    s.tmp_3 = Fx_toFloat__P173_mk(s);
    s.tmp_4 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_vx"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.ovx___21636;
    s.callLocIdx = 605; s.pc = 78; return s.tmp_4;
  case 78:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 606; s.pc = 77; return s.tmp_3;
  case 77:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * s.arg3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 1000);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 607; s.pc = 76; return s.tmp_0;
  case 76:
    r0 = s.retval;
    s.dx___21764 = (r0);
    s.lastBrkId = 1451;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1451]) return breakpoint(s, 79, 1451, r0);
  case 79:
    s.tmp_0 = Fx8__P149_mk(s);
    s.tmp_3 = Fx_toFloat__P173_mk(s);
    s.tmp_4 = Fx_add__P157_mk(s);
    r0 = s.arg1.fields["_vy"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.ovy___21641;
    s.callLocIdx = 608; s.pc = 82; return s.tmp_4;
  case 82:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 609; s.pc = 81; return s.tmp_3;
  case 81:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * s.arg3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 1000);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 610; s.pc = 80; return s.tmp_0;
  case 80:
    r0 = s.retval;
    s.dy___21777 = (r0);
    s.lastBrkId = 1452;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1452]) return breakpoint(s, 83, 1452, r0);
  case 83:
    s.xStep___21790 = (s.dx___21764);
    s.lastBrkId = 1453;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1453]) return breakpoint(s, 84, 1453, r0);
  case 84:
    s.yStep___21792 = (s.dy___21777);
    s.lastBrkId = 1454;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1454]) return breakpoint(s, 85, 1454, r0);
  case 85:
  case 17:
    s.lastBrkId = 1455;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1455]) return breakpoint(s, 86, 1455, r0);
  case 86:
    s.tmp_2 = Fx_abs__P165_mk(s);
    s.tmp_2.arg0 = s.xStep___21790;
    s.callLocIdx = 611; s.pc = 87; return s.tmp_2;
  case 87:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 18; continue; }
    r0 = s.tmp_0;
    { step = 19; continue; }
  case 18:
    s.tmp_5 = Fx_abs__P165_mk(s);
    s.tmp_5.arg0 = s.yStep___21792;
    s.callLocIdx = 612; s.pc = 88; return s.tmp_5;
  case 88:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_6 = r0;
    r0 = (s.tmp_4 > s.tmp_6);
  case 19:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 24; continue; }
    s.lastBrkId = 1456;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1456]) return breakpoint(s, 89, 1456, r0);
  case 89:
    s.tmp_10 = Fx_abs__P165_mk(s);
    s.tmp_10.arg0 = s.xStep___21790;
    s.callLocIdx = 613; s.pc = 90; return s.tmp_10;
  case 90:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_11 = r0;
    r0 = (s.tmp_9 > s.tmp_11);
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 1457;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1457]) return breakpoint(s, 91, 1457, r0);
  case 91:
    s.tmp_12 = Fx_idiv__P163_mk(s);
    s.tmp_12.arg0 = s.xStep___21790;
    s.tmp_12.arg1 = 2;
    s.callLocIdx = 614; s.pc = 92; return s.tmp_12;
  case 92:
    r0 = s.retval;
    s.xStep___21790 = (r0);
  case 20:
  case 21:
    s.lastBrkId = 1458;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1458]) return breakpoint(s, 93, 1458, r0);
  case 93:
    s.tmp_2 = Fx_abs__P165_mk(s);
    s.tmp_2.arg0 = s.yStep___21792;
    s.callLocIdx = 615; s.pc = 94; return s.tmp_2;
  case 94:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    s.lastBrkId = 1459;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1459]) return breakpoint(s, 95, 1459, r0);
  case 95:
    s.tmp_4 = Fx_idiv__P163_mk(s);
    s.tmp_4.arg0 = s.yStep___21792;
    s.tmp_4.arg1 = 2;
    s.callLocIdx = 616; s.pc = 96; return s.tmp_4;
  case 96:
    r0 = s.retval;
    s.yStep___21792 = (r0);
  case 22:
  case 23:
    { step = 17; continue; }
  case 24:
    s.lastBrkId = 1460;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1460]) return breakpoint(s, 97, 1460, r0);
  case 97:
    r0 = pxsim_pxtcore_mkClassInstance(MovingSprite__C2526_VT);
    s.tmp_0 = r0;
    s.tmp_1 = MovingSprite_constructor__P2527_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    r0 = s.arg1.fields["_vx"];
    s.tmp_1.arg2 = r0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_1.arg3 = r0;
    s.tmp_1.arg4 = s.dx___21764;
    s.tmp_1.arg5 = s.dy___21777;
    s.tmp_1.arg6 = s.xStep___21790;
    s.tmp_1.arg7 = s.yStep___21792;
    s.callLocIdx = 617; s.pc = 98; return s.tmp_1;
  case 98:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_createMovingSprite__P4990.info = {"start":6933,"length":2805,"line":217,"column":4,"endLine":307,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"createMovingSprite","argumentNames":["this","sprite","dtMs","dt2"]}

function ArcadePhysicsEngine_createMovingSprite__P4990_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_createMovingSprite__P4990, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  ovx___21636: undefined,
  ovy___21641: undefined,
  fx___21668: undefined,
  c___21675: undefined,
  fy___21718: undefined,
  c___21725: undefined,
  dx___21764: undefined,
  dy___21777: undefined,
  xStep___21790: undefined,
  yStep___21792: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function ArcadePhysicsEngine_constrain__P4996(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2528_VT)) failedCast(r0);
    s.lastBrkId = 1664;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1664]) return breakpoint(s, 1, 1664, r0);
  case 1:
    s.tmp_0 = Fx_max__P167_mk(s);
    s.tmp_1 = Fx_min__P166_mk(s);
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 793; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["maxNegativeVelocity"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 794; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_constrain__P4996.info = {"start":27343,"length":193,"line":761,"column":4,"endLine":769,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"constrain","argumentNames":["this","v"]}

function ArcadePhysicsEngine_constrain__P4996_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_constrain__P4996, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_compare__P164(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 218;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[218]) return breakpoint(s, 1, 218, r0);
  case 1:
    r0 = (s.arg0 - s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_compare__P164.info = {"start":1395,"length":106,"line":41,"column":4,"endLine":43,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"compare","argumentNames":["a","b"]}

function Fx_compare__P164_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_compare__P164, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteMap_insertAABB__P2454(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.left___21456 = undefined;
    s.top___21459 = undefined;
    s.xn___21462 = undefined;
    s.yn___21473 = undefined;
    s.x___21484 = undefined;
    s.y___21489 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2447_VT)) failedCast(r0);
    s.lastBrkId = 1292;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1292]) return breakpoint(s, 5, 1292, r0);
  case 5:
    s.tmp_0 = Sprite_left__P2400_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.callLocIdx = 512; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.left___21456 = (r0);
    s.lastBrkId = 1293;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1293]) return breakpoint(s, 7, 1293, r0);
  case 7:
    s.tmp_0 = Sprite_top__P2404_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.callLocIdx = 513; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.top___21459 = (r0);
    s.lastBrkId = 1294;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1294]) return breakpoint(s, 9, 1294, r0);
  case 9:
    s.tmp_3 = Sprite_width__P2398_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.callLocIdx = 514; s.pc = 10; return s.tmp_3;
  case 10:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_5 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_5);
    s.xn___21462 = (r0);
    s.lastBrkId = 1295;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1295]) return breakpoint(s, 11, 1295, r0);
  case 11:
    s.tmp_3 = Sprite_height__P2399_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.callLocIdx = 515; s.pc = 12; return s.tmp_3;
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_5 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_5);
    s.yn___21473 = (r0);
    s.lastBrkId = 1296;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1296]) return breakpoint(s, 13, 1296, r0);
  case 13:
    s.x___21484 = (0);
    s.lastBrkId = 1297;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1297]) return breakpoint(s, 14, 1297, r0);
  case 14:
  case 1:
    s.lastBrkId = 1298;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1298]) return breakpoint(s, 15, 1298, r0);
  case 15:
    r0 = (s.x___21484 <= s.xn___21462);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1299;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1299]) return breakpoint(s, 16, 1299, r0);
  case 16:
    s.y___21489 = (0);
    s.lastBrkId = 1300;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1300]) return breakpoint(s, 17, 1300, r0);
  case 17:
  case 2:
    s.lastBrkId = 1301;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1301]) return breakpoint(s, 18, 1301, r0);
  case 18:
    r0 = (s.y___21489 <= s.yn___21473);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1302;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1302]) return breakpoint(s, 19, 1302, r0);
  case 19:
    s.tmp_1 = sprites_SpriteMap_insertAtKey__P4954_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = r0 = s.left___21456;
    s.tmp_4 = Math_min__P131_mk(s);
    s.tmp_5 = Sprite_width__P2398_mk(s);
    s.tmp_5.arg0 = s.arg1;
    s.callLocIdx = 516; s.pc = 22; return s.tmp_5;
  case 22:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_6 = r0;
    r0 = (s.x___21484 * s.tmp_6);
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 517; s.pc = 21; return s.tmp_4;
  case 21:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1.arg1 = r0;
    s.tmp_7 = r0 = s.top___21459;
    s.tmp_9 = Math_min__P131_mk(s);
    s.tmp_10 = Sprite_height__P2399_mk(s);
    s.tmp_10.arg0 = s.arg1;
    s.callLocIdx = 518; s.pc = 24; return s.tmp_10;
  case 24:
    r0 = s.retval;
    s.tmp_9.arg0 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_11 = r0;
    r0 = (s.y___21489 * s.tmp_11);
    s.tmp_9.arg1 = r0;
    s.callLocIdx = 519; s.pc = 23; return s.tmp_9;
  case 23:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_7 + s.tmp_8);
    s.tmp_1.arg2 = r0;
    s.tmp_1.arg3 = s.arg1;
    s.callLocIdx = 520; s.pc = 20; return s.tmp_1;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 1303;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1303]) return breakpoint(s, 25, 1303, r0);
  case 25:
    r0 = (s.y___21489 + 1);
    s.y___21489 = (r0);
    { step = 2; continue; }
  case 3:
    s.lastBrkId = 1304;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1304]) return breakpoint(s, 26, 1304, r0);
  case 26:
    r0 = (s.x___21484 + 1);
    s.x___21484 = (r0);
    { step = 1; continue; }
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_insertAABB__P2454.info = {"start":3184,"length":521,"line":91,"column":8,"endLine":99,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"insertAABB","argumentNames":["this","sprite"]}

function sprites_SpriteMap_insertAABB__P2454_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_insertAABB__P2454, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  left___21456: undefined,
  top___21459: undefined,
  xn___21462: undefined,
  yn___21473: undefined,
  x___21484: undefined,
  y___21489: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteMap_insertAtKey__P4954(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.k___21524 = undefined;
    s.bucket___21529 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2447_VT)) failedCast(r0);
    s.lastBrkId = 1286;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1286]) return breakpoint(s, 5, 1286, r0);
  case 5:
    s.tmp_0 = sprites_SpriteMap_key__P4953_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.callLocIdx = 511; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.k___21524 = (r0);
    s.lastBrkId = 1287;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1287]) return breakpoint(s, 7, 1287, r0);
  case 7:
    r0 = s.arg0.fields["buckets"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.k___21524);
    s.bucket___21529 = (r0);
    s.lastBrkId = 1288;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1288]) return breakpoint(s, 8, 1288, r0);
  case 8:
    r0 = pxsim_numops_toBoolDecr(s.bucket___21529);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1289;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1289]) return breakpoint(s, 9, 1289, r0);
  case 9:
    r0 = s.arg0.fields["buckets"];
    s.tmp_2 = r0;
    s.tmp_3 = r0 = s.k___21524;
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_2, s.tmp_3, s.tmp_4);
    s.bucket___21529 = (s.tmp_4);
  case 1:
  case 2:
    s.lastBrkId = 1290;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1290]) return breakpoint(s, 10, 1290, r0);
  case 10:
    r0 = pxsim_Array_.indexOf(s.bucket___21529, s.arg3, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1291;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1291]) return breakpoint(s, 11, 1291, r0);
  case 11:
    r0 = pxsim_Array__push(s.bucket___21529, s.arg3);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_insertAtKey__P4954.info = {"start":2872,"length":302,"line":82,"column":8,"endLine":89,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"insertAtKey","argumentNames":["this","x","y","sprite"]}

function sprites_SpriteMap_insertAtKey__P4954_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_insertAtKey__P4954, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  k___21524: undefined,
  bucket___21529: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function sprites_SpriteMap_clear__P2453(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2447_VT)) failedCast(r0);
    s.lastBrkId = 1282;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1282]) return breakpoint(s, 1, 1282, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["buckets"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_clear__P2453.info = {"start":2532,"length":50,"line":72,"column":8,"endLine":74,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"clear","argumentNames":["this"]}

function sprites_SpriteMap_clear__P2453_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_clear__P2453, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function sprites_SpriteMap_resizeBuckets__P2452(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.maxWidth___21559 = undefined;
    s.maxHeight___21560 = undefined;
    s.sprite___21562 = undefined;
    s.unnamed1314___U3 = undefined;
    s.unnamed1315___U4 = undefined;
    s.tMap___21578 = undefined;
    s.areaWidth___21582 = undefined;
    s.areaHeight___21589 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2447_VT)) failedCast(r0);
    s.lastBrkId = 1266;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1266]) return breakpoint(s, 11, 1266, r0);
  case 11:
    s.maxWidth___21559 = (0);
    s.lastBrkId = 1267;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1267]) return breakpoint(s, 12, 1267, r0);
  case 12:
    s.maxHeight___21560 = (0);
    s.lastBrkId = 1268;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1268]) return breakpoint(s, 13, 1268, r0);
  case 13:
    s.sprite___21562 = (undefined);
    s.unnamed1314___U3 = (s.arg1);
    s.unnamed1315___U4 = (0);
    s.lastBrkId = 1269;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1269]) return breakpoint(s, 14, 1269, r0);
  case 14:
  case 1:
    s.tmp_0 = r0 = s.unnamed1315___U4;
    r0 = pxsim_Array__length(s.unnamed1314___U3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1314___U3, s.unnamed1315___U4);
    s.sprite___21562 = (r0);
    s.lastBrkId = 1270;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1270]) return breakpoint(s, 15, 1270, r0);
  case 15:
    s.lastBrkId = 1271;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1271]) return breakpoint(s, 16, 1271, r0);
  case 16:
    s.tmp_4 = Sprite_width__P2398_mk(s);
    s.tmp_4.arg0 = s.sprite___21562;
    s.callLocIdx = 500; s.pc = 17; return s.tmp_4;
  case 17:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > s.maxWidth___21559);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 1272;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1272]) return breakpoint(s, 18, 1272, r0);
  case 18:
    s.tmp_5 = Sprite_width__P2398_mk(s);
    s.tmp_5.arg0 = s.sprite___21562;
    s.callLocIdx = 501; s.pc = 19; return s.tmp_5;
  case 19:
    r0 = s.retval;
    s.maxWidth___21559 = (r0);
  case 2:
  case 3:
    s.lastBrkId = 1273;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1273]) return breakpoint(s, 20, 1273, r0);
  case 20:
    s.tmp_2 = Sprite_height__P2399_mk(s);
    s.tmp_2.arg0 = s.sprite___21562;
    s.callLocIdx = 502; s.pc = 21; return s.tmp_2;
  case 21:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.maxHeight___21560);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.lastBrkId = 1274;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1274]) return breakpoint(s, 22, 1274, r0);
  case 22:
    s.tmp_3 = Sprite_height__P2399_mk(s);
    s.tmp_3.arg0 = s.sprite___21562;
    s.callLocIdx = 503; s.pc = 23; return s.tmp_3;
  case 23:
    r0 = s.retval;
    s.maxHeight___21560 = (r0);
  case 4:
  case 5:
    r0 = (s.unnamed1315___U4 + 1);
    s.unnamed1315___U4 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed1314___U3 = (undefined);
    s.lastBrkId = 1275;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1275]) return breakpoint(s, 24, 1275, r0);
  case 24:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 504; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tMap___21578 = (r0);
    s.lastBrkId = 1276;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1276]) return breakpoint(s, 26, 1276, r0);
  case 26:
    r0 = pxsim_numops_toBoolDecr(s.tMap___21578);
    if (!r0) { step = 7; continue; }
    s.tmp_0 = tiles_TileMap_areaWidth__P2744_mk(s);
    s.tmp_0.arg0 = s.tMap___21578;
    s.callLocIdx = 505; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    { step = 8; continue; }
  case 7:
    r0 = pxsim_ImageMethods.width(globals.screen___2033);
  case 8:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.areaWidth___21582 = (s.tmp_1);
    s.lastBrkId = 1277;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1277]) return breakpoint(s, 28, 1277, r0);
  case 28:
    r0 = pxsim_numops_toBoolDecr(s.tMap___21578);
    if (!r0) { step = 9; continue; }
    s.tmp_0 = tiles_TileMap_areaHeight__P2745_mk(s);
    s.tmp_0.arg0 = s.tMap___21578;
    s.callLocIdx = 506; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    { step = 10; continue; }
  case 9:
    r0 = pxsim_ImageMethods.height(globals.screen___2033);
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.areaHeight___21589 = (s.tmp_1);
    s.lastBrkId = 1278;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1278]) return breakpoint(s, 30, 1278, r0);
  case 30:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_clamp__P127_mk(s);
    s.tmp_2.arg0 = 8;
    r0 = (s.areaWidth___21582 >> 2);
    s.tmp_2.arg1 = r0;
    r0 = (s.maxWidth___21559 * 2);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 507; s.pc = 31; return s.tmp_2;
  case 31:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cellWidth"] = (s.tmp_1);
    s.lastBrkId = 1279;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1279]) return breakpoint(s, 32, 1279, r0);
  case 32:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_clamp__P127_mk(s);
    s.tmp_2.arg0 = 8;
    r0 = (s.areaHeight___21589 >> 2);
    s.tmp_2.arg1 = r0;
    r0 = (s.maxHeight___21560 * 2);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 508; s.pc = 33; return s.tmp_2;
  case 33:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cellHeight"] = (s.tmp_1);
    s.lastBrkId = 1280;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1280]) return breakpoint(s, 34, 1280, r0);
  case 34:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_2 = r0;
    r0 = pxsim.Math_.idiv(s.areaHeight___21589, s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["rowCount"] = (s.tmp_1);
    s.lastBrkId = 1281;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1281]) return breakpoint(s, 35, 1281, r0);
  case 35:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_2 = r0;
    r0 = pxsim.Math_.idiv(s.areaWidth___21582, s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["columnCount"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_resizeBuckets__P2452.info = {"start":1696,"length":826,"line":52,"column":8,"endLine":70,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"resizeBuckets","argumentNames":["this","sprites"]}

function sprites_SpriteMap_resizeBuckets__P2452_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_resizeBuckets__P2452, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  maxWidth___21559: undefined,
  maxHeight___21560: undefined,
  sprite___21562: undefined,
  unnamed1314___U3: undefined,
  unnamed1315___U4: undefined,
  tMap___21578: undefined,
  areaWidth___21582: undefined,
  areaHeight___21589: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_clearObstacles__P2426(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1187;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1187]) return breakpoint(s, 1, 1187, r0);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_obstacles"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_clearObstacles__P2426.info = {"start":24932,"length":54,"line":813,"column":4,"endLine":815,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"clearObstacles","argumentNames":["this"]}

function Sprite_clearObstacles__P2426_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_clearObstacles__P2426, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Fx_idiv__P163(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 217;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[217]) return breakpoint(s, 1, 217, r0);
  case 1:
    r0 = pxsim.Math_.idiv(s.arg0, s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_idiv__P163.info = {"start":1279,"length":111,"line":38,"column":4,"endLine":40,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"idiv","argumentNames":["a","b"]}

function Fx_idiv__P163_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_idiv__P163, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arrayMap__P106(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___21854 = undefined;
    s.len___21856 = undefined;
    s.i___21859 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.lastBrkId = 58;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[58]) return breakpoint(s, 3, 58, r0);
  case 3:
    r0 = pxsim_Array__mk();
    s.res___21854 = (r0);
    s.lastBrkId = 59;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[59]) return breakpoint(s, 4, 59, r0);
  case 4:
    r0 = pxsim_Array__length(s.arg0);
    s.len___21856 = (r0);
    s.lastBrkId = 60;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[60]) return breakpoint(s, 5, 60, r0);
  case 5:
    s.i___21859 = (0);
    s.lastBrkId = 61;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[61]) return breakpoint(s, 6, 61, r0);
  case 6:
  case 1:
    s.lastBrkId = 62;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[62]) return breakpoint(s, 7, 62, r0);
  case 7:
    r0 = (s.i___21859 < s.len___21856);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 63;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[63]) return breakpoint(s, 8, 63, r0);
  case 8:
    s.tmp_1 = r0 = s.res___21854;
    s.tmp_3 = lambda_3_mk(s);
    s.tmp_3.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___21859);
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.i___21859;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 3; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    s.lastBrkId = 64;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[64]) return breakpoint(s, 10, 64, r0);
  case 10:
    r0 = (s.i___21859 + 1);
    s.i___21859 = (r0);
    { step = 1; continue; }
  case 2:
    s.lastBrkId = 65;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[65]) return breakpoint(s, 11, 65, r0);
  case 11:
    r0 = s.res___21854;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayMap__P106.info = {"start":6528,"length":299,"line":229,"column":4,"endLine":236,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayMap","argumentNames":["arr","callbackfn"]}

function helpers_arrayMap__P106_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayMap__P106, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  res___21854: undefined,
  len___21856: undefined,
  i___21859: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_draw__P2539(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2528_VT)) failedCast(r0);
    s.lastBrkId = 1363;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1363]) return breakpoint(s, 1, 1363, r0);
  case 1:
    s.tmp_0 = sprites_SpriteMap_draw__P2451_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 546; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_draw__P2539.info = {"start":2777,"length":39,"line":108,"column":4,"endLine":110,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"draw","argumentNames":["this"]}

function ArcadePhysicsEngine_draw__P2539_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_draw__P2539, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_SpriteMap_draw__P2451(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.x___21880 = undefined;
    s.y___21886 = undefined;
    s.left___21892 = undefined;
    s.top___21897 = undefined;
    s.k___21902 = undefined;
    s.b___21907 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2447_VT)) failedCast(r0);
    s.lastBrkId = 1252;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1252]) return breakpoint(s, 9, 1252, r0);
  case 9:
    s.x___21880 = (0);
    s.lastBrkId = 1253;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1253]) return breakpoint(s, 10, 1253, r0);
  case 10:
  case 1:
    s.lastBrkId = 1254;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1254]) return breakpoint(s, 11, 1254, r0);
  case 11:
    r0 = s.arg0.fields["columnCount"];
    s.tmp_1 = r0;
    r0 = (s.x___21880 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 1255;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1255]) return breakpoint(s, 12, 1255, r0);
  case 12:
    s.y___21886 = (0);
    s.lastBrkId = 1256;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1256]) return breakpoint(s, 13, 1256, r0);
  case 13:
  case 2:
    s.lastBrkId = 1257;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1257]) return breakpoint(s, 14, 1257, r0);
  case 14:
    r0 = s.arg0.fields["rowCount"];
    s.tmp_1 = r0;
    r0 = (s.y___21886 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1258;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1258]) return breakpoint(s, 15, 1258, r0);
  case 15:
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_2 = r0;
    r0 = (s.x___21880 * s.tmp_2);
    s.left___21892 = (r0);
    s.lastBrkId = 1259;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1259]) return breakpoint(s, 16, 1259, r0);
  case 16:
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_0 = r0;
    r0 = (s.y___21886 * s.tmp_0);
    s.top___21897 = (r0);
    s.lastBrkId = 1260;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1260]) return breakpoint(s, 17, 1260, r0);
  case 17:
    s.tmp_0 = sprites_SpriteMap_key__P4953_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.left___21892;
    s.tmp_0.arg2 = s.top___21897;
    s.callLocIdx = 498; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.k___21902 = (r0);
    s.lastBrkId = 1261;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1261]) return breakpoint(s, 19, 1261, r0);
  case 19:
    r0 = s.arg0.fields["buckets"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.k___21902);
    s.b___21907 = (r0);
    s.lastBrkId = 1262;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1262]) return breakpoint(s, 20, 1262, r0);
  case 20:
    s.tmp_0 = r0 = s.b___21907;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = pxsim_Array__length(s.b___21907);
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1263;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1263]) return breakpoint(s, 21, 1263, r0);
  case 21:
    s.tmp_2 = helpers_imageDrawRect__P1960_mk(s);
    s.tmp_2.arg0 = globals.screen___2033;
    s.tmp_2.arg1 = s.left___21892;
    s.tmp_2.arg2 = s.top___21897;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_2.arg3 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_2.arg4 = r0;
    s.tmp_2.arg5 = 5;
    s.callLocIdx = 499; s.pc = 22; return s.tmp_2;
  case 22:
    r0 = s.retval;
  case 5:
  case 6:
    s.lastBrkId = 1264;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1264]) return breakpoint(s, 23, 1264, r0);
  case 23:
    r0 = (s.y___21886 + 1);
    s.y___21886 = (r0);
    { step = 2; continue; }
  case 7:
    s.lastBrkId = 1265;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1265]) return breakpoint(s, 24, 1265, r0);
  case 24:
    r0 = (s.x___21880 + 1);
    s.x___21880 = (r0);
    { step = 1; continue; }
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_draw__P2451.info = {"start":1122,"length":496,"line":36,"column":8,"endLine":47,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"draw","argumentNames":["this"]}

function sprites_SpriteMap_draw__P2451_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_draw__P2451, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  x___21880: undefined,
  y___21886: undefined,
  left___21892: undefined,
  top___21897: undefined,
  k___21902: undefined,
  b___21907: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_removeSprite__P2538(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2528_VT)) failedCast(r0);
    s.lastBrkId = 1362;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1362]) return breakpoint(s, 1, 1362, r0);
  case 1:
    r0 = s.arg0.fields["sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_removeSprite__P2538.info = {"start":2691,"length":80,"line":104,"column":4,"endLine":106,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"removeSprite","argumentNames":["this","sprite"]}

function ArcadePhysicsEngine_removeSprite__P2538_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_removeSprite__P2538, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_addSprite__P2537(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tm___21944 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2528_VT)) failedCast(r0);
    s.lastBrkId = 1358;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1358]) return breakpoint(s, 5, 1358, r0);
  case 5:
    r0 = s.arg0.fields["sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    s.lastBrkId = 1359;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1359]) return breakpoint(s, 6, 1359, r0);
  case 6:
    s.tmp_0 = game_currentScene__P3000_mk(s);
    s.callLocIdx = 544; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tm___21944 = (r0);
    s.lastBrkId = 1360;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1360]) return breakpoint(s, 8, 1360, r0);
  case 8:
    s.tmp_0 = r0 = s.tm___21944;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = tiles_TileMap_isOnWall__P2759_mk(s);
    s.tmp_1.arg0 = s.tm___21944;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 545; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1361;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1361]) return breakpoint(s, 10, 1361, r0);
  case 10:
    s.tmp_3 = r0 = s.arg1;
    r0 = s.tmp_3.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 | 256);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["flags"] = (s.tmp_4);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_addSprite__P2537.info = {"start":2465,"length":220,"line":96,"column":4,"endLine":102,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"addSprite","argumentNames":["this","sprite"]}

function ArcadePhysicsEngine_addSprite__P2537_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_addSprite__P2537, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tm___21944: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMapData_constructor__P2719(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2718_VT)) failedCast(r0);
    s.lastBrkId = 1764;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1764]) return breakpoint(s, 1, 1764, r0);
  case 1:
    r0 = (s.arg0).fields["data"] = (s.arg1);
    s.lastBrkId = 1765;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1765]) return breakpoint(s, 2, 1765, r0);
  case 2:
    r0 = (s.arg0).fields["layers"] = (s.arg2);
    s.lastBrkId = 1766;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1766]) return breakpoint(s, 3, 1766, r0);
  case 3:
    r0 = (s.arg0).fields["tileset"] = (s.arg3);
    s.lastBrkId = 1767;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1767]) return breakpoint(s, 4, 1767, r0);
  case 4:
    s.tmp_0 = tiles_TileMapData_scale__P2723_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg4;
    s.callLocIdx = 816; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.lastBrkId = 1768;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1768]) return breakpoint(s, 6, 1768, r0);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.BufferMethods.getNumber(s.arg1, 4, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_width"] = (s.tmp_1);
    s.lastBrkId = 1769;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1769]) return breakpoint(s, 7, 1769, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.BufferMethods.getNumber(s.arg1, 4, 2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_height"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_constructor__P2719.info = {"start":6048,"length":358,"line":204,"column":8,"endLine":212,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["this","data","layers","tileset","scale"]}

function tiles_TileMapData_constructor__P2719_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_constructor__P2719, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function tiles_TileMapData_scale__P2723(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2718_VT)) failedCast(r0);
    s.lastBrkId = 1773;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1773]) return breakpoint(s, 1, 1773, r0);
  case 1:
    r0 = (s.arg0).fields["_scale"] = (s.arg1);
    s.lastBrkId = 1774;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1774]) return breakpoint(s, 2, 1774, r0);
  case 2:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cachedTileView"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_scale__P2723.info = {"start":6640,"length":102,"line":226,"column":8,"endLine":229,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this","s"]}

function tiles_TileMapData_scale__P2723_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_scale__P2723, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_constructor__P2738(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2736_VT)) failedCast(r0);
    s.lastBrkId = 1791;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1791]) return breakpoint(s, 1, 1791, r0);
  case 1:
    r0 = (s.arg0).fields["_layer"] = (1);
    s.lastBrkId = 1792;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1792]) return breakpoint(s, 2, 1792, r0);
  case 2:
    s.tmp_0 = tiles_TileMap_scale__P2740_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 822; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.lastBrkId = 1793;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1793]) return breakpoint(s, 4, 1793, r0);
  case 4:
    r0 = pxsim_pxtcore_mkAction(1, tiles_TileMap_inline__P17789);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = r0 = s.arg0;
    s.tmp_3 = scene_createRenderable__P2806_mk(s);
    s.tmp_3.arg0 = -1;
    s.tmp_3.arg1 = s.tmp_0;
    s.tmp_3.arg2 = undefined;
    s.callLocIdx = 824; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["renderable"] = (s.tmp_2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_constructor__P2738.info = {"start":8927,"length":268,"line":300,"column":8,"endLine":308,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["this","scale"]}

function tiles_TileMap_constructor__P2738_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_constructor__P2738, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_inline__P17789(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = tiles_TileMap_draw__P5066_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 823; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_inline__P17789.info = {"start":9145,"length":25,"line":306,"column":16,"endLine":306,"endColumn":41,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["t","c"]}

function tiles_TileMap_inline__P17789_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_inline__P17789, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_draw__P5066(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.bitmask___17800 = undefined;
    s.offsetX___17806 = undefined;
    s.offsetY___17811 = undefined;
    s.x0___17816 = undefined;
    s.xn___17823 = undefined;
    s.y0___17840 = undefined;
    s.yn___17847 = undefined;
    s.x___17864 = undefined;
    s.y___17870 = undefined;
    s.index___17876 = undefined;
    s.tile___17883 = undefined;
    s.x___17919 = undefined;
    s.xLine___17925 = undefined;
    s.y___17951 = undefined;
    s.yLine___17957 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2736_VT)) failedCast(r0);
    s.lastBrkId = 1807;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1807]) return breakpoint(s, 24, 1807, r0);
  case 24:
    s.tmp_3 = tiles_TileMap_enabled__P2748_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 839; s.pc = 25; return s.tmp_3;
  case 25:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1808;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1808]) return breakpoint(s, 26, 1808, r0);
  case 26:
    { step = 23; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1809;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1809]) return breakpoint(s, 27, 1809, r0);
  case 27:
    s.tmp_6 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 840; s.pc = 28; return s.tmp_6;
  case 28:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (1 << s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 1);
    s.bitmask___17800 = (r0);
    s.lastBrkId = 1810;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1810]) return breakpoint(s, 29, 1810, r0);
  case 29:
    r0 = s.arg2.fields["drawOffsetX"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 & s.bitmask___17800);
    s.offsetX___17806 = (r0);
    s.lastBrkId = 1811;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1811]) return breakpoint(s, 30, 1811, r0);
  case 30:
    r0 = s.arg2.fields["drawOffsetY"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 & s.bitmask___17800);
    s.offsetY___17811 = (r0);
    s.lastBrkId = 1812;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1812]) return breakpoint(s, 31, 1812, r0);
  case 31:
    s.tmp_0 = Math_max__P130_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg2.fields["drawOffsetX"];
    s.tmp_1 = r0;
    s.tmp_3 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 841; s.pc = 33; return s.tmp_3;
  case 33:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >> s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 842; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.x0___17816 = (r0);
    s.lastBrkId = 1813;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1813]) return breakpoint(s, 34, 1813, r0);
  case 34:
    s.tmp_0 = Math_min__P131_mk(s);
    s.tmp_1 = tiles_TileMapData_width__P2720_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 843; s.pc = 36; return s.tmp_1;
  case 36:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg2.fields["drawOffsetX"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_3 = r0;
    s.tmp_7 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.callLocIdx = 844; s.pc = 37; return s.tmp_7;
  case 37:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_3 >> s.tmp_6);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 845; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    s.xn___17823 = (r0);
    s.lastBrkId = 1814;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1814]) return breakpoint(s, 38, 1814, r0);
  case 38:
    s.tmp_0 = Math_max__P130_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg2.fields["drawOffsetY"];
    s.tmp_1 = r0;
    s.tmp_3 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 846; s.pc = 40; return s.tmp_3;
  case 40:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >> s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 847; s.pc = 39; return s.tmp_0;
  case 39:
    r0 = s.retval;
    s.y0___17840 = (r0);
    s.lastBrkId = 1815;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1815]) return breakpoint(s, 41, 1815, r0);
  case 41:
    s.tmp_0 = Math_min__P131_mk(s);
    s.tmp_1 = tiles_TileMapData_height__P2721_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 848; s.pc = 43; return s.tmp_1;
  case 43:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg2.fields["drawOffsetY"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_3 = r0;
    s.tmp_7 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.callLocIdx = 849; s.pc = 44; return s.tmp_7;
  case 44:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_3 >> s.tmp_6);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 850; s.pc = 42; return s.tmp_0;
  case 42:
    r0 = s.retval;
    s.yn___17847 = (r0);
    s.lastBrkId = 1816;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1816]) return breakpoint(s, 45, 1816, r0);
  case 45:
    s.x___17864 = (s.x0___17816);
    s.lastBrkId = 1817;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1817]) return breakpoint(s, 46, 1817, r0);
  case 46:
  case 3:
    s.lastBrkId = 1818;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1818]) return breakpoint(s, 47, 1818, r0);
  case 47:
    r0 = (s.x___17864 <= s.xn___17823);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.lastBrkId = 1819;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1819]) return breakpoint(s, 48, 1819, r0);
  case 48:
    s.y___17870 = (s.y0___17840);
    s.lastBrkId = 1820;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1820]) return breakpoint(s, 49, 1820, r0);
  case 49:
  case 4:
    s.lastBrkId = 1821;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1821]) return breakpoint(s, 50, 1821, r0);
  case 50:
    r0 = (s.y___17870 <= s.yn___17847);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1822;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1822]) return breakpoint(s, 51, 1822, r0);
  case 51:
    s.tmp_1 = tiles_TileMapData_getTile__P2724_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.x___17864;
    s.tmp_1.arg2 = s.y___17870;
    s.callLocIdx = 851; s.pc = 52; return s.tmp_1;
  case 52:
    r0 = s.retval;
    s.index___17876 = (r0);
    s.lastBrkId = 1823;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1823]) return breakpoint(s, 53, 1823, r0);
  case 53:
    s.tmp_0 = tiles_TileMapData_getTileImage__P2727_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.index___17876;
    s.callLocIdx = 852; s.pc = 54; return s.tmp_0;
  case 54:
    r0 = s.retval;
    s.tile___17883 = (r0);
    s.lastBrkId = 1824;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1824]) return breakpoint(s, 55, 1824, r0);
  case 55:
    r0 = pxsim_numops_toBoolDecr(s.tile___17883);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1825;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1825]) return breakpoint(s, 56, 1825, r0);
  case 56:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_1 = r0 = s.tile___17883;
    r0 = (s.x___17864 - s.x0___17816);
    s.tmp_4 = r0;
    s.tmp_6 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 853; s.pc = 57; return s.tmp_6;
  case 57:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 << s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - s.offsetX___17806);
    s.tmp_2 = r0;
    r0 = (s.y___17870 - s.y0___17840);
    s.tmp_9 = r0;
    s.tmp_11 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_11.arg0 = s.arg0;
    s.callLocIdx = 854; s.pc = 58; return s.tmp_11;
  case 58:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_9 << s.tmp_10);
    s.tmp_8 = r0;
    r0 = (s.tmp_8 - s.offsetY___17811);
    s.tmp_7 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, s.tmp_2, s.tmp_7);
  case 5:
  case 6:
    s.lastBrkId = 1826;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1826]) return breakpoint(s, 59, 1826, r0);
  case 59:
    r0 = (s.y___17870 + 1);
    s.y___17870 = (r0);
    { step = 4; continue; }
  case 7:
    s.lastBrkId = 1827;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1827]) return breakpoint(s, 60, 1827, r0);
  case 60:
    r0 = (s.x___17864 + 1);
    s.x___17864 = (r0);
    { step = 3; continue; }
  case 8:
    s.lastBrkId = 1828;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1828]) return breakpoint(s, 61, 1828, r0);
  case 61:
    r0 = pxsim_numops_toBoolDecr(globals.debug___2968);
    if (!r0) { step = 21; continue; }
    s.lastBrkId = 1829;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1829]) return breakpoint(s, 62, 1829, r0);
  case 62:
    s.x___17919 = (s.x0___17816);
    s.lastBrkId = 1830;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1830]) return breakpoint(s, 63, 1830, r0);
  case 63:
  case 9:
    s.lastBrkId = 1831;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1831]) return breakpoint(s, 64, 1831, r0);
  case 64:
    r0 = (s.x___17919 <= s.xn___17823);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.lastBrkId = 1832;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1832]) return breakpoint(s, 65, 1832, r0);
  case 65:
    r0 = (s.x___17919 - s.x0___17816);
    s.tmp_2 = r0;
    s.tmp_4 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 855; s.pc = 66; return s.tmp_4;
  case 66:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 << s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.offsetX___17806);
    s.xLine___17925 = (r0);
    s.lastBrkId = 1833;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1833]) return breakpoint(s, 67, 1833, r0);
  case 67:
    r0 = (s.xLine___17925 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    s.tmp_1 = r0 = s.xLine___17925;
    r0 = pxsim_ImageMethods.width(globals.screen___2033);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 <= s.tmp_2);
  case 11:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    s.lastBrkId = 1834;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1834]) return breakpoint(s, 68, 1834, r0);
  case 68:
    s.tmp_4 = helpers_imageDrawLine__P1959_mk(s);
    s.tmp_4.arg0 = s.arg1;
    s.tmp_4.arg1 = s.xLine___17925;
    s.tmp_4.arg2 = 0;
    s.tmp_4.arg3 = s.xLine___17925;
    r0 = pxsim_ImageMethods.height(s.arg1);
    s.tmp_4.arg4 = r0;
    s.tmp_4.arg5 = 1;
    s.callLocIdx = 856; s.pc = 69; return s.tmp_4;
  case 69:
    r0 = s.retval;
  case 12:
  case 13:
    s.lastBrkId = 1835;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1835]) return breakpoint(s, 70, 1835, r0);
  case 70:
    r0 = (s.x___17919 + 1);
    s.x___17919 = (r0);
    { step = 9; continue; }
  case 14:
    s.lastBrkId = 1836;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1836]) return breakpoint(s, 71, 1836, r0);
  case 71:
    s.y___17951 = (s.y0___17840);
    s.lastBrkId = 1837;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1837]) return breakpoint(s, 72, 1837, r0);
  case 72:
  case 15:
    s.lastBrkId = 1838;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1838]) return breakpoint(s, 73, 1838, r0);
  case 73:
    r0 = (s.y___17951 <= s.yn___17847);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.lastBrkId = 1839;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1839]) return breakpoint(s, 74, 1839, r0);
  case 74:
    r0 = (s.y___17951 - s.y0___17840);
    s.tmp_2 = r0;
    s.tmp_4 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 857; s.pc = 75; return s.tmp_4;
  case 75:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 << s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.offsetY___17811);
    s.yLine___17957 = (r0);
    s.lastBrkId = 1840;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1840]) return breakpoint(s, 76, 1840, r0);
  case 76:
    r0 = (s.yLine___17957 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 16:
    s.tmp_1 = r0 = s.yLine___17957;
    r0 = pxsim_ImageMethods.height(globals.screen___2033);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 <= s.tmp_2);
  case 17:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 18; continue; }
    s.lastBrkId = 1841;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1841]) return breakpoint(s, 77, 1841, r0);
  case 77:
    s.tmp_4 = helpers_imageDrawLine__P1959_mk(s);
    s.tmp_4.arg0 = s.arg1;
    s.tmp_4.arg1 = 0;
    s.tmp_4.arg2 = s.yLine___17957;
    r0 = pxsim_ImageMethods.width(s.arg1);
    s.tmp_4.arg3 = r0;
    s.tmp_4.arg4 = s.yLine___17957;
    s.tmp_4.arg5 = 1;
    s.callLocIdx = 858; s.pc = 78; return s.tmp_4;
  case 78:
    r0 = s.retval;
  case 18:
  case 19:
    s.lastBrkId = 1842;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1842]) return breakpoint(s, 79, 1842, r0);
  case 79:
    r0 = (s.y___17951 + 1);
    s.y___17951 = (r0);
    { step = 15; continue; }
  case 20:
  case 21:
  case 22:
  case 23:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_draw__P5066.info = {"start":13998,"length":2224,"line":458,"column":8,"endLine":513,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"draw","argumentNames":["this","target","camera"]}

function tiles_TileMap_draw__P5066_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_draw__P5066, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  bitmask___17800: undefined,
  offsetX___17806: undefined,
  offsetY___17811: undefined,
  x0___17816: undefined,
  xn___17823: undefined,
  y0___17840: undefined,
  yn___17847: undefined,
  x___17864: undefined,
  y___17870: undefined,
  index___17876: undefined,
  tile___17883: undefined,
  x___17919: undefined,
  xLine___17925: undefined,
  y___17951: undefined,
  yLine___17957: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMap_scale__P2740(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2736_VT)) failedCast(r0);
    s.lastBrkId = 1795;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1795]) return breakpoint(s, 3, 1795, r0);
  case 3:
    r0 = (s.arg0).fields["_scale"] = (s.arg1);
    s.lastBrkId = 1796;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1796]) return breakpoint(s, 4, 1796, r0);
  case 4:
    r0 = s.arg0.fields["_map"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1797;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1797]) return breakpoint(s, 5, 1797, r0);
  case 5:
    s.tmp_1 = tiles_TileMapData_scale__P2723_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 825; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_scale__P2740.info = {"start":9270,"length":144,"line":314,"column":8,"endLine":319,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this","s"]}

function tiles_TileMap_scale__P2740_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_scale__P2740, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_data__P2741(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2736_VT)) failedCast(r0);
    s.lastBrkId = 1798;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1798]) return breakpoint(s, 1, 1798, r0);
  case 1:
    r0 = s.arg0.fields["_map"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_data__P2741.info = {"start":9424,"length":65,"line":321,"column":8,"endLine":323,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"data","argumentNames":["this"]}
tiles_TileMap_data__P2741.isGetter = true;

function tiles_TileMap_data__P2741_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_data__P2741, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Sprite_toString__P2435(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1214;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1214]) return breakpoint(s, 1, 1214, r0);
  case 1:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_9 = r0;
    r0 = s.arg0.fields["id"];
    s.tmp_11 = r0;
    if ((s.tmp_11) && (s.tmp_11).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_11);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_11) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_String__concat(s.tmp_9, s.tmp_10);
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_8, "(");
    s.tmp_7 = r0;
    s.tmp_14 = Sprite_x__P2355_mk(s);
    s.tmp_14.arg0 = s.arg0;
    s.callLocIdx = 451; s.pc = 3; return s.tmp_14;
  case 3:
    r0 = s.retval;
    s.tmp_13 = r0;
    if ((s.tmp_13) && (s.tmp_13).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_13);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_13) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = pxsim_String__concat(s.tmp_7, s.tmp_12);
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_6, ",");
    s.tmp_5 = r0;
    s.tmp_17 = Sprite_y__P2357_mk(s);
    s.tmp_17.arg0 = s.arg0;
    s.callLocIdx = 452; s.pc = 5; return s.tmp_17;
  case 5:
    r0 = s.retval;
    s.tmp_16 = r0;
    if ((s.tmp_16) && (s.tmp_16).vtable) {
    setupResume(s, 6);
    pxsim_String__stringConv(s.tmp_16);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_16) + ""; }
  case 6:
    r0 = s.retval;
    s.tmp_15 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_15);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, ")->(");
    s.tmp_3 = r0;
    s.tmp_20 = Sprite_vx__P2359_mk(s);
    s.tmp_20.arg0 = s.arg0;
    s.callLocIdx = 453; s.pc = 7; return s.tmp_20;
  case 7:
    r0 = s.retval;
    s.tmp_19 = r0;
    if ((s.tmp_19) && (s.tmp_19).vtable) {
    setupResume(s, 8);
    pxsim_String__stringConv(s.tmp_19);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_19) + ""; }
  case 8:
    r0 = s.retval;
    s.tmp_18 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_18);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_23 = Sprite_vy__P2361_mk(s);
    s.tmp_23.arg0 = s.arg0;
    s.callLocIdx = 454; s.pc = 9; return s.tmp_23;
  case 9:
    r0 = s.retval;
    s.tmp_22 = r0;
    if ((s.tmp_22) && (s.tmp_22).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(s.tmp_22);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_22) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_21 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_21);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
Sprite_toString__P2435.info = {"start":34111,"length":93,"line":1066,"column":4,"endLine":1068,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"toString","argumentNames":["this"]}

function Sprite_toString__P2435_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_toString__P2435, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  arg0: undefined,
} }





function Sprite___update__P2417(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1154;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1154]) return breakpoint(s, 11, 1154, r0);
  case 11:
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1155;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1155]) return breakpoint(s, 12, 1155, r0);
  case 12:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["lifespan"];
    s.tmp_4 = r0;
    r0 = (s.arg2 * 1000);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["lifespan"] = (s.tmp_3);
    s.lastBrkId = 1156;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1156]) return breakpoint(s, 13, 1156, r0);
  case 13:
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1157;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1157]) return breakpoint(s, 14, 1157, r0);
  case 14:
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    s.lastBrkId = 1158;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1158]) return breakpoint(s, 15, 1158, r0);
  case 15:
    s.tmp_0 = Sprite__destroyCore__P2430_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 388; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
  case 1:
  case 2:
  case 3:
  case 4:
    s.lastBrkId = 1159;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1159]) return breakpoint(s, 17, 1159, r0);
  case 17:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    s.tmp_2 = Sprite_isOutOfScreen__P2415_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.arg1;
    s.callLocIdx = 389; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1160;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1160]) return breakpoint(s, 19, 1160, r0);
  case 19:
    s.tmp_4 = Sprite_destroy__P2429_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = undefined;
    s.tmp_4.arg2 = undefined;
    s.callLocIdx = 390; s.pc = 20; return s.tmp_4;
  case 20:
    r0 = s.retval;
  case 7:
  case 8:
    s.lastBrkId = 1161;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1161]) return breakpoint(s, 21, 1161, r0);
  case 21:
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1162;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1162]) return breakpoint(s, 22, 1162, r0);
  case 22:
    s.tmp_1 = sprites_BaseSpriteSayRenderer__C2260_v1_4_mk(s);
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg2;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.arg0;
    if (!checkSubtype(s.tmp_1.arg0, sprites_BaseSpriteSayRenderer__C2260_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.update;
    s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
  case 9:
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite___update__P2417.info = {"start":18662,"length":483,"line":628,"column":4,"endLine":642,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"__update","argumentNames":["this","camera","dt"]}

function Sprite___update__P2417_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite___update__P2417, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_isOutOfScreen__P2415(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ox___18151 = undefined;
    s.oy___18159 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1142;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1142]) return breakpoint(s, 11, 1142, r0);
  case 11:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg1.fields["drawOffsetX"];
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.ox___18151 = (s.tmp_2);
    s.lastBrkId = 1143;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1143]) return breakpoint(s, 12, 1143, r0);
  case 12:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = 0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg1.fields["drawOffsetY"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.oy___18159 = (s.tmp_2);
    s.lastBrkId = 1144;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1144]) return breakpoint(s, 13, 1144, r0);
  case 13:
    s.tmp_3 = Sprite_right__P2402_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 379; s.pc = 14; return s.tmp_3;
  case 14:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.ox___18151);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    s.tmp_6 = Sprite_bottom__P2406_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 380; s.pc = 15; return s.tmp_6;
  case 15:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - s.oy___18159);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 < 0);
  case 6:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBool(s.tmp_7);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_7;
    { step = 8; continue; }
  case 7:
    s.tmp_10 = Sprite_left__P2400_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 381; s.pc = 16; return s.tmp_10;
  case 16:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_9 - s.ox___18151);
    s.tmp_8 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___2033);
    s.tmp_11 = r0;
    r0 = (s.tmp_8 > s.tmp_11);
  case 8:
    // jmp value (already in r0)
    s.tmp_12 = r0;
    r0 = pxsim_numops_toBool(s.tmp_12);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_12;
    { step = 10; continue; }
  case 9:
    s.tmp_15 = Sprite_top__P2404_mk(s);
    s.tmp_15.arg0 = s.arg0;
    s.callLocIdx = 382; s.pc = 17; return s.tmp_15;
  case 17:
    r0 = s.retval;
    s.tmp_14 = r0;
    r0 = (s.tmp_14 - s.oy___18159);
    s.tmp_13 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___2033);
    s.tmp_16 = r0;
    r0 = (s.tmp_13 > s.tmp_16);
  case 10:
    // jmp value (already in r0)
    s.tmp_17 = r0;
    r0 = s.tmp_17;
    return leave(s, r0)
  default: oops()
} } }
Sprite_isOutOfScreen__P2415.info = {"start":17830,"length":358,"line":607,"column":4,"endLine":611,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"isOutOfScreen","argumentNames":["this","camera"]}

function Sprite_isOutOfScreen__P2415_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_isOutOfScreen__P2415, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  ox___18151: undefined,
  oy___18159: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSpriteSayRenderer_update__P2263(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSpriteSayRenderer__C2260_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSpriteSayRenderer_update__P2263.info = {"start":250,"length":68,"line":9,"column":8,"endLine":11,"endColumn":9,"fileName":"pxt_modules/game/spritesay.ts","functionName":"update","argumentNames":["this","dt","camera","owner"]}

function sprites_BaseSpriteSayRenderer_update__P2263_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSpriteSayRenderer_update__P2263, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite_data__P2378(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1077;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1077]) return breakpoint(s, 1, 1077, r0);
  case 1:
    r0 = (s.arg0).fields["_data"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_data__P2378.info = {"start":6536,"length":56,"line":241,"column":4,"endLine":243,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"data","argumentNames":["this","value"]}

function Sprite_data__P2378_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_data__P2378, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_data__P2377(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1074;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1074]) return breakpoint(s, 3, 1074, r0);
  case 3:
    r0 = s.arg0.fields["_data"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1075;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1075]) return breakpoint(s, 4, 1075, r0);
  case 4:
    s.tmp_3 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_data"] = (s.tmp_4);
  case 1:
  case 2:
    s.lastBrkId = 1076;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1076]) return breakpoint(s, 5, 1076, r0);
  case 5:
    r0 = s.arg0.fields["_data"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_data__P2377.info = {"start":6438,"length":92,"line":236,"column":4,"endLine":239,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"data","argumentNames":["this"]}
Sprite_data__P2377.isGetter = true;

function Sprite_data__P2377_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_data__P2377, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function sprites_BaseSprite___update__P2103(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C2095_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___update__P2103.info = {"start":1027,"length":46,"line":45,"column":8,"endLine":45,"endColumn":54,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__update","argumentNames":["this","camera","dt"]}

function sprites_BaseSprite___update__P2103_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___update__P2103, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function sprites_BaseSprite___draw__P2101(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C2095_VT)) failedCast(r0);
    s.lastBrkId = 759;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[759]) return breakpoint(s, 3, 759, r0);
  case 3:
    s.tmp_1 = sprites_BaseSprite__C2095_v0_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_1.arg0, sprites_BaseSprite__C2095_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.__visible;
    s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 760;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[760]) return breakpoint(s, 5, 760, r0);
  case 5:
    s.tmp_2 = sprites_BaseSprite__C2095_v2_2_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.arg1;
    if (!checkSubtype(s.tmp_2.arg0, sprites_BaseSprite__C2095_VT)) failedCast(s.tmp_2.arg0);
    s.tmp_2.fn = s.tmp_2.arg0.vtable.methods.__drawCore;
    s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___draw__P2101.info = {"start":840,"length":131,"line":37,"column":8,"endLine":41,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__draw","argumentNames":["this","camera"]}

function sprites_BaseSprite___draw__P2101_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___draw__P2101, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite___drawCore__P2102(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C2095_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___drawCore__P2102.info = {"start":981,"length":36,"line":43,"column":8,"endLine":43,"endColumn":44,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__drawCore","argumentNames":["this","camera"]}

function sprites_BaseSprite___drawCore__P2102_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___drawCore__P2102, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite___visible__P2098(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C2095_VT)) failedCast(r0);
    s.lastBrkId = 754;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[754]) return breakpoint(s, 1, 754, r0);
  case 1:
    r0 = true;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___visible__P2098.info = {"start":524,"length":57,"line":22,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__visible","argumentNames":["this"]}

function sprites_BaseSprite___visible__P2098_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___visible__P2098, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_BackgroundLayer_constructor__P2687(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_BackgroundLayer__C2680_VT)) failedCast(r0);
    s.lastBrkId = 1691;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1691]) return breakpoint(s, 7, 1691, r0);
  case 7:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_max__P130_mk(s);
    s.tmp_2.arg0 = 1;
    s.tmp_2.arg1 = s.arg1;
    s.callLocIdx = 802; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["distance"] = (s.tmp_1);
    s.lastBrkId = 1692;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1692]) return breakpoint(s, 9, 1692, r0);
  case 9:
    r0 = (s.arg0).fields["img"] = (s.arg3);
    s.lastBrkId = 1693;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1693]) return breakpoint(s, 10, 1693, r0);
  case 10:
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 1:
    s.lastBrkId = 1694;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1694]) return breakpoint(s, 11, 1694, r0);
  case 11:
    r0 = (s.arg0).fields["repeatX"] = (true);
    s.lastBrkId = 1695;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1695]) return breakpoint(s, 12, 1695, r0);
  case 12:
    r0 = (s.arg0).fields["repeatY"] = (true);
    s.lastBrkId = 1696;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1696]) return breakpoint(s, 13, 1696, r0);
  case 13:
    r0 = (s.arg0).fields["alignX"] = (5);
    s.lastBrkId = 1697;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1697]) return breakpoint(s, 14, 1697, r0);
  case 14:
    r0 = (s.arg0).fields["alignY"] = (5);
    s.lastBrkId = 1698;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1698]) return breakpoint(s, 15, 1698, r0);
  case 15:
    { step = 6; continue; }
  case 2:
  case 3:
    s.lastBrkId = 1699;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1699]) return breakpoint(s, 16, 1699, r0);
  case 16:
    r0 = (s.arg0).fields["repeatX"] = (false);
    s.lastBrkId = 1700;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1700]) return breakpoint(s, 17, 1700, r0);
  case 17:
    r0 = (s.arg0).fields["repeatY"] = (true);
    s.lastBrkId = 1701;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1701]) return breakpoint(s, 18, 1701, r0);
  case 18:
    r0 = (s.arg0).fields["alignX"] = (s.arg2);
    s.lastBrkId = 1702;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1702]) return breakpoint(s, 19, 1702, r0);
  case 19:
    r0 = (s.arg0).fields["alignY"] = (5);
    s.lastBrkId = 1703;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1703]) return breakpoint(s, 20, 1703, r0);
  case 20:
    { step = 6; continue; }
  case 4:
  case 5:
    s.lastBrkId = 1704;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1704]) return breakpoint(s, 21, 1704, r0);
  case 21:
    r0 = (s.arg0).fields["repeatX"] = (true);
    s.lastBrkId = 1705;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1705]) return breakpoint(s, 22, 1705, r0);
  case 22:
    r0 = (s.arg0).fields["repeatY"] = (false);
    s.lastBrkId = 1706;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1706]) return breakpoint(s, 23, 1706, r0);
  case 23:
    r0 = (s.arg0).fields["alignX"] = (5);
    s.lastBrkId = 1707;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1707]) return breakpoint(s, 24, 1707, r0);
  case 24:
    r0 = (s.arg0).fields["alignY"] = (s.arg2);
    s.lastBrkId = 1708;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1708]) return breakpoint(s, 25, 1708, r0);
  case 25:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_BackgroundLayer_constructor__P2687.info = {"start":1936,"length":1117,"line":72,"column":8,"endLine":97,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"inline","argumentNames":["this","distance","alignment","img"]}

function scene_BackgroundLayer_constructor__P2687_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_BackgroundLayer_constructor__P2687, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function scene_Camera_y__P2792(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2782_VT)) failedCast(r0);
    s.lastBrkId = 1887;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1887]) return breakpoint(s, 1, 1887, r0);
  case 1:
    s.tmp_1 = scene_Camera_offsetY__P2789_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 894; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___2033);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_y__P2792.info = {"start":1536,"length":75,"line":51,"column":8,"endLine":53,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"y","argumentNames":["this"]}
scene_Camera_y__P2792.isGetter = true;

function scene_Camera_y__P2792_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_y__P2792, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function scene_Camera_x__P2791(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2782_VT)) failedCast(r0);
    s.lastBrkId = 1886;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1886]) return breakpoint(s, 1, 1886, r0);
  case 1:
    s.tmp_1 = scene_Camera_offsetX__P2787_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 893; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___2033);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_x__P2791.info = {"start":1453,"length":74,"line":48,"column":8,"endLine":50,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"x","argumentNames":["this"]}
scene_Camera_x__P2791.isGetter = true;

function scene_Camera_x__P2791_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_x__P2791, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function scene_Scene_data__P2869(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2844_VT)) failedCast(r0);
    s.lastBrkId = 1969;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1969]) return breakpoint(s, 1, 1969, r0);
  case 1:
    r0 = s.arg0.fields["_data"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Scene_data__P2869.info = {"start":7014,"length":53,"line":189,"column":8,"endLine":191,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"data","argumentNames":["this"]}
scene_Scene_data__P2869.isGetter = true;

function scene_Scene_data__P2869_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_data__P2869, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function dot_Vec_width__P30673(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Vec__C30670_VT)) failedCast(r0);
    r0 = (s.arg0).fields["x"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Vec_width__P30673.info = {"start":288,"length":36,"line":8,"column":8,"endLine":8,"endColumn":44,"fileName":"vec.ts","functionName":"width","argumentNames":["this","v"]}

function dot_Vec_width__P30673_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Vec_width__P30673, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function dot_Vec_width__P30660(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Vec__C30670_VT)) failedCast(r0);
    r0 = s.arg0.fields["x"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
dot_Vec_width__P30660.info = {"start":122,"length":30,"line":4,"column":8,"endLine":4,"endColumn":38,"fileName":"vec.ts","functionName":"width","argumentNames":["this"]}
dot_Vec_width__P30660.isGetter = true;

function dot_Vec_width__P30660_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Vec_width__P30660, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function dot_Rect_width__P4343(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Rect__C4340_VT)) failedCast(r0);
    r0 = s.arg0.fields["pos"];
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["x"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
dot_Rect_width__P4343.info = {"start":136,"length":38,"line":4,"column":8,"endLine":4,"endColumn":46,"fileName":"rect.ts","functionName":"width","argumentNames":["this"]}
dot_Rect_width__P4343.isGetter = true;

function dot_Rect_width__P4343_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Rect_width__P4343, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_AnyButton_isPressed__P4927(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctrl___18289 = undefined;
    s.b___18293 = undefined;
    s.unnamed1306___U2 = undefined;
    s.unnamed1307___U3 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_AnyButton__C4919_VT)) failedCast(r0);
    s.lastBrkId = 877;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[877]) return breakpoint(s, 6, 877, r0);
  case 6:
    s.tmp_0 = controller__player1__P2129_mk(s);
    s.callLocIdx = 204; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.ctrl___18289 = (r0);
    s.lastBrkId = 878;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[878]) return breakpoint(s, 8, 878, r0);
  case 8:
    s.b___18293 = (undefined);
    r0 = s.ctrl___18289.fields["buttons"];
    s.unnamed1306___U2 = (r0);
    s.unnamed1307___U3 = (0);
    s.lastBrkId = 879;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[879]) return breakpoint(s, 9, 879, r0);
  case 9:
  case 1:
    s.tmp_0 = r0 = s.unnamed1307___U3;
    r0 = pxsim_Array__length(s.unnamed1306___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed1306___U2, s.unnamed1307___U3);
    s.b___18293 = (r0);
    s.lastBrkId = 880;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[880]) return breakpoint(s, 10, 880, r0);
  case 10:
    s.lastBrkId = 881;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[881]) return breakpoint(s, 11, 881, r0);
  case 11:
    s.tmp_3 = controller_Button__C2190_v0_1_mk(s);
    s.tmp_3.arg0 = s.b___18293;
    if (!checkSubtype(s.tmp_3.arg0, controller_Button__C2190_VT)) failedCast(s.tmp_3.arg0);
    s.tmp_3.fn = s.tmp_3.arg0.vtable.methods.isPressed;
    s.pc = 12; return s.tmp_3;
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.lastBrkId = 882;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[882]) return breakpoint(s, 13, 882, r0);
  case 13:
    r0 = true;
    { step = 5; continue; }
  case 2:
  case 3:
    r0 = (s.unnamed1307___U3 + 1);
    s.unnamed1307___U3 = (r0);
    { step = 1; continue; }
  case 4:
    s.unnamed1306___U2 = (undefined);
    s.lastBrkId = 883;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[883]) return breakpoint(s, 14, 883, r0);
  case 14:
    r0 = false;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
controller_AnyButton_isPressed__P4927.info = {"start":15724,"length":202,"line":469,"column":8,"endLine":476,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"isPressed","argumentNames":["this"]}

function controller_AnyButton_isPressed__P4927_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_AnyButton_isPressed__P4927, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  ctrl___18289: undefined,
  b___18293: undefined,
  unnamed1306___U2: undefined,
  unnamed1307___U3: undefined,
  arg0: undefined,
} }





function controller_Button_toString__P2195(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C2190_VT)) failedCast(r0);
    s.lastBrkId = 895;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[895]) return breakpoint(s, 3, 895, r0);
  case 3:
    r0 = s.arg0.fields["_pressed"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = "down";
    { step = 2; continue; }
  case 1:
    r0 = "up";
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.arg0.fields["id"];
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat("btn ", s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, " ");
    s.tmp_2 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 5);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 5:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_6);
    return leave(s, r0)
  default: oops()
} } }
controller_Button_toString__P2195.info = {"start":1894,"length":100,"line":73,"column":8,"endLine":75,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"toString","argumentNames":["this"]}

function controller_Button_toString__P2195_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_toString__P2195, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function sprites_BaseSpriteSayRenderer_constructor__P2261(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSpriteSayRenderer__C2260_VT)) failedCast(r0);
    r0 = (s.arg0).fields["text"] = (s.arg1);
    r0 = (s.arg0).fields["fgColor"] = (s.arg2);
    r0 = (s.arg0).fields["bgColor"] = (s.arg3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSpriteSayRenderer_constructor__P2261.info = {"start":69,"length":92,"line":2,"column":8,"endLine":3,"endColumn":9,"fileName":"pxt_modules/game/spritesay.ts","functionName":"inline","argumentNames":["this","text","fgColor","bgColor"]}

function sprites_BaseSpriteSayRenderer_constructor__P2261_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSpriteSayRenderer_constructor__P2261, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function sprites_StaticObstacle_width__P2509(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2499_VT)) failedCast(r0);
    s.lastBrkId = 1343;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1343]) return breakpoint(s, 1, 1343, r0);
  case 1:
    r0 = s.arg0.fields["image"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_width__P2509.info = {"start":1088,"length":68,"line":48,"column":8,"endLine":50,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"width","argumentNames":["this"]}
sprites_StaticObstacle_width__P2509.isGetter = true;

function sprites_StaticObstacle_width__P2509_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_width__P2509, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_StaticObstacle_height__P2508(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2499_VT)) failedCast(r0);
    s.lastBrkId = 1342;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1342]) return breakpoint(s, 1, 1342, r0);
  case 1:
    r0 = s.arg0.fields["image"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_height__P2508.info = {"start":1008,"length":70,"line":44,"column":8,"endLine":46,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"height","argumentNames":["this"]}
sprites_StaticObstacle_height__P2508.isGetter = true;

function sprites_StaticObstacle_height__P2508_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_height__P2508, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_StaticObstacle_y__P2507(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2499_VT)) failedCast(r0);
    s.lastBrkId = 1341;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1341]) return breakpoint(s, 1, 1341, r0);
  case 1:
    r0 = s.arg0.fields["top"];
    s.tmp_0 = r0;
    s.tmp_3 = sprites_StaticObstacle_height__P2508_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 530; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_y__P2507.info = {"start":921,"length":77,"line":40,"column":8,"endLine":42,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"y","argumentNames":["this"]}
sprites_StaticObstacle_y__P2507.isGetter = true;

function sprites_StaticObstacle_y__P2507_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_y__P2507, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function sprites_StaticObstacle_x__P2506(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2499_VT)) failedCast(r0);
    s.lastBrkId = 1340;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1340]) return breakpoint(s, 1, 1340, r0);
  case 1:
    r0 = s.arg0.fields["left"];
    s.tmp_0 = r0;
    s.tmp_3 = sprites_StaticObstacle_width__P2509_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 529; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_x__P2506.info = {"start":834,"length":77,"line":36,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"x","argumentNames":["this"]}
sprites_StaticObstacle_x__P2506.isGetter = true;

function sprites_StaticObstacle_x__P2506_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_x__P2506, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function tiles_Location_top__P2702(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2694_VT)) failedCast(r0);
    s.lastBrkId = 1762;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1762]) return breakpoint(s, 1, 1762, r0);
  case 1:
    r0 = s.arg0.fields["_row"];
    s.tmp_0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_3 = tiles_Location_tileMap__P2696_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 812; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 813; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 << s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_top__P2702.info = {"start":1791,"length":83,"line":68,"column":8,"endLine":70,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"top","argumentNames":["this"]}
tiles_Location_top__P2702.isGetter = true;

function tiles_Location_top__P2702_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_top__P2702, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function tiles_Location_left__P2701(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2694_VT)) failedCast(r0);
    s.lastBrkId = 1761;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1761]) return breakpoint(s, 1, 1761, r0);
  case 1:
    r0 = s.arg0.fields["_col"];
    s.tmp_0 = r0;
    s.tmp_2 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_3 = tiles_Location_tileMap__P2696_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 810; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 811; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 << s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_left__P2701.info = {"start":1579,"length":84,"line":61,"column":8,"endLine":63,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"left","argumentNames":["this"]}
tiles_Location_left__P2701.isGetter = true;

function tiles_Location_left__P2701_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_left__P2701, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function tiles_Location_y__P2700(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scale___22052 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2694_VT)) failedCast(r0);
    s.lastBrkId = 1759;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1759]) return breakpoint(s, 1, 1759, r0);
  case 1:
    s.tmp_0 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_1 = tiles_Location_tileMap__P2696_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 808; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 809; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.scale___22052 = (r0);
    s.lastBrkId = 1760;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1760]) return breakpoint(s, 4, 1760, r0);
  case 4:
    r0 = s.arg0.fields["_row"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 << s.scale___22052);
    s.tmp_0 = r0;
    r0 = (s.scale___22052 - 1);
    s.tmp_3 = r0;
    r0 = (1 << s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_y__P2700.info = {"start":1315,"length":135,"line":53,"column":8,"endLine":56,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"y","argumentNames":["this"]}
tiles_Location_y__P2700.isGetter = true;

function tiles_Location_y__P2700_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_y__P2700, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scale___22052: undefined,
  arg0: undefined,
} }





function tiles_Location_x__P2699(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scale___22068 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2694_VT)) failedCast(r0);
    s.lastBrkId = 1757;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1757]) return breakpoint(s, 1, 1757, r0);
  case 1:
    s.tmp_0 = tiles_TileMap_scale__P2739_mk(s);
    s.tmp_1 = tiles_Location_tileMap__P2696_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 806; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 807; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.scale___22068 = (r0);
    s.lastBrkId = 1758;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1758]) return breakpoint(s, 4, 1758, r0);
  case 4:
    r0 = s.arg0.fields["_col"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 << s.scale___22068);
    s.tmp_0 = r0;
    r0 = (s.scale___22068 - 1);
    s.tmp_3 = r0;
    r0 = (1 << s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_x__P2699.info = {"start":1054,"length":135,"line":45,"column":8,"endLine":48,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"x","argumentNames":["this"]}
tiles_Location_x__P2699.isGetter = true;

function tiles_Location_x__P2699_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_x__P2699, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scale___22068: undefined,
  arg0: undefined,
} }





function particles_ShapeFactory_drawParticle__P3217(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.pImage___18318 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C3214_VT)) failedCast(r0);
    s.lastBrkId = 2513;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2513]) return breakpoint(s, 1, 2513, r0);
  case 1:
    s.tmp_1 = Math_FastRandom_pickRandom__P3065_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_1.arg0 = r0;
    r0 = s.arg0.fields["sources"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1249; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.clone(s.tmp_0);
    s.pImage___18318 = (r0);
    s.lastBrkId = 2514;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2514]) return breakpoint(s, 3, 2514, r0);
  case 3:
    r0 = s.arg1.fields["color"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.replace(s.pImage___18318, 15, s.tmp_0);
    s.lastBrkId = 2515;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2515]) return breakpoint(s, 4, 2515, r0);
  case 4:
    s.tmp_0 = r0 = globals.screen___2033;
    s.tmp_1 = r0 = s.pImage___18318;
    s.tmp_3 = Fx_toInt__P172_mk(s);
    s.tmp_4 = Fx_sub__P159_mk(s);
    s.tmp_4.arg0 = s.arg2;
    r0 = s.arg0.fields["ox"];
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 1250; s.pc = 6; return s.tmp_4;
  case 6:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1251; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_6 = Fx_toInt__P172_mk(s);
    s.tmp_7 = Fx_sub__P159_mk(s);
    s.tmp_7.arg0 = s.arg3;
    r0 = s.arg0.fields["oy"];
    s.tmp_7.arg1 = r0;
    s.callLocIdx = 1252; s.pc = 8; return s.tmp_7;
  case 8:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 1253; s.pc = 7; return s.tmp_6;
  case 7:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, s.tmp_2, s.tmp_5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_drawParticle__P3217.info = {"start":7172,"length":323,"line":229,"column":8,"endLine":237,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","p","x","y"]}

function particles_ShapeFactory_drawParticle__P3217_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_drawParticle__P3217, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  pImage___18318: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Math_FastRandom_pickRandom__P3065(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C3060_VT)) failedCast(r0);
    s.lastBrkId = 2074;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2074]) return breakpoint(s, 6, 2074, r0);
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 == 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 2075;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2075]) return breakpoint(s, 7, 2075, r0);
  case 7:
    r0 = undefined;
    { step = 5; continue; }
  case 3:
  case 4:
    s.lastBrkId = 2076;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2076]) return breakpoint(s, 8, 2076, r0);
  case 8:
    s.tmp_4 = r0 = s.arg1;
    s.tmp_6 = Math_FastRandom_randomRange__P3064_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.tmp_6.arg1 = 0;
    r0 = pxsim_Array__length(s.arg1);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 - 1);
    s.tmp_6.arg2 = r0;
    s.callLocIdx = 978; s.pc = 9; return s.tmp_6;
  case 9:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.tmp_5);
  case 5:
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_pickRandom__P3065.info = {"start":2358,"length":192,"line":70,"column":8,"endLine":75,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"pickRandom","argumentNames":["this","list"]}

function Math_FastRandom_pickRandom__P3065_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_pickRandom__P3065, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_AreaFactory_drawParticle__P3205(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.col___22089 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_AreaFactory__C3198_VT)) failedCast(r0);
    s.lastBrkId = 2505;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2505]) return breakpoint(s, 5, 2505, r0);
  case 5:
    r0 = s.arg1.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 500);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 4;
    { step = 4; continue; }
  case 1:
    r0 = s.arg1.fields["lifespan"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > 250);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    r0 = 5;
    { step = 3; continue; }
  case 2:
    r0 = 1;
  case 3:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.col___22089 = (s.tmp_5);
    s.lastBrkId = 2506;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2506]) return breakpoint(s, 6, 2506, r0);
  case 6:
    s.tmp_0 = r0 = globals.screen___2033;
    s.tmp_2 = Fx_toInt__P172_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1244; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_toInt__P172_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.callLocIdx = 1245; s.pc = 8; return s.tmp_4;
  case 8:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_3, s.col___22089);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_AreaFactory_drawParticle__P3205.info = {"start":4770,"length":222,"line":158,"column":8,"endLine":163,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","p","x","y"]}

function particles_AreaFactory_drawParticle__P3205_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_AreaFactory_drawParticle__P3205, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  col___22089: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_SprayFactory_drawParticle__P3195(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C3192_VT)) failedCast(r0);
    s.lastBrkId = 2490;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[2490]) return breakpoint(s, 1, 2490, r0);
  case 1:
    s.tmp_0 = r0 = globals.screen___2033;
    s.tmp_2 = Fx_toInt__P172_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.callLocIdx = 1229; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_toInt__P172_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.callLocIdx = 1230; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_3, 1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_drawParticle__P3195.info = {"start":3194,"length":118,"line":115,"column":8,"endLine":117,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","particle","x","y"]}

function particles_SprayFactory_drawParticle__P3195_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_drawParticle__P3195, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function scene_Renderable___drawCore__P2804(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Renderable__C2801_VT)) failedCast(r0);
    s.lastBrkId = 1913;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1913]) return breakpoint(s, 1, 1913, r0);
  case 1:
    s.tmp_0 = if_handler_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = globals.screen___2033;
    s.tmp_0.arg2 = s.arg1;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 3);
      s.callLocIdx = 910; s.pc = 2; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 3); s.callLocIdx = 910; s.pc = 2; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 910; s.pc = 2; return s.tmp_0;; }
     else { s.callLocIdx = 910; s.pc = 2; return s.tmp_0; }
    }
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Renderable___drawCore__P2804.info = {"start":390,"length":86,"line":14,"column":8,"endLine":16,"endColumn":9,"fileName":"pxt_modules/game/renderable.ts","functionName":"__drawCore","argumentNames":["this","camera"]}

function scene_Renderable___drawCore__P2804_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Renderable___drawCore__P2804, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Renderable___visible__P2803(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Renderable__C2801_VT)) failedCast(r0);
    s.lastBrkId = 1912;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1912]) return breakpoint(s, 1, 1912, r0);
  case 1:
    s.tmp_0 = if_shouldBeVisible_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "shouldBeVisible"), 1);
      s.callLocIdx = 909; s.pc = 2; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["shouldBeVisible"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["shouldBeVisible"], 1); s.callLocIdx = 909; s.pc = 2; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 909; s.pc = 2; return s.tmp_0;; }
     else { s.callLocIdx = 909; s.pc = 2; return s.tmp_0; }
    }
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
scene_Renderable___visible__P2803.info = {"start":305,"length":75,"line":10,"column":8,"endLine":12,"endColumn":9,"fileName":"pxt_modules/game/renderable.ts","functionName":"__visible","argumentNames":["this"]}

function scene_Renderable___visible__P2803_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Renderable___visible__P2803, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite___drawCore__P2416(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ox___22128 = undefined;
    s.oy___22136 = undefined;
    s.l___22144 = undefined;
    s.t___22150 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1145;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1145]) return breakpoint(s, 8, 1145, r0);
  case 8:
    s.tmp_0 = Sprite_drawSay__P4947_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 383; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.lastBrkId = 1146;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1146]) return breakpoint(s, 10, 1146, r0);
  case 10:
    s.tmp_1 = Sprite_isOutOfScreen__P2415_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 384; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1147;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1147]) return breakpoint(s, 12, 1147, r0);
  case 12:
    { step = 7; continue; }
  case 1:
  case 2:
    s.lastBrkId = 1148;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1148]) return breakpoint(s, 13, 1148, r0);
  case 13:
    r0 = s.arg0.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 512);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    r0 = 0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg1.fields["drawOffsetX"];
  case 4:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.ox___22128 = (s.tmp_4);
    s.lastBrkId = 1149;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1149]) return breakpoint(s, 14, 1149, r0);
  case 14:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = 0;
    { step = 6; continue; }
  case 5:
    r0 = s.arg1.fields["drawOffsetY"];
  case 6:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.oy___22136 = (s.tmp_2);
    s.lastBrkId = 1150;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1150]) return breakpoint(s, 15, 1150, r0);
  case 15:
    s.tmp_2 = Sprite_left__P2400_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 385; s.pc = 16; return s.tmp_2;
  case 16:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.ox___22128);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.l___22144 = (r0);
    s.lastBrkId = 1151;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1151]) return breakpoint(s, 17, 1151, r0);
  case 17:
    s.tmp_2 = Sprite_top__P2404_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 386; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.oy___22136);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.t___22150 = (r0);
    s.lastBrkId = 1152;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1152]) return breakpoint(s, 19, 1152, r0);
  case 19:
    s.tmp_0 = Sprite__C2342_v6_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.l___22144;
    s.tmp_0.arg2 = s.t___22150;
    if (!checkSubtype(s.tmp_0.arg0, Sprite__C2342_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.drawSprite;
    s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.lastBrkId = 1153;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1153]) return breakpoint(s, 21, 1153, r0);
  case 21:
    s.tmp_0 = Sprite_drawDebug__P4948_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.l___22144;
    s.tmp_0.arg2 = s.t___22150;
    s.tmp_0.arg3 = s.ox___22128;
    s.tmp_0.arg4 = s.oy___22136;
    s.callLocIdx = 387; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite___drawCore__P2416.info = {"start":18194,"length":462,"line":613,"column":4,"endLine":626,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"__drawCore","argumentNames":["this","camera"]}

function Sprite___drawCore__P2416_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite___drawCore__P2416, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  ox___22128: undefined,
  oy___22136: undefined,
  l___22144: undefined,
  t___22150: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_drawSprite__P4949(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1237;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1237]) return breakpoint(s, 3, 1237, r0);
  case 3:
    s.tmp_3 = Sprite_isScaled__P4946_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 479; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1238;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1238]) return breakpoint(s, 5, 1238, r0);
  case 5:
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(globals.screen___2033, s.tmp_4, s.arg1, s.arg2);
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 1239;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1239]) return breakpoint(s, 6, 1239, r0);
  case 6:
    s.tmp_0 = helpers_imageBlit__P1954_mk(s);
    s.tmp_0.arg0 = globals.screen___2033;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_1 = Sprite_width__P2398_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 480; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    s.tmp_2 = Sprite_height__P2399_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 481; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["_image"];
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = 0;
    s.tmp_0.arg7 = 0;
    r0 = s.arg0.fields["_image"];
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_3);
    s.tmp_0.arg8 = r0;
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_4);
    s.tmp_0.arg9 = r0;
    s.tmp_0.arg10 = true;
    s.tmp_0.arg11 = false;
    s.callLocIdx = 482; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_drawSprite__P4949.info = {"start":35888,"length":514,"line":1118,"column":4,"endLine":1132,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"drawSprite","argumentNames":["this","drawLeft","drawTop"]}

function Sprite_drawSprite__P4949_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_drawSprite__P4949, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_drawDebug__P4948(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.font___22174 = undefined;
    s.tx___22178 = undefined;
    s.ty___22180 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1223;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1223]) return breakpoint(s, 13, 1223, r0);
  case 13:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 64);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.lastBrkId = 1224;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1224]) return breakpoint(s, 14, 1224, r0);
  case 14:
    s.font___22174 = (globals.font5___1981);
    s.lastBrkId = 1225;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1225]) return breakpoint(s, 15, 1225, r0);
  case 15:
    s.tx___22178 = (s.arg1);
    s.lastBrkId = 1226;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1226]) return breakpoint(s, 16, 1226, r0);
  case 16:
    s.tmp_1 = r0 = s.arg2;
    s.tmp_3 = Sprite_height__P2399_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 455; s.pc = 17; return s.tmp_3;
  case 17:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 2);
    s.ty___22180 = (r0);
    s.lastBrkId = 1227;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1227]) return breakpoint(s, 18, 1227, r0);
  case 18:
    s.tmp_0 = helpers_imagePrint__P1991_mk(s);
    s.tmp_0.arg0 = globals.screen___2033;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_3 = r0;
    s.tmp_7 = Sprite_x__P2355_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.callLocIdx = 456; s.pc = 20; return s.tmp_7;
  case 20:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 0);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 21);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 21:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_11 = Sprite_y__P2357_mk(s);
    s.tmp_11.arg0 = s.arg0;
    s.callLocIdx = 457; s.pc = 22; return s.tmp_11;
  case 22:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_10 >> 0);
    s.tmp_9 = r0;
    if ((s.tmp_9) && (s.tmp_9).vtable) {
    setupResume(s, 23);
    pxsim_String__stringConv(s.tmp_9);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_9) + ""; }
  case 23:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_8);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.tx___22178;
    s.tmp_0.arg3 = s.ty___22180;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = s.font___22174;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 458; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.lastBrkId = 1228;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1228]) return breakpoint(s, 24, 1228, r0);
  case 24:
    s.tmp_0 = r0 = s.tx___22178;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.font___22174;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 459; s.pc = 25; return s.tmp_2; }
    }
  case 25:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.tx___22178 = (r0);
    s.lastBrkId = 1229;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1229]) return breakpoint(s, 26, 1229, r0);
  case 26:
    s.tmp_1 = Sprite_vx__P2359_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 460; s.pc = 27; return s.tmp_1;
  case 27:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = Sprite_vy__P2361_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 461; s.pc = 28; return s.tmp_2;
  case 28:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1230;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1230]) return breakpoint(s, 29, 1230, r0);
  case 29:
    s.tmp_4 = r0 = s.ty___22180;
    s.tmp_7 = if_charHeight_1_mk(s);
    s.tmp_7.arg0 = s.font___22174;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "charHeight");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["charHeight"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["charHeight"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 462; s.pc = 30; return s.tmp_7; }
    }
  case 30:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 2);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.ty___22180 = (r0);
    s.lastBrkId = 1231;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1231]) return breakpoint(s, 31, 1231, r0);
  case 31:
    s.tmp_0 = helpers_imagePrint__P1991_mk(s);
    s.tmp_0.arg0 = globals.screen___2033;
    s.tmp_6 = Sprite_vx__P2359_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 463; s.pc = 33; return s.tmp_6;
  case 33:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 0);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 34);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 34:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("v", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_10 = Sprite_vy__P2361_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 464; s.pc = 35; return s.tmp_10;
  case 35:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_9 >> 0);
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 36);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 36:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_7);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.tx___22178;
    s.tmp_0.arg3 = s.ty___22180;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = s.font___22174;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 465; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
  case 3:
  case 4:
    s.lastBrkId = 1232;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1232]) return breakpoint(s, 37, 1232, r0);
  case 37:
    s.tmp_1 = Sprite_ax__P2363_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 466; s.pc = 38; return s.tmp_1;
  case 38:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    s.tmp_2 = Sprite_ay__P2365_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 467; s.pc = 39; return s.tmp_2;
  case 39:
    r0 = s.retval;
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.lastBrkId = 1233;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1233]) return breakpoint(s, 40, 1233, r0);
  case 40:
    s.tmp_4 = r0 = s.ty___22180;
    s.tmp_7 = if_charHeight_1_mk(s);
    s.tmp_7.arg0 = s.font___22174;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "charHeight");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["charHeight"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["charHeight"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 468; s.pc = 41; return s.tmp_7; }
    }
  case 41:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 2);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.ty___22180 = (r0);
    s.lastBrkId = 1234;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1234]) return breakpoint(s, 42, 1234, r0);
  case 42:
    s.tmp_0 = helpers_imagePrint__P1991_mk(s);
    s.tmp_0.arg0 = globals.screen___2033;
    s.tmp_6 = Sprite_ax__P2363_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 469; s.pc = 44; return s.tmp_6;
  case 44:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 0);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 45);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 45:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("a", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_10 = Sprite_ay__P2365_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 470; s.pc = 46; return s.tmp_10;
  case 46:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_9 >> 0);
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 47);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 47:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_7);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.tx___22178;
    s.tmp_0.arg3 = s.ty___22180;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = s.font___22174;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 471; s.pc = 43; return s.tmp_0;
  case 43:
    r0 = s.retval;
  case 7:
  case 8:
  case 9:
  case 10:
    s.lastBrkId = 1235;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1235]) return breakpoint(s, 48, 1235, r0);
  case 48:
    r0 = pxsim_numops_toBoolDecr(globals.debug___2968);
    if (!r0) { step = 11; continue; }
    s.lastBrkId = 1236;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1236]) return breakpoint(s, 49, 1236, r0);
  case 49:
    s.tmp_0 = helpers_imageDrawRect__P1960_mk(s);
    s.tmp_0.arg0 = globals.screen___2033;
    s.tmp_2 = Fx_toInt__P172_mk(s);
    s.tmp_3 = game_Hitbox_left__P2217_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 472; s.pc = 52; return s.tmp_3;
  case 52:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 473; s.pc = 51; return s.tmp_2;
  case 51:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.arg3);
    s.tmp_0.arg1 = r0;
    s.tmp_5 = Fx_toInt__P172_mk(s);
    s.tmp_6 = game_Hitbox_top__P2218_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 474; s.pc = 54; return s.tmp_6;
  case 54:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 475; s.pc = 53; return s.tmp_5;
  case 53:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.arg4);
    s.tmp_0.arg2 = r0;
    s.tmp_7 = Fx_toInt__P172_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["width"];
    s.tmp_7.arg0 = r0;
    s.callLocIdx = 476; s.pc = 55; return s.tmp_7;
  case 55:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    s.tmp_8 = Fx_toInt__P172_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["height"];
    s.tmp_8.arg0 = r0;
    s.callLocIdx = 477; s.pc = 56; return s.tmp_8;
  case 56:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 478; s.pc = 50; return s.tmp_0;
  case 50:
    r0 = s.retval;
  case 11:
  case 12:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_drawDebug__P4948.info = {"start":34790,"length":1092,"line":1088,"column":4,"endLine":1116,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"drawDebug","argumentNames":["this","left","top","offsetX","offsetY"]}

function Sprite_drawDebug__P4948_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_drawDebug__P4948, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  font___22174: undefined,
  tx___22178: undefined,
  ty___22180: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function Sprite_drawSay__P4947(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1215;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1215]) return breakpoint(s, 7, 1215, r0);
  case 7:
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.lastBrkId = 1216;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1216]) return breakpoint(s, 8, 1216, r0);
  case 8:
    r0 = s.arg0.fields["sayEndTime"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 !== undefined);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.lastBrkId = 1217;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1217]) return breakpoint(s, 9, 1217, r0);
  case 9:
    r0 = pxsim.control.millis();
    s.tmp_4 = r0;
    r0 = s.arg0.fields["sayEndTime"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 < s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 1; continue; }
    s.lastBrkId = 1218;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1218]) return breakpoint(s, 10, 1218, r0);
  case 10:
    s.tmp_6 = sprites_BaseSpriteSayRenderer__C2260_v0_4_mk(s);
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = globals.screen___2033;
    s.tmp_6.arg2 = s.arg1;
    s.tmp_6.arg3 = s.arg0;
    if (!checkSubtype(s.tmp_6.arg0, sprites_BaseSpriteSayRenderer__C2260_VT)) failedCast(s.tmp_6.arg0);
    s.tmp_6.fn = s.tmp_6.arg0.vtable.methods.draw;
    s.pc = 11; return s.tmp_6;
  case 11:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.lastBrkId = 1219;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1219]) return breakpoint(s, 12, 1219, r0);
  case 12:
    s.tmp_0 = sprites_BaseSpriteSayRenderer__C2260_v2_1_mk(s);
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_0.arg0 = r0;
    if (!checkSubtype(s.tmp_0.arg0, sprites_BaseSpriteSayRenderer__C2260_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.destroy;
    s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.lastBrkId = 1220;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1220]) return breakpoint(s, 14, 1220, r0);
  case 14:
    r0 = (s.arg0).fields["sayRenderer"] = (undefined);
    s.lastBrkId = 1221;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1221]) return breakpoint(s, 15, 1221, r0);
  case 15:
    r0 = (s.arg0).fields["sayEndTime"] = (undefined);
  case 2:
    { step = 4; continue; }
  case 3:
    s.lastBrkId = 1222;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1222]) return breakpoint(s, 16, 1222, r0);
  case 16:
    s.tmp_0 = sprites_BaseSpriteSayRenderer__C2260_v0_4_mk(s);
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = globals.screen___2033;
    s.tmp_0.arg2 = s.arg1;
    s.tmp_0.arg3 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, sprites_BaseSpriteSayRenderer__C2260_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.draw;
    s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
  case 4:
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_drawSay__P4947.info = {"start":34210,"length":574,"line":1070,"column":4,"endLine":1086,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"drawSay","argumentNames":["this","camera"]}

function Sprite_drawSay__P4947_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_drawSay__P4947, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSpriteSayRenderer_destroy__P2264(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSpriteSayRenderer__C2260_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSpriteSayRenderer_destroy__P2264.info = {"start":328,"length":22,"line":13,"column":8,"endLine":15,"endColumn":9,"fileName":"pxt_modules/game/spritesay.ts","functionName":"destroy","argumentNames":["this"]}

function sprites_BaseSpriteSayRenderer_destroy__P2264_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSpriteSayRenderer_destroy__P2264, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_BaseSpriteSayRenderer_draw__P2262(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSpriteSayRenderer__C2260_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSpriteSayRenderer_draw__P2262.info = {"start":171,"length":69,"line":5,"column":8,"endLine":7,"endColumn":9,"fileName":"pxt_modules/game/spritesay.ts","functionName":"draw","argumentNames":["this","screen","camera","owner"]}

function sprites_BaseSpriteSayRenderer_draw__P2262_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSpriteSayRenderer_draw__P2262, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite___visible__P2397(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2342_VT)) failedCast(r0);
    s.lastBrkId = 1110;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1110]) return breakpoint(s, 1, 1110, r0);
  case 1:
    r0 = s.arg0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 128);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
Sprite___visible__P2397.info = {"start":9904,"length":72,"line":359,"column":4,"endLine":361,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"__visible","argumentNames":["this"]}

function Sprite___visible__P2397_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite___visible__P2397, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function scene_Camera_top__P2795(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2782_VT)) failedCast(r0);
    s.lastBrkId = 1889;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1889]) return breakpoint(s, 1, 1889, r0);
  case 1:
    s.tmp_0 = scene_Camera_offsetY__P2789_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 896; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_top__P2795.info = {"start":1764,"length":54,"line":60,"column":8,"endLine":62,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"top","argumentNames":["this"]}
scene_Camera_top__P2795.isGetter = true;

function scene_Camera_top__P2795_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_top__P2795, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_Camera_left__P2793(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2782_VT)) failedCast(r0);
    s.lastBrkId = 1888;
    if ((breakpoints[0] && isBreakFrame(s)) || breakpoints[1888]) return breakpoint(s, 1, 1888, r0);
  case 1:
    s.tmp_0 = scene_Camera_offsetX__P2787_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 895; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_left__P2793.info = {"start":1620,"length":55,"line":54,"column":8,"endLine":56,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"left","argumentNames":["this"]}
scene_Camera_left__P2793.isGetter = true;

function scene_Camera_left__P2793_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_left__P2793, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function dot_Vec_height__P30674(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Vec__C30670_VT)) failedCast(r0);
    r0 = (s.arg0).fields["y"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Vec_height__P30674.info = {"start":333,"length":37,"line":9,"column":8,"endLine":9,"endColumn":45,"fileName":"vec.ts","functionName":"height","argumentNames":["this","v"]}

function dot_Vec_height__P30674_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Vec_height__P30674, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function dot_Vec_height__P30662(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Vec__C30670_VT)) failedCast(r0);
    r0 = s.arg0.fields["y"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
dot_Vec_height__P30662.info = {"start":161,"length":31,"line":5,"column":8,"endLine":5,"endColumn":39,"fileName":"vec.ts","functionName":"height","argumentNames":["this"]}
dot_Vec_height__P30662.isGetter = true;

function dot_Vec_height__P30662_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Vec_height__P30662, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function dot_Vec_top__P30672(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Vec__C30670_VT)) failedCast(r0);
    r0 = (s.arg0).fields["y"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Vec_top__P30672.info = {"start":245,"length":34,"line":7,"column":8,"endLine":7,"endColumn":42,"fileName":"vec.ts","functionName":"top","argumentNames":["this","v"]}

function dot_Vec_top__P30672_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Vec_top__P30672, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function dot_Vec_top__P30658(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Vec__C30670_VT)) failedCast(r0);
    r0 = s.arg0.fields["y"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
dot_Vec_top__P30658.info = {"start":85,"length":28,"line":3,"column":8,"endLine":3,"endColumn":36,"fileName":"vec.ts","functionName":"top","argumentNames":["this"]}
dot_Vec_top__P30658.isGetter = true;

function dot_Vec_top__P30658_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Vec_top__P30658, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function dot_Vec_left__P30671(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Vec__C30670_VT)) failedCast(r0);
    r0 = (s.arg0).fields["x"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dot_Vec_left__P30671.info = {"start":201,"length":35,"line":6,"column":8,"endLine":6,"endColumn":43,"fileName":"vec.ts","functionName":"left","argumentNames":["this","v"]}

function dot_Vec_left__P30671_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Vec_left__P30671, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function dot_Vec_left__P30656(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Vec__C30670_VT)) failedCast(r0);
    r0 = s.arg0.fields["x"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
dot_Vec_left__P30656.info = {"start":47,"length":29,"line":2,"column":8,"endLine":2,"endColumn":37,"fileName":"vec.ts","functionName":"left","argumentNames":["this"]}
dot_Vec_left__P30656.isGetter = true;

function dot_Vec_left__P30656_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Vec_left__P30656, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function dot_Rect_height__P4344(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Rect__C4340_VT)) failedCast(r0);
    r0 = s.arg0.fields["pos"];
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["y"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
dot_Rect_height__P4344.info = {"start":183,"length":40,"line":5,"column":8,"endLine":5,"endColumn":48,"fileName":"rect.ts","functionName":"height","argumentNames":["this"]}
dot_Rect_height__P4344.isGetter = true;

function dot_Rect_height__P4344_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Rect_height__P4344, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function dot_Rect_top__P4342(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Rect__C4340_VT)) failedCast(r0);
    r0 = s.arg0.fields["pos"];
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["y"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
dot_Rect_top__P4342.info = {"start":93,"length":34,"line":3,"column":8,"endLine":3,"endColumn":42,"fileName":"rect.ts","functionName":"top","argumentNames":["this"]}
dot_Rect_top__P4342.isGetter = true;

function dot_Rect_top__P4342_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Rect_top__P4342, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function dot_Rect_left__P4341(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, dot_Rect__C4340_VT)) failedCast(r0);
    r0 = s.arg0.fields["pos"];
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["x"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
dot_Rect_left__P4341.info = {"start":48,"length":36,"line":2,"column":8,"endLine":2,"endColumn":44,"fileName":"rect.ts","functionName":"left","argumentNames":["this"]}
dot_Rect_left__P4341.isGetter = true;

function dot_Rect_left__P4341_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dot_Rect_left__P4341, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }




function lambda_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function if_handler_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function lambda_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_condition_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_func_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_charWidth_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_charHeight_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_data_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_multiplier_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function PhysicsEngine__C2512_v4_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if___update_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function lambda_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function PhysicsEngine__C2512_v3_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_xOffset_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_yOffset_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if___draw_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_z_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_id_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function controller_Button__C2190_v0_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_s_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_vx_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_vy_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function lambda_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function if_effect_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function Sprite__C2342_v5_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function Sprite__C2342_v4_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_sourceFactory_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function PhysicsEngine__C2512_v1_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_destroyHandler_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_handler_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_generator_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_padding_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardsPerRow_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardWidth_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardSpacing_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardsTop_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_headerText_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_headerFont_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_infoTop_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_infoFont_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_getText_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function PhysicsEngine__C2512_v2_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function if_basicCard_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_selectedCard_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_activeCard_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_z_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function PhysicsEngine__C2512_v0_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_id_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_callback_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_flags_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function particles_ParticleFactory__C3188_v0_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function particles_ParticleSource__C3152_v4_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function if_x_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_y_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_height_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function particles_ParticleFactory__C3188_v1_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function if_handler_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function if_tileIndex_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_left_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_top_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function sprites_BaseSpriteSayRenderer__C2260_v1_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function sprites_BaseSprite__C2095_v0_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function sprites_BaseSprite__C2095_v2_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_shouldBeVisible_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function Sprite__C2342_v6_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function sprites_BaseSpriteSayRenderer__C2260_v0_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function sprites_BaseSpriteSayRenderer__C2260_v2_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_scene_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_state_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_factoryFn_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_initFn_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function if_width_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }

const controller_Controller__C2135_VT = mkVTable({
  name: "Controller",
  numFields: 5,
  classNo: 16,
  lastSubtypeNo: 16,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "playerIndex": null,
    "set/playerIndex": null,
    "buttons": null,
    "set/buttons": null,
    "analog": null,
    "set/analog": null,
    "_id": null,
    "set/_id": null,
    "_connected": null,
    "set/_connected": null,
    "_controlledSprites": controller_Controller__controlledSprites__P2140,
    "set/_controlledSprites": controller_Controller__controlledSprites__P2141,
    "id": controller_Controller_id__P2142,
    "left": controller_Controller_left__P2144,
    "right": controller_Controller_right__P2145,
    "up": controller_Controller_up__P2146,
    "down": controller_Controller_down__P2147,
    "button": controller_Controller_button__P4918,
    "connected": controller_Controller_connected__P2156,
    "set/connected": controller_Controller_connected__P2157,
    "__preUpdate": controller_Controller___preUpdate__P2163,
    "__update": controller_Controller___update__P2164,
  },
});
const controller_Button__C2190_VT = mkVTable({
  name: "Button",
  numFields: 7,
  classNo: 17,
  lastSubtypeNo: 18,
  maxBgInstances: null,
  methods: {
    "isPressed": controller_Button_isPressed__P2201,
  },
  iface: {
    "_owner": null,
    "set/_owner": null,
    "id": null,
    "set/id": null,
    "repeatDelay": null,
    "set/repeatDelay": null,
    "repeatInterval": null,
    "set/repeatInterval": null,
    "_pressed": null,
    "set/_pressed": null,
    "_pressedElasped": null,
    "set/_pressedElasped": null,
    "_repeatCount": null,
    "set/_repeatCount": null,
    "handlerState": controller_Button_handlerState__P4921,
    "toString": controller_Button_toString__P2195,
    "raiseButtonUp": controller_Button_raiseButtonUp__P4922,
    "raiseButtonDown": controller_Button_raiseButtonDown__P4923,
    "raiseButtonRepeat": controller_Button_raiseButtonRepeat__P4924,
    "onEvent": controller_Button_onEvent__P2197,
    "isPressed": controller_Button_isPressed__P2201,
    "pressureLevel": controller_Button_pressureLevel__P2202,
    "setPressed": controller_Button_setPressed__P2203,
    "__update": controller_Button___update__P2204,
    "runButtonEvents": controller_Button_runButtonEvents__P4925,
    "getOrCreateHandlerForEvent": controller_Button_getOrCreateHandlerForEvent__P4926,
  },
  toStringMethod: controller_Button_toString__P2195,
});
const controller_AnyButton__C4919_VT = mkVTable({
  name: "AnyButton",
  numFields: 7,
  classNo: 18,
  lastSubtypeNo: 18,
  maxBgInstances: null,
  methods: {
    "isPressed": controller_AnyButton_isPressed__P4927,
  },
  iface: {
    "_owner": null,
    "set/_owner": null,
    "id": null,
    "set/id": null,
    "repeatDelay": null,
    "set/repeatDelay": null,
    "repeatInterval": null,
    "set/repeatInterval": null,
    "_pressed": null,
    "set/_pressed": null,
    "_pressedElasped": null,
    "set/_pressedElasped": null,
    "_repeatCount": null,
    "set/_repeatCount": null,
    "isPressed": controller_AnyButton_isPressed__P4927,
    "handlerState": controller_Button_handlerState__P4921,
    "toString": controller_Button_toString__P2195,
    "raiseButtonUp": controller_Button_raiseButtonUp__P4922,
    "raiseButtonDown": controller_Button_raiseButtonDown__P4923,
    "raiseButtonRepeat": controller_Button_raiseButtonRepeat__P4924,
    "onEvent": controller_Button_onEvent__P2197,
    "pressureLevel": controller_Button_pressureLevel__P2202,
    "setPressed": controller_Button_setPressed__P2203,
    "__update": controller_Button___update__P2204,
    "runButtonEvents": controller_Button_runButtonEvents__P4925,
    "getOrCreateHandlerForEvent": controller_Button_getOrCreateHandlerForEvent__P4926,
  },
});
const game_GameOverConfig__C2974_VT = mkVTable({
  name: "GameOverConfig",
  numFields: 14,
  classNo: 19,
  lastSubtypeNo: 19,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "scoringType": null,
    "set/scoringType": null,
    "winEffect": null,
    "set/winEffect": null,
    "loseEffect": null,
    "set/loseEffect": null,
    "loseSound": null,
    "set/loseSound": null,
    "winSound": null,
    "set/winSound": null,
    "loseSoundLooping": null,
    "set/loseSoundLooping": null,
    "winSoundLooping": null,
    "set/winSoundLooping": null,
    "winMessage": null,
    "set/winMessage": null,
    "winMessageMultiplayer": null,
    "set/winMessageMultiplayer": null,
    "loseMessage": null,
    "set/loseMessage": null,
    "effectSetByUser": null,
    "set/effectSetByUser": null,
    "soundSetByUser": null,
    "set/soundSetByUser": null,
    "messageSetByUser": null,
    "set/messageSetByUser": null,
    "scoringTypeSetByUser": null,
    "set/scoringTypeSetByUser": null,
    "init": game_GameOverConfig_init__P2990,
  },
});
const Math_FastRandom__C3060_VT = mkVTable({
  name: "FastRandom",
  numFields: 2,
  classNo: 20,
  lastSubtypeNo: 20,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "lfsr": null,
    "set/lfsr": null,
    "seed": null,
    "set/seed": null,
    "next": Math_FastRandom_next__P3063,
    "randomRange": Math_FastRandom_randomRange__P3064,
    "pickRandom": Math_FastRandom_pickRandom__P3065,
  },
});
const dot_Input__C8999_VT = mkVTable({
  name: "Input",
  numFields: 10,
  classNo: 21,
  lastSubtypeNo: 21,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_isPressed": null,
    "set/_isPressed": null,
    "_justPressed": null,
    "set/_justPressed": null,
    "_justReleased": null,
    "set/_justReleased": null,
    "_A": null,
    "set/_A": null,
    "_B": null,
    "set/_B": null,
    "_Up": null,
    "set/_Up": null,
    "_Down": null,
    "set/_Down": null,
    "_Left": null,
    "set/_Left": null,
    "_Right": null,
    "set/_Right": null,
    "condition": null,
    "set/condition": null,
    "justPressed": dot_Input_justPressed__P8880,
    "Left": dot_Input_Left__P9006,
    "Right": dot_Input_Right__P9007,
    "update": dot_Input_update__P9008,
    "block": dot_Input_block__P8720,
  },
});
const dot_Pool__C4477_VT = mkVTable({
  name: "Pool",
  numFields: 4,
  classNo: 22,
  lastSubtypeNo: 22,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "active": null,
    "set/active": null,
    "pool": null,
    "set/pool": null,
    "factoryFn": null,
    "set/factoryFn": null,
    "initFn": null,
    "set/initFn": null,
    "alloc": dot_Pool_alloc__P4481,
    "reset": dot_Pool_reset__P4482,
    "update": dot_Pool_update__P4483,
  },
});
const dot_Random__C4464_VT = mkVTable({
  name: "Random",
  numFields: 4,
  classNo: 23,
  lastSubtypeNo: 23,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "x": null,
    "set/x": null,
    "y": null,
    "set/y": null,
    "z": null,
    "set/z": null,
    "w": null,
    "set/w": null,
    "get": dot_Random_get__P4470,
    "getInt": dot_Random_getInt__P4471,
    "select": dot_Random_select__P4473,
    "setSeed": dot_Random_setSeed__P4474,
    "next": dot_Random_next__P4475,
  },
});
const dot_Set__C4491_VT = mkVTable({
  name: "Set",
  numFields: 1,
  classNo: 24,
  lastSubtypeNo: 24,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_items": null,
    "set/_items": null,
    "has": dot_Set_has__P4494,
    "set": dot_Set_set__P4496,
    "clear": dot_Set_clear__P4497,
  },
});
const test_Box__C48450_VT = mkVTable({
  name: "Box",
  numFields: 4,
  classNo: 25,
  lastSubtypeNo: 25,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "r": null,
    "set/r": null,
    "c": null,
    "set/c": null,
    "v": null,
    "set/v": null,
    "id": null,
    "set/id": null,
  },
});
const dot_Rect__C4340_VT = mkVTable({
  name: "Rect",
  numFields: 2,
  classNo: 26,
  lastSubtypeNo: 26,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "pos": null,
    "set/pos": null,
    "size": null,
    "set/size": null,
    "left": dot_Rect_left__P4341,
    "top": dot_Rect_top__P4342,
    "width": dot_Rect_width__P4343,
    "height": dot_Rect_height__P4344,
    "center": dot_Rect_center__P4347,
  },
});
const dot_Vec__C30670_VT = mkVTable({
  name: "Vec",
  numFields: 2,
  classNo: 27,
  lastSubtypeNo: 27,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "x": null,
    "set/x": null,
    "y": null,
    "set/y": null,
    "left": dot_Vec_left__P30656,
    "set/left": dot_Vec_left__P30671,
    "top": dot_Vec_top__P30658,
    "set/top": dot_Vec_top__P30672,
    "width": dot_Vec_width__P30660,
    "set/width": dot_Vec_width__P30673,
    "height": dot_Vec_height__P30662,
    "set/height": dot_Vec_height__P30674,
    "add": dot_Vec_add__P30675,
    "sub": dot_Vec_sub__P30676,
    "scale": dot_Vec_scale__P30678,
    "rotate": dot_Vec_rotate__P30679,
    "set": dot_Vec_set__P30680,
    "setv": dot_Vec_setv__P30682,
  },
});
const control_EventContext__C395_VT = mkVTable({
  name: "EventContext",
  numFields: 10,
  classNo: 28,
  lastSubtypeNo: 28,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "handlers": null,
    "set/handlers": null,
    "frameCallbacks": null,
    "set/frameCallbacks": null,
    "frameWorker": null,
    "set/frameWorker": null,
    "framesInSample": null,
    "set/framesInSample": null,
    "timeInSample": null,
    "set/timeInSample": null,
    "lastPerfDump": null,
    "set/lastPerfDump": null,
    "deltaTimeMillis": null,
    "set/deltaTimeMillis": null,
    "prevTimeMillis": null,
    "set/prevTimeMillis": null,
    "idleCallbacks": null,
    "set/idleCallbacks": null,
    "runningCallbacks": null,
    "set/runningCallbacks": null,
    "deltaTime": control_EventContext_deltaTime__P400,
    "runCallbacks": control_EventContext_runCallbacks__P4634,
    "registerFrameCallbacks": control_EventContext_registerFrameCallbacks__P4635,
    "register": control_EventContext_register__P401,
    "unregister": control_EventContext_unregister__P402,
    "registerFrameHandler": control_EventContext_registerFrameHandler__P403,
    "registerHandler": control_EventContext_registerHandler__P405,
  },
});
const dot_gfx_GfxCommand__C7710_VT = mkVTable({
  name: "GfxCommand",
  numFields: 1,
  classNo: 29,
  lastSubtypeNo: 33,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "type": null,
    "set/type": null,
  },
});
const dot_gfx_GfxBoxCommand__C7726_VT = mkVTable({
  name: "GfxBoxCommand",
  numFields: 6,
  classNo: 30,
  lastSubtypeNo: 30,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "type": null,
    "set/type": null,
    "x": null,
    "set/x": null,
    "y": null,
    "set/y": null,
    "w": null,
    "set/w": null,
    "h": null,
    "set/h": null,
    "color": null,
    "set/color": null,
  },
});
const dot_gfx_GfxIconCommand__C7738_VT = mkVTable({
  name: "GfxIconCommand",
  numFields: 5,
  classNo: 31,
  lastSubtypeNo: 31,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "type": null,
    "set/type": null,
    "x": null,
    "set/x": null,
    "y": null,
    "set/y": null,
    "buf": null,
    "set/buf": null,
    "color": null,
    "set/color": null,
  },
});
const dot_gfx_GfxRectCommand__C7714_VT = mkVTable({
  name: "GfxRectCommand",
  numFields: 6,
  classNo: 32,
  lastSubtypeNo: 32,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "type": null,
    "set/type": null,
    "x": null,
    "set/x": null,
    "y": null,
    "set/y": null,
    "w": null,
    "set/w": null,
    "h": null,
    "set/h": null,
    "color": null,
    "set/color": null,
  },
});
const dot_Button__C8915_VT = mkVTable({
  name: "Button",
  numFields: 6,
  classNo: 34,
  lastSubtypeNo: 34,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_isPressed": null,
    "set/_isPressed": null,
    "_justPressed": null,
    "set/_justPressed": null,
    "_justReleased": null,
    "set/_justReleased": null,
    "_block": null,
    "set/_block": null,
    "condition": null,
    "set/condition": null,
    "src": null,
    "set/src": null,
    "isPressed": dot_Button_isPressed__P8916,
    "justPressed": dot_Button_justPressed__P8917,
    "justReleased": dot_Button_justReleased__P8918,
    "update": dot_Button_update__P8919,
    "block": dot_Button_block__P8921,
  },
});
const control_FrameCallback__C392_VT = mkVTable({
  name: "FrameCallback",
  numFields: 2,
  classNo: 35,
  lastSubtypeNo: 35,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "order": null,
    "set/order": null,
    "handler": null,
    "set/handler": null,
  },
});
const control_PollEvent__C4608_VT = mkVTable({
  name: "PollEvent",
  numFields: 6,
  classNo: 36,
  lastSubtypeNo: 36,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "eid": null,
    "set/eid": null,
    "vid": null,
    "set/vid": null,
    "start": null,
    "set/start": null,
    "timeOut": null,
    "set/timeOut": null,
    "condition": null,
    "set/condition": null,
    "once": null,
    "set/once": null,
  },
});
const control_EventHandler__C4629_VT = mkVTable({
  name: "EventHandler",
  numFields: 4,
  classNo: 37,
  lastSubtypeNo: 37,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "src": null,
    "set/src": null,
    "value": null,
    "set/value": null,
    "handler": null,
    "set/handler": null,
    "flags": null,
    "set/flags": null,
    "register": control_EventHandler_register__P4630,
    "unregister": control_EventHandler_unregister__P4631,
  },
});
const dot_CollisionReporter__C4359_VT = mkVTable({
  name: "CollisionReporter",
  numFields: 4,
  classNo: 38,
  lastSubtypeNo: 38,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_id": null,
    "set/_id": null,
    "_gen": null,
    "set/_gen": null,
    "_srcs": null,
    "set/_srcs": null,
    "_collisions": null,
    "set/_collisions": null,
    "_add": dot_CollisionReporter__add__P4365,
    "collisions": dot_CollisionReporter_collisions__P4366,
  },
});
const dot_Collision__C4357_VT = mkVTable({
  name: "Collision",
  numFields: 2,
  classNo: 39,
  lastSubtypeNo: 39,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "src": null,
    "set/src": null,
    "dst": null,
    "set/dst": null,
  },
});
const dot_Collidable__C4355_VT = mkVTable({
  name: "Collidable",
  numFields: 4,
  classNo: 40,
  lastSubtypeNo: 40,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "id": null,
    "set/id": null,
    "rect": null,
    "set/rect": null,
    "color": null,
    "set/color": null,
    "_mask": null,
    "set/_mask": null,
  },
});
const dot_gfx_GfxImgCommand__C7749_VT = mkVTable({
  name: "GfxImgCommand",
  numFields: 4,
  classNo: 33,
  lastSubtypeNo: 33,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "type": null,
    "set/type": null,
    "x": null,
    "set/x": null,
    "y": null,
    "set/y": null,
    "img": null,
    "set/img": null,
  },
});
const control_Interval__C4603_VT = mkVTable({
  name: "Interval",
  numFields: 4,
  classNo: 41,
  lastSubtypeNo: 41,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "id": null,
    "set/id": null,
    "func": null,
    "set/func": null,
    "delay": null,
    "set/delay": null,
    "mode": null,
    "set/mode": null,
    "work": control_Interval_work__P4604,
  },
});
const dot_Particle__C34787_VT = mkVTable({
  name: "Particle",
  numFields: 4,
  classNo: 42,
  lastSubtypeNo: 42,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "pos": null,
    "set/pos": null,
    "vel": null,
    "set/vel": null,
    "color": null,
    "set/color": null,
    "ticks": null,
    "set/ticks": null,
    "create": dot_Particle_create__P34788,
    "init": dot_Particle_init__P34789,
  },
});
const dot_Score__C9246_VT = mkVTable({
  name: "Score",
  numFields: 5,
  classNo: 43,
  lastSubtypeNo: 43,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "str": null,
    "set/str": null,
    "pos": null,
    "set/pos": null,
    "vy": null,
    "set/vy": null,
    "deathTick": null,
    "set/deathTick": null,
    "color": null,
    "set/color": null,
    "create": dot_Score_create__P9247,
    "init": dot_Score_init__P9248,
  },
});
const scene_Scene__C2844_VT = mkVTable({
  name: "Scene",
  numFields: 25,
  classNo: 44,
  lastSubtypeNo: 44,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "eventContext": null,
    "set/eventContext": null,
    "background": null,
    "set/background": null,
    "tileMap": null,
    "set/tileMap": null,
    "allSprites": null,
    "set/allSprites": null,
    "spriteNextId": null,
    "set/spriteNextId": null,
    "spritesByKind": null,
    "set/spritesByKind": null,
    "physicsEngine": null,
    "set/physicsEngine": null,
    "camera": null,
    "set/camera": null,
    "flags": null,
    "set/flags": null,
    "destroyedHandlers": null,
    "set/destroyedHandlers": null,
    "createdHandlers": null,
    "set/createdHandlers": null,
    "overlapHandlers": null,
    "set/overlapHandlers": null,
    "overlapMap": null,
    "set/overlapMap": null,
    "tileOverlapHandlers": null,
    "set/tileOverlapHandlers": null,
    "collisionHandlers": null,
    "set/collisionHandlers": null,
    "wallCollisionHandlers": null,
    "set/wallCollisionHandlers": null,
    "gameForeverHandlers": null,
    "set/gameForeverHandlers": null,
    "particleSources": null,
    "set/particleSources": null,
    "controlledSprites": null,
    "set/controlledSprites": null,
    "controllerConnectionState": null,
    "set/controllerConnectionState": null,
    "followingSprites": null,
    "set/followingSprites": null,
    "buttonEventHandlers": null,
    "set/buttonEventHandlers": null,
    "_millis": null,
    "set/_millis": null,
    "_data": null,
    "set/_data": null,
    "previousScene": null,
    "set/previousScene": null,
    "init": scene_Scene_init__P2868,
    "data": scene_Scene_data__P2869,
    "millis": scene_Scene_millis__P2870,
    "addSprite": scene_Scene_addSprite__P2871,
    "render": scene_Scene_render__P2873,
  },
});
const PhysicsEngine__C2512_VT = mkVTable({
  name: "PhysicsEngine",
  numFields: 0,
  classNo: 45,
  lastSubtypeNo: 46,
  maxBgInstances: null,
  methods: {
    "addSprite": PhysicsEngine_addSprite__P2514,
    "removeSprite": PhysicsEngine_removeSprite__P2515,
    "moveSprite": PhysicsEngine_moveSprite__P2516,
    "draw": PhysicsEngine_draw__P2517,
    "move": PhysicsEngine_move__P2518,
  },
  iface: {
    "addSprite": PhysicsEngine_addSprite__P2514,
    "removeSprite": PhysicsEngine_removeSprite__P2515,
    "moveSprite": PhysicsEngine_moveSprite__P2516,
    "draw": PhysicsEngine_draw__P2517,
    "move": PhysicsEngine_move__P2518,
  },
});
const scene_Camera__C2782_VT = mkVTable({
  name: "Camera",
  numFields: 10,
  classNo: 47,
  lastSubtypeNo: 47,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_offsetX": null,
    "set/_offsetX": null,
    "_offsetY": null,
    "set/_offsetY": null,
    "drawOffsetX": null,
    "set/drawOffsetX": null,
    "drawOffsetY": null,
    "set/drawOffsetY": null,
    "sprite": null,
    "set/sprite": null,
    "_lastUpdatedSpriteX": null,
    "set/_lastUpdatedSpriteX": null,
    "_lastUpdatedSpriteY": null,
    "set/_lastUpdatedSpriteY": null,
    "shakeStartTime": null,
    "set/shakeStartTime": null,
    "shakeDuration": null,
    "set/shakeDuration": null,
    "shakeAmplitude": null,
    "set/shakeAmplitude": null,
    "offsetX": scene_Camera_offsetX__P2787,
    "set/offsetX": scene_Camera_offsetX__P2788,
    "offsetY": scene_Camera_offsetY__P2789,
    "set/offsetY": scene_Camera_offsetY__P2790,
    "x": scene_Camera_x__P2791,
    "y": scene_Camera_y__P2792,
    "left": scene_Camera_left__P2793,
    "top": scene_Camera_top__P2795,
    "isUpdated": scene_Camera_isUpdated__P2798,
    "update": scene_Camera_update__P2799,
  },
});
const scene_Background__C2670_VT = mkVTable({
  name: "Background",
  numFields: 4,
  classNo: 48,
  lastSubtypeNo: 48,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "color": null,
    "set/color": null,
    "_image": null,
    "set/_image": null,
    "camera": null,
    "set/camera": null,
    "_layers": null,
    "set/_layers": null,
    "draw": scene_Background_draw__P2679,
  },
});
const scene_BackgroundLayer__C2680_VT = mkVTable({
  name: "BackgroundLayer",
  numFields: 6,
  classNo: 49,
  lastSubtypeNo: 49,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "distance": null,
    "set/distance": null,
    "img": null,
    "set/img": null,
    "repeatX": null,
    "set/repeatX": null,
    "repeatY": null,
    "set/repeatY": null,
    "alignX": null,
    "set/alignX": null,
    "alignY": null,
    "set/alignY": null,
    "draw": scene_BackgroundLayer_draw__P2688,
  },
});
const sprites_BaseSprite__C2095_VT = mkVTable({
  name: "BaseSprite",
  numFields: 2,
  classNo: 50,
  lastSubtypeNo: 53,
  maxBgInstances: null,
  methods: {
    "__visible": sprites_BaseSprite___visible__P2098,
    "__draw": sprites_BaseSprite___draw__P2101,
    "__drawCore": sprites_BaseSprite___drawCore__P2102,
    "__update": sprites_BaseSprite___update__P2103,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "__visible": sprites_BaseSprite___visible__P2098,
    "z": sprites_BaseSprite_z__P2099,
    "set/z": sprites_BaseSprite_z__P2100,
    "__draw": sprites_BaseSprite___draw__P2101,
    "__drawCore": sprites_BaseSprite___drawCore__P2102,
    "__update": sprites_BaseSprite___update__P2103,
  },
});
const Sprite__C2342_VT = mkVTable({
  name: "Sprite",
  numFields: 30,
  classNo: 51,
  lastSubtypeNo: 51,
  maxBgInstances: null,
  methods: {
    "__visible": Sprite___visible__P2397,
    "__draw": sprites_BaseSprite___draw__P2101,
    "__drawCore": Sprite___drawCore__P2416,
    "__update": Sprite___update__P2417,
    "setHitbox": Sprite_setHitbox__P2395,
    "recalcSize": Sprite_recalcSize__P4945,
    "drawSprite": Sprite_drawSprite__P4949,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "_x": null,
    "set/_x": null,
    "_y": null,
    "set/_y": null,
    "_vx": null,
    "set/_vx": null,
    "_vy": null,
    "set/_vy": null,
    "_ax": null,
    "set/_ax": null,
    "_ay": null,
    "set/_ay": null,
    "_fx": null,
    "set/_fx": null,
    "_fy": null,
    "set/_fy": null,
    "_sx": null,
    "set/_sx": null,
    "_sy": null,
    "set/_sy": null,
    "_width": null,
    "set/_width": null,
    "_height": null,
    "set/_height": null,
    "_data": null,
    "set/_data": null,
    "_kind": null,
    "set/_kind": null,
    "layer": null,
    "set/layer": null,
    "_lastX": null,
    "set/_lastX": null,
    "_lastY": null,
    "set/_lastY": null,
    "_action": null,
    "set/_action": null,
    "lifespan": null,
    "set/lifespan": null,
    "_image": null,
    "set/_image": null,
    "_obstacles": null,
    "set/_obstacles": null,
    "sayEndTime": null,
    "set/sayEndTime": null,
    "sayRenderer": null,
    "set/sayRenderer": null,
    "_hitbox": null,
    "set/_hitbox": null,
    "_overlappers": null,
    "set/_overlappers": null,
    "_kindsOverlappedWith": null,
    "set/_kindsOverlappedWith": null,
    "flags": null,
    "set/flags": null,
    "destroyHandler": null,
    "set/destroyHandler": null,
    "x": Sprite_x__P2355,
    "set/x": Sprite_x__P2356,
    "y": Sprite_y__P2357,
    "set/y": Sprite_y__P2358,
    "vx": Sprite_vx__P2359,
    "set/vx": Sprite_vx__P2360,
    "vy": Sprite_vy__P2361,
    "set/vy": Sprite_vy__P2362,
    "ax": Sprite_ax__P2363,
    "set/ax": Sprite_ax__P2364,
    "ay": Sprite_ay__P2365,
    "set/ay": Sprite_ay__P2366,
    "fx": Sprite_fx__P2367,
    "set/fx": Sprite_fx__P2368,
    "fy": Sprite_fy__P2369,
    "set/fy": Sprite_fy__P2370,
    "sx": Sprite_sx__P2371,
    "sy": Sprite_sy__P2373,
    "data": Sprite_data__P2377,
    "set/data": Sprite_data__P2378,
    "image": Sprite_image__P2391,
    "setImage": Sprite_setImage__P2392,
    "calcDimensionalHash": Sprite_calcDimensionalHash__P2393,
    "resetHitbox": Sprite_resetHitbox__P2394,
    "setHitbox": Sprite_setHitbox__P2395,
    "isStatic": Sprite_isStatic__P2396,
    "__visible": Sprite___visible__P2397,
    "recalcSize": Sprite_recalcSize__P4945,
    "isScaled": Sprite_isScaled__P4946,
    "width": Sprite_width__P2398,
    "height": Sprite_height__P2399,
    "left": Sprite_left__P2400,
    "set/left": Sprite_left__P2401,
    "right": Sprite_right__P2402,
    "set/right": Sprite_right__P2403,
    "top": Sprite_top__P2404,
    "set/top": Sprite_top__P2405,
    "bottom": Sprite_bottom__P2406,
    "set/bottom": Sprite_bottom__P2407,
    "kind": Sprite_kind__P2408,
    "setKind": Sprite_setKind__P2409,
    "isOutOfScreen": Sprite_isOutOfScreen__P2415,
    "__drawCore": Sprite___drawCore__P2416,
    "__update": Sprite___update__P2417,
    "setFlag": Sprite_setFlag__P2420,
    "overlapsWith": Sprite_overlapsWith__P2421,
    "clearObstacles": Sprite_clearObstacles__P2426,
    "registerObstacle": Sprite_registerObstacle__P2427,
    "destroy": Sprite_destroy__P2429,
    "_destroyCore": Sprite__destroyCore__P2430,
    "toString": Sprite_toString__P2435,
    "drawSay": Sprite_drawSay__P4947,
    "drawDebug": Sprite_drawDebug__P4948,
    "drawSprite": Sprite_drawSprite__P4949,
    "z": sprites_BaseSprite_z__P2099,
    "set/z": sprites_BaseSprite_z__P2100,
    "__draw": sprites_BaseSprite___draw__P2101,
  },
  toStringMethod: Sprite_toString__P2435,
});
const tiles_TileMap__C2736_VT = mkVTable({
  name: "TileMap",
  numFields: 5,
  classNo: 54,
  lastSubtypeNo: 54,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_scale": null,
    "set/_scale": null,
    "_layer": null,
    "set/_layer": null,
    "_map": null,
    "set/_map": null,
    "renderable": null,
    "set/renderable": null,
    "handlerState": null,
    "set/handlerState": null,
    "scale": tiles_TileMap_scale__P2739,
    "set/scale": tiles_TileMap_scale__P2740,
    "data": tiles_TileMap_data__P2741,
    "offsetX": tiles_TileMap_offsetX__P2742,
    "offsetY": tiles_TileMap_offsetY__P2743,
    "areaWidth": tiles_TileMap_areaWidth__P2744,
    "areaHeight": tiles_TileMap_areaHeight__P2745,
    "layer": tiles_TileMap_layer__P2746,
    "enabled": tiles_TileMap_enabled__P2748,
    "getTile": tiles_TileMap_getTile__P2750,
    "getTileIndex": tiles_TileMap_getTileIndex__P2751,
    "draw": tiles_TileMap_draw__P5066,
    "isObstacle": tiles_TileMap_isObstacle__P2757,
    "getObstacle": tiles_TileMap_getObstacle__P2758,
    "isOnWall": tiles_TileMap_isOnWall__P2759,
    "getTileImage": tiles_TileMap_getTileImage__P2760,
  },
});
const tiles_TileMapData__C2718_VT = mkVTable({
  name: "TileMapData",
  numFields: 7,
  classNo: 55,
  lastSubtypeNo: 55,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "data": null,
    "set/data": null,
    "layers": null,
    "set/layers": null,
    "tileset": null,
    "set/tileset": null,
    "cachedTileView": null,
    "set/cachedTileView": null,
    "_scale": null,
    "set/_scale": null,
    "_width": null,
    "set/_width": null,
    "_height": null,
    "set/_height": null,
    "width": tiles_TileMapData_width__P2720,
    "height": tiles_TileMapData_height__P2721,
    "scale": tiles_TileMapData_scale__P2722,
    "set/scale": tiles_TileMapData_scale__P2723,
    "getTile": tiles_TileMapData_getTile__P2724,
    "getTileImage": tiles_TileMapData_getTileImage__P2727,
    "isWall": tiles_TileMapData_isWall__P2729,
    "isOutsideMap": tiles_TileMapData_isOutsideMap__P2730,
  },
});
const ArcadePhysicsEngine__C2528_VT = mkVTable({
  name: "ArcadePhysicsEngine",
  numFields: 6,
  classNo: 46,
  lastSubtypeNo: 46,
  maxBgInstances: null,
  methods: {
    "addSprite": ArcadePhysicsEngine_addSprite__P2537,
    "removeSprite": ArcadePhysicsEngine_removeSprite__P2538,
    "moveSprite": ArcadePhysicsEngine_moveSprite__P2542,
    "draw": ArcadePhysicsEngine_draw__P2539,
    "move": ArcadePhysicsEngine_move__P2540,
  },
  iface: {
    "sprites": null,
    "set/sprites": null,
    "map": null,
    "set/map": null,
    "maxVelocity": null,
    "set/maxVelocity": null,
    "maxNegativeVelocity": null,
    "set/maxNegativeVelocity": null,
    "minSingleStep": null,
    "set/minSingleStep": null,
    "maxSingleStep": null,
    "set/maxSingleStep": null,
    "maxSpeed": ArcadePhysicsEngine_maxSpeed__P2530,
    "set/maxSpeed": ArcadePhysicsEngine_maxSpeed__P2531,
    "minStep": ArcadePhysicsEngine_minStep__P2532,
    "set/minStep": ArcadePhysicsEngine_minStep__P2533,
    "maxStep": ArcadePhysicsEngine_maxStep__P2534,
    "set/maxStep": ArcadePhysicsEngine_maxStep__P2535,
    "addSprite": ArcadePhysicsEngine_addSprite__P2537,
    "removeSprite": ArcadePhysicsEngine_removeSprite__P2538,
    "draw": ArcadePhysicsEngine_draw__P2539,
    "move": ArcadePhysicsEngine_move__P2540,
    "createMovingSprite": ArcadePhysicsEngine_createMovingSprite__P4990,
    "spriteCollisions": ArcadePhysicsEngine_spriteCollisions__P4991,
    "screenEdgeCollisions": ArcadePhysicsEngine_screenEdgeCollisions__P4992,
    "tilemapCollisions": ArcadePhysicsEngine_tilemapCollisions__P4993,
    "tilemapOverlaps": ArcadePhysicsEngine_tilemapOverlaps__P4994,
    "moveSprite": ArcadePhysicsEngine_moveSprite__P2542,
    "canResolveClipping": ArcadePhysicsEngine_canResolveClipping__P4995,
    "constrain": ArcadePhysicsEngine_constrain__P4996,
  },
});
const sprites_SpriteMap__C2447_VT = mkVTable({
  name: "SpriteMap",
  numFields: 5,
  classNo: 56,
  lastSubtypeNo: 56,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "cellWidth": null,
    "set/cellWidth": null,
    "cellHeight": null,
    "set/cellHeight": null,
    "rowCount": null,
    "set/rowCount": null,
    "columnCount": null,
    "set/columnCount": null,
    "buckets": null,
    "set/buckets": null,
    "neighbors": sprites_SpriteMap_neighbors__P2449,
    "overlaps": sprites_SpriteMap_overlaps__P2450,
    "draw": sprites_SpriteMap_draw__P2451,
    "resizeBuckets": sprites_SpriteMap_resizeBuckets__P2452,
    "clear": sprites_SpriteMap_clear__P2453,
    "key": sprites_SpriteMap_key__P4953,
    "insertAtKey": sprites_SpriteMap_insertAtKey__P4954,
    "insertAABB": sprites_SpriteMap_insertAABB__P2454,
    "mergeAtKey": sprites_SpriteMap_mergeAtKey__P4955,
    "toString": sprites_SpriteMap_toString__P2455,
  },
  toStringMethod: sprites_SpriteMap_toString__P2455,
});
const scene_systemMenu_PauseMenu__C3096_VT = mkVTable({
  name: "PauseMenu",
  numFields: 7,
  classNo: 57,
  lastSubtypeNo: 57,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "options": null,
    "set/options": null,
    "theme": null,
    "set/theme": null,
    "selection": null,
    "set/selection": null,
    "scrollRow": null,
    "set/scrollRow": null,
    "scrollTarget": null,
    "set/scrollTarget": null,
    "scrollOffset": null,
    "set/scrollOffset": null,
    "generator": null,
    "set/generator": null,
    "show": scene_systemMenu_PauseMenu_show__P3098,
    "onUpdate": scene_systemMenu_PauseMenu_onUpdate__P3099,
    "setSelection": scene_systemMenu_PauseMenu_setSelection__P3100,
    "drawText": scene_systemMenu_PauseMenu_drawText__P3101,
    "dispose": scene_systemMenu_PauseMenu_dispose__P3102,
    "updateScrollTarget": scene_systemMenu_PauseMenu_updateScrollTarget__P5394,
  },
});
const scene_systemMenu_MenuOption__C3088_VT = mkVTable({
  name: "MenuOption",
  numFields: 8,
  classNo: 58,
  lastSubtypeNo: 58,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "card": null,
    "set/card": null,
    "icon": null,
    "set/icon": null,
    "top": null,
    "set/top": null,
    "state": null,
    "set/state": null,
    "theme": null,
    "set/theme": null,
    "iconImage": null,
    "set/iconImage": null,
    "getText": null,
    "set/getText": null,
    "action": null,
    "set/action": null,
    "show": scene_systemMenu_MenuOption_show__P3090,
    "position": scene_systemMenu_MenuOption_position__P3091,
    "setOffset": scene_systemMenu_MenuOption_setOffset__P3092,
    "setTheme": scene_systemMenu_MenuOption_setTheme__P3093,
    "setState": scene_systemMenu_MenuOption_setState__P3094,
    "dispose": scene_systemMenu_MenuOption_dispose__P3095,
    "updateCard": scene_systemMenu_MenuOption_updateCard__P5393,
  },
});
const effects_ParticleEffect__C3263_VT = mkVTable({
  name: "ParticleEffect",
  numFields: 3,
  classNo: 59,
  lastSubtypeNo: 60,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "sourceFactory": null,
    "set/sourceFactory": null,
    "defaultRate": null,
    "set/defaultRate": null,
    "defaultLifespan": null,
    "set/defaultLifespan": null,
    "start": effects_ParticleEffect_start__P3265,
    "destroy": effects_ParticleEffect_destroy__P3266,
  },
});
const effects_ImageEffect__C3291_VT = mkVTable({
  name: "ImageEffect",
  numFields: 4,
  classNo: 61,
  lastSubtypeNo: 61,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "preferredDelay": null,
    "set/preferredDelay": null,
    "effect": null,
    "set/effect": null,
    "fastRandom": null,
    "set/fastRandom": null,
    "times": null,
    "set/times": null,
    "applyTo": effects_ImageEffect_applyTo__P3293,
    "change": effects_ImageEffect_change__P3294,
  },
});
const game_Hitbox__C2209_VT = mkVTable({
  name: "Hitbox",
  numFields: 6,
  classNo: 62,
  lastSubtypeNo: 62,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "hash": null,
    "set/hash": null,
    "parent": null,
    "set/parent": null,
    "ox": null,
    "set/ox": null,
    "oy": null,
    "set/oy": null,
    "width": null,
    "set/width": null,
    "height": null,
    "set/height": null,
    "left": game_Hitbox_left__P2217,
    "top": game_Hitbox_top__P2218,
    "right": game_Hitbox_right__P2219,
    "bottom": game_Hitbox_bottom__P2220,
    "isValid": game_Hitbox_isValid__P2221,
    "contains": game_Hitbox_contains__P2222,
    "updateIfInvalid": game_Hitbox_updateIfInvalid__P2223,
    "overlapsWith": game_Hitbox_overlapsWith__P2224,
  },
});
const particles_ParticleSource__C3152_VT = mkVTable({
  name: "ParticleSource",
  numFields: 13,
  classNo: 52,
  lastSubtypeNo: 52,
  maxBgInstances: null,
  methods: {
    "__visible": sprites_BaseSprite___visible__P2098,
    "__draw": particles_ParticleSource___draw__P3158,
    "__drawCore": sprites_BaseSprite___drawCore__P2102,
    "__update": sprites_BaseSprite___update__P2103,
    "updateParticle": particles_ParticleSource_updateParticle__P5479,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "priority": null,
    "set/priority": null,
    "_dt": null,
    "set/_dt": null,
    "anchor": null,
    "set/anchor": null,
    "lifespan": null,
    "set/lifespan": null,
    "pFlags": null,
    "set/pFlags": null,
    "head": null,
    "set/head": null,
    "timer": null,
    "set/timer": null,
    "period": null,
    "set/period": null,
    "_factory": null,
    "set/_factory": null,
    "ax": null,
    "set/ax": null,
    "ay": null,
    "set/ay": null,
    "__draw": particles_ParticleSource___draw__P3158,
    "_update": particles_ParticleSource__update__P3159,
    "_prune": particles_ParticleSource__prune__P3160,
    "setAcceleration": particles_ParticleSource_setAcceleration__P3161,
    "setRelativeToCamera": particles_ParticleSource_setRelativeToCamera__P3163,
    "enabled": particles_ParticleSource_enabled__P3164,
    "set/enabled": particles_ParticleSource_enabled__P3165,
    "destroy": particles_ParticleSource_destroy__P3166,
    "clear": particles_ParticleSource_clear__P3167,
    "setAnchor": particles_ParticleSource_setAnchor__P3168,
    "setRate": particles_ParticleSource_setRate__P3169,
    "setFactory": particles_ParticleSource_setFactory__P3171,
    "updateParticle": particles_ParticleSource_updateParticle__P5479,
    "drawParticle": particles_ParticleSource_drawParticle__P5480,
    "__visible": sprites_BaseSprite___visible__P2098,
    "z": sprites_BaseSprite_z__P2099,
    "set/z": sprites_BaseSprite_z__P2100,
    "__drawCore": sprites_BaseSprite___drawCore__P2102,
    "__update": sprites_BaseSprite___update__P2103,
  },
});
const sprites_SpriteSet__C2464_VT = mkVTable({
  name: "SpriteSet",
  numFields: 1,
  classNo: 63,
  lastSubtypeNo: 63,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_sprites": null,
    "set/_sprites": null,
    "length": sprites_SpriteSet_length__P2467,
    "add": sprites_SpriteSet_add__P2469,
    "remove": sprites_SpriteSet_remove__P2471,
    "contains": sprites_SpriteSet_contains__P2472,
    "toString": sprites_SpriteSet_toString__P2475,
  },
  toStringMethod: sprites_SpriteSet_toString__P2475,
});
const scene_Renderable__C2801_VT = mkVTable({
  name: "Renderable",
  numFields: 4,
  classNo: 53,
  lastSubtypeNo: 53,
  maxBgInstances: null,
  methods: {
    "__visible": scene_Renderable___visible__P2803,
    "__draw": sprites_BaseSprite___draw__P2101,
    "__drawCore": scene_Renderable___drawCore__P2804,
    "__update": sprites_BaseSprite___update__P2103,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "handler": null,
    "set/handler": null,
    "shouldBeVisible": null,
    "set/shouldBeVisible": null,
    "__visible": scene_Renderable___visible__P2803,
    "__drawCore": scene_Renderable___drawCore__P2804,
    "z": sprites_BaseSprite_z__P2099,
    "set/z": sprites_BaseSprite_z__P2100,
    "__draw": sprites_BaseSprite___draw__P2101,
    "__update": sprites_BaseSprite___update__P2103,
  },
});
const controller_ButtonHandler__C2184_VT = mkVTable({
  name: "ButtonHandler",
  numFields: 2,
  classNo: 64,
  lastSubtypeNo: 64,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "event": null,
    "set/event": null,
    "callback": null,
    "set/callback": null,
  },
});
const controller_ButtonEventHandlerState__C2186_VT = mkVTable({
  name: "ButtonEventHandlerState",
  numFields: 3,
  classNo: 65,
  lastSubtypeNo: 65,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "id": null,
    "set/id": null,
    "user": null,
    "set/user": null,
    "system": null,
    "set/system": null,
  },
});
const effects_ScreenEffect__C3267_VT = mkVTable({
  name: "ScreenEffect",
  numFields: 5,
  classNo: 60,
  lastSubtypeNo: 60,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "sourceFactory": null,
    "set/sourceFactory": null,
    "defaultRate": null,
    "set/defaultRate": null,
    "defaultLifespan": null,
    "set/defaultLifespan": null,
    "source": null,
    "set/source": null,
    "sceneDefaultRate": null,
    "set/sceneDefaultRate": null,
    "start": effects_ParticleEffect_start__P3265,
    "destroy": effects_ParticleEffect_destroy__P3266,
  },
});
const particles_ParticleFactory__C3188_VT = mkVTable({
  name: "ParticleFactory",
  numFields: 0,
  classNo: 66,
  lastSubtypeNo: 70,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_ParticleFactory_createParticle__P3190,
    "drawParticle": particles_ParticleFactory_drawParticle__P3191,
  },
  iface: {
    "createParticle": particles_ParticleFactory_createParticle__P3190,
    "drawParticle": particles_ParticleFactory_drawParticle__P3191,
  },
});
const particles_SprayFactory__C3192_VT = mkVTable({
  name: "SprayFactory",
  numFields: 3,
  classNo: 67,
  lastSubtypeNo: 70,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_SprayFactory_createParticle__P3194,
    "drawParticle": particles_SprayFactory_drawParticle__P3195,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "createParticle": particles_SprayFactory_createParticle__P3194,
    "drawParticle": particles_SprayFactory_drawParticle__P3195,
    "setSpeed": particles_SprayFactory_setSpeed__P3196,
    "setDirection": particles_SprayFactory_setDirection__P3197,
  },
});
const particles_AreaFactory__C3198_VT = mkVTable({
  name: "AreaFactory",
  numFields: 8,
  classNo: 68,
  lastSubtypeNo: 70,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_AreaFactory_createParticle__P3204,
    "drawParticle": particles_AreaFactory_drawParticle__P3205,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "xRange": null,
    "set/xRange": null,
    "yRange": null,
    "set/yRange": null,
    "minLifespan": null,
    "set/minLifespan": null,
    "maxLifespan": null,
    "set/maxLifespan": null,
    "galois": null,
    "set/galois": null,
    "createParticle": particles_AreaFactory_createParticle__P3204,
    "drawParticle": particles_AreaFactory_drawParticle__P3205,
    "setSpeed": particles_SprayFactory_setSpeed__P3196,
    "setDirection": particles_SprayFactory_setDirection__P3197,
  },
});
const particles_ShapeFactory__C3214_VT = mkVTable({
  name: "ShapeFactory",
  numFields: 11,
  classNo: 69,
  lastSubtypeNo: 70,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_ShapeFactory_createParticle__P3218,
    "drawParticle": particles_ShapeFactory_drawParticle__P3217,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "xRange": null,
    "set/xRange": null,
    "yRange": null,
    "set/yRange": null,
    "minLifespan": null,
    "set/minLifespan": null,
    "maxLifespan": null,
    "set/maxLifespan": null,
    "galois": null,
    "set/galois": null,
    "sources": null,
    "set/sources": null,
    "ox": null,
    "set/ox": null,
    "oy": null,
    "set/oy": null,
    "addShape": particles_ShapeFactory_addShape__P3216,
    "drawParticle": particles_ShapeFactory_drawParticle__P3217,
    "createParticle": particles_ShapeFactory_createParticle__P3218,
    "setSpeed": particles_SprayFactory_setSpeed__P3196,
    "setDirection": particles_SprayFactory_setDirection__P3197,
  },
});
const particles_ConfettiFactory__C3219_VT = mkVTable({
  name: "ConfettiFactory",
  numFields: 11,
  classNo: 70,
  lastSubtypeNo: 70,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_ShapeFactory_createParticle__P3218,
    "drawParticle": particles_ShapeFactory_drawParticle__P3217,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "xRange": null,
    "set/xRange": null,
    "yRange": null,
    "set/yRange": null,
    "minLifespan": null,
    "set/minLifespan": null,
    "maxLifespan": null,
    "set/maxLifespan": null,
    "galois": null,
    "set/galois": null,
    "sources": null,
    "set/sources": null,
    "ox": null,
    "set/ox": null,
    "oy": null,
    "set/oy": null,
    "addShape": particles_ShapeFactory_addShape__P3216,
    "drawParticle": particles_ShapeFactory_drawParticle__P3217,
    "createParticle": particles_ShapeFactory_createParticle__P3218,
    "setSpeed": particles_SprayFactory_setSpeed__P3196,
    "setDirection": particles_SprayFactory_setDirection__P3197,
  },
});
const particles_Particle__C3133_VT = mkVTable({
  name: "Particle",
  numFields: 8,
  classNo: 71,
  lastSubtypeNo: 71,
  maxBgInstances: 200,
  methods: {
  },
  iface: {
    "_x": null,
    "set/_x": null,
    "_y": null,
    "set/_y": null,
    "vx": null,
    "set/vx": null,
    "vy": null,
    "set/vy": null,
    "lifespan": null,
    "set/lifespan": null,
    "next": null,
    "set/next": null,
    "data": null,
    "set/data": null,
    "color": null,
    "set/color": null,
  },
});
const music_Playable__C1912_VT = mkVTable({
  name: "Playable",
  numFields: 1,
  classNo: 72,
  lastSubtypeNo: 73,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "stopped": null,
    "set/stopped": null,
  },
});
const music_MelodyPlayable__C1917_VT = mkVTable({
  name: "MelodyPlayable",
  numFields: 2,
  classNo: 73,
  lastSubtypeNo: 73,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "stopped": null,
    "set/stopped": null,
    "melody": null,
    "set/melody": null,
  },
});
const music_Melody__C1627_VT = mkVTable({
  name: "Melody",
  numFields: 2,
  classNo: 74,
  lastSubtypeNo: 74,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_text": null,
    "set/_text": null,
    "_player": null,
    "set/_player": null,
    "toString": music_Melody_toString__P1636,
  },
  toStringMethod: music_Melody_toString__P1636,
});
const MovingSprite__C2526_VT = mkVTable({
  name: "MovingSprite",
  numFields: 7,
  classNo: 75,
  lastSubtypeNo: 75,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "sprite": null,
    "set/sprite": null,
    "cachedVx": null,
    "set/cachedVx": null,
    "cachedVy": null,
    "set/cachedVy": null,
    "dx": null,
    "set/dx": null,
    "dy": null,
    "set/dy": null,
    "xStep": null,
    "set/xStep": null,
    "yStep": null,
    "set/yStep": null,
  },
});
const tiles_Location__C2694_VT = mkVTable({
  name: "Location",
  numFields: 2,
  classNo: 76,
  lastSubtypeNo: 76,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_row": null,
    "set/_row": null,
    "_col": null,
    "set/_col": null,
    "tileMap": tiles_Location_tileMap__P2696,
    "column": tiles_Location_column__P2697,
    "row": tiles_Location_row__P2698,
    "x": tiles_Location_x__P2699,
    "y": tiles_Location_y__P2700,
    "left": tiles_Location_left__P2701,
    "top": tiles_Location_top__P2702,
    "tileSet": tiles_Location_tileSet__P2705,
  },
});
const sprites_StaticObstacle__C2499_VT = mkVTable({
  name: "StaticObstacle",
  numFields: 5,
  classNo: 77,
  lastSubtypeNo: 77,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "layer": null,
    "set/layer": null,
    "image": null,
    "set/image": null,
    "tileIndex": null,
    "set/tileIndex": null,
    "top": null,
    "set/top": null,
    "left": null,
    "set/left": null,
    "x": sprites_StaticObstacle_x__P2506,
    "y": sprites_StaticObstacle_y__P2507,
    "height": sprites_StaticObstacle_height__P2508,
    "width": sprites_StaticObstacle_width__P2509,
  },
});
const sprites_BaseSpriteSayRenderer__C2260_VT = mkVTable({
  name: "BaseSpriteSayRenderer",
  numFields: 3,
  classNo: 78,
  lastSubtypeNo: 78,
  maxBgInstances: null,
  methods: {
    "draw": sprites_BaseSpriteSayRenderer_draw__P2262,
    "update": sprites_BaseSpriteSayRenderer_update__P2263,
    "destroy": sprites_BaseSpriteSayRenderer_destroy__P2264,
  },
  iface: {
    "text": null,
    "set/text": null,
    "fgColor": null,
    "set/fgColor": null,
    "bgColor": null,
    "set/bgColor": null,
    "draw": sprites_BaseSpriteSayRenderer_draw__P2262,
    "update": sprites_BaseSpriteSayRenderer_update__P2263,
    "destroy": sprites_BaseSpriteSayRenderer_destroy__P2264,
  },
});

const breakpoints = setupDebugger(1, ["SCREEN_WIDTH___4379","SCREEN_HEIGHT___4380","scoreboardFont___8704","titleFont___8708","input___4453","state___4447","input___4455","scoreFont___4457","pool___9289","pool___34823","random___34834","gameTitle___4439","gameDescription___4440","insertCoinText___4441","rand___48448","collisions___48452","duck___48455","boxColors___48461","boxes___48457","commands___7759","_gameUpdate___8712","difficulty___4444","tick___4443","restartAt___8702","_colorStack___7652","gen___4373","reporters___7464","dirty___7466","textColor___4438","_gameOverText___8711","scoreboardColor___4437","score___4445","high___4446","ALL_COLORS___7649","d___48530","a___48532","nextId___4372"])

return _main___P61793
})
